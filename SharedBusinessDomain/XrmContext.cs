//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DG.XrmContext;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
using System.Linq;
using System.Linq.Expressions;
using System.Runtime.Serialization;

[assembly: ProxyTypesAssembly()]


namespace DG.XrmFramework.BusinessDomain.ServiceContext {
    
    
    /// <summary>
    /// <para>Business that represents a customer or potential customer. The company that is billed in business transactions.</para>
    /// <para>Display Name: Virksomhed</para>
    /// </summary>
    [EntityLogicalName("account")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Account : ExtendedEntity<AccountState, Account_StatusCode> {
        
        public const string EntityLogicalName = "account";
        
        public const int EntityTypeCode = 1;
        
        public Account() : 
                base(EntityLogicalName) {
        }
        
        public Account(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
            set {
                SetId("accountid", value);
            }
        }
        
        /// <summary>
        /// <para>Select a category to indicate whether the customer account is standard or preferred.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("accountcategorycode")]
        [DisplayName("Category")]
        public Account_AccountCategoryCode? AccountCategoryCode {
            get {
                return GetOptionSetValue<Account_AccountCategoryCode>("accountcategorycode");
            }
            set {
                SetOptionSetValue("accountcategorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a classification code to indicate the potential value of the customer account based on the projected return on investment, cooperation level, sales cycle length or other criteria.</para>
        /// <para>Display Name: Classification</para>
        /// </summary>
        [AttributeLogicalName("accountclassificationcode")]
        [DisplayName("Classification")]
        public Account_AccountClassificationCode? AccountClassificationCode {
            get {
                return GetOptionSetValue<Account_AccountClassificationCode>("accountclassificationcode");
            }
            set {
                SetOptionSetValue("accountclassificationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type an ID number or code for the account to quickly search and identify the account in system views.</para>
        /// <para>Display Name: Account Number</para>
        /// </summary>
        [AttributeLogicalName("accountnumber")]
        [DisplayName("Account Number")]
        [MaxLength(20)]
        public string AccountNumber {
            get {
                return GetAttributeValue<string>("accountnumber");
            }
            set {
                SetAttributeValue("accountnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating to indicate the value of the customer account.</para>
        /// <para>Display Name: Account Rating</para>
        /// </summary>
        [AttributeLogicalName("accountratingcode")]
        [DisplayName("Account Rating")]
        public Account_AccountRatingCode? AccountRatingCode {
            get {
                return GetOptionSetValue<Account_AccountRatingCode>("accountratingcode");
            }
            set {
                SetOptionSetValue("accountratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Account_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Account_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Account_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Account_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Account_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Account_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Account_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(200)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Account_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By (IP Address)</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyipaddress")]
        [DisplayName("Created By (IP Address)")]
        [MaxLength(100)]
        public string Adx_CreatedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_createdbyipaddress");
            }
            set {
                SetAttributeValue("adx_createdbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By (User Name)</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyusername")]
        [DisplayName("Created By (User Name)")]
        [MaxLength(100)]
        public string Adx_CreatedByUsername {
            get {
                return GetAttributeValue<string>("adx_createdbyusername");
            }
            set {
                SetAttributeValue("adx_createdbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By (IP Address)</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyipaddress")]
        [DisplayName("Modified By (IP Address)")]
        [MaxLength(100)]
        public string Adx_ModifiedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            set {
                SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By (User Name)</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyusername")]
        [DisplayName("Modified By (User Name)")]
        [MaxLength(100)]
        public string Adx_ModifiedByUsername {
            get {
                return GetAttributeValue<string>("adx_modifiedbyusername");
            }
            set {
                SetAttributeValue("adx_modifiedbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 30 field.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 60 field.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>The base currency equivalent of the aging 90 field.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Select the legal designation or other business type of the account for contracts or reporting purposes.</para>
        /// <para>Display Name: Business Type</para>
        /// </summary>
        [AttributeLogicalName("businesstypecode")]
        [DisplayName("Business Type")]
        public Account_BusinessTypeCode? BusinessTypeCode {
            get {
                return GetOptionSetValue<Account_BusinessTypeCode>("businesstypecode");
            }
            set {
                SetOptionSetValue("businesstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the account. This is a useful reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the credit limit converted to the system's default base currency for reporting purposes.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the credit for the account is on hold. This is a useful reference while addressing the invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size category or range of the account for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Account_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Account_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the account and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Account_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Account_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the default price list associated with the account to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the account, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk email sent through campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but is excluded from email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the account can be added to marketing lists, but will be excluded from the postal mail.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows faxes. If Do Not Allow is selected, the account will be excluded from fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows phone calls. If Do Not Allow is selected, the account will be excluded from phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account allows direct mail. If Do Not Allow is selected, the account will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the account accepts marketing materials, such as brochures or catalogs.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary email address for the account.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the secondary email address for the account.</para>
        /// <para>Display Name: Email Address 2</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Email Address 2")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the account.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the account.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the account.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the account's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteURL {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's primary industry for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Account_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Account_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the account was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Type the market capitalization of the account to identify the company's equity, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Market Capitalization</para>
        /// </summary>
        [AttributeLogicalName("marketcap")]
        [DisplayName("Market Capitalization")]
        public decimal? MarketCap {
            get {
                return GetMoneyValue("marketcap");
            }
            set {
                SetMoneyValue("marketcap", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the market capitalization converted to the system's default base currency.</para>
        /// <para>Display Name: Market Capitalization (Base)</para>
        /// </summary>
        [AttributeLogicalName("marketcap_base")]
        [DisplayName("Market Capitalization (Base)")]
        public decimal? MarketCap_Base {
            get {
                return GetMoneyValue("marketcap_base");
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the master account that the account was merged with.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with another account.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Account Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Account Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the account for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: Number of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("Number of Employees")]
        [Range(0, 1000000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Number of open opportunities against an account and its child accounts.</para>
        /// <para>Display Name: Open Deals</para>
        /// </summary>
        [AttributeLogicalName("opendeals")]
        [DisplayName("Open Deals")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals {
            get {
                return GetAttributeValue<int?>("opendeals");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Open Deals.</para>
        /// <para>Display Name: Open Deals (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_date")]
        [DisplayName("Open Deals (Last Updated On)")]
        public DateTime? OpenDeals_Date {
            get {
                return GetAttributeValue<DateTime?>("opendeals_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Open Deals.</para>
        /// <para>Display Name: Open Deals (State)</para>
        /// </summary>
        [AttributeLogicalName("opendeals_state")]
        [DisplayName("Open Deals (State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenDeals_State {
            get {
                return GetAttributeValue<int?>("opendeals_state");
            }
        }
        
        /// <summary>
        /// <para>Sum of open revenue against an account and its child accounts.</para>
        /// <para>Display Name: Open Revenue</para>
        /// </summary>
        [AttributeLogicalName("openrevenue")]
        [DisplayName("Open Revenue")]
        public decimal? OpenRevenue {
            get {
                return GetMoneyValue("openrevenue");
            }
        }
        
        /// <summary>
        /// <para>Value of the Open Revenue in base currency.</para>
        /// <para>Display Name: Open Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_base")]
        [DisplayName("Open Revenue (Base)")]
        public decimal? OpenRevenue_Base {
            get {
                return GetMoneyValue("openrevenue_base");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Open Revenue.</para>
        /// <para>Display Name: Open Revenue (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_date")]
        [DisplayName("Open Revenue (Last Updated On)")]
        public DateTime? OpenRevenue_Date {
            get {
                return GetAttributeValue<DateTime?>("openrevenue_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Open Revenue.</para>
        /// <para>Display Name: Open Revenue (State)</para>
        /// </summary>
        [AttributeLogicalName("openrevenue_state")]
        [DisplayName("Open Revenue (State)")]
        [Range(-2147483648, 2147483647)]
        public int? OpenRevenue_State {
            get {
                return GetAttributeValue<int?>("openrevenue_state");
            }
        }
        
        /// <summary>
        /// <para>Shows the lead that the account was created from if the account was created by converting a lead in Microsoft Dynamics 365. This is used to relate the account to data on the originating lead for use in reporting and analytics.</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's ownership structure, such as public or private.</para>
        /// <para>Display Name: Ownership</para>
        /// </summary>
        [AttributeLogicalName("ownershipcode")]
        [DisplayName("Ownership")]
        public Account_OwnershipCode? OwnershipCode {
            get {
                return GetOptionSetValue<Account_OwnershipCode>("ownershipcode");
            }
            set {
                SetOptionSetValue("ownershipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the account.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the account.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent account associated with this account to show parent and child businesses in reporting and analytics.</para>
        /// <para>Display Name: Parent Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only. Legacy Microsoft Dynamics CRM 3.0 workflow data.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Account_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Account_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Account_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Account_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Account_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred method of contact.</para>
        /// <para>Display Name: Preferred Method of Contact</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Preferred Method of Contact")]
        public Account_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Account_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the account's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the account's preferred service for reference when you schedule service activities.</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the preferred service representative for reference when you schedule service activities for the account.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary contact for the account to provide quick access to contact details.</para>
        /// <para>Display Name: Primary Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Primary Contact")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company or business name.</para>
        /// <para>Display Name: Account Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Account Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Satori ID for Account</para>
        /// <para>Display Name: Primary Satori ID</para>
        /// </summary>
        [AttributeLogicalName("primarysatoriid")]
        [DisplayName("Primary Satori ID")]
        [MaxLength(200)]
        public string PrimarySatoriId {
            get {
                return GetAttributeValue<string>("primarysatoriid");
            }
            set {
                SetAttributeValue("primarysatoriid", value);
            }
        }
        
        /// <summary>
        /// <para>Primary Twitter ID for Account</para>
        /// <para>Display Name: Primary Twitter ID</para>
        /// </summary>
        [AttributeLogicalName("primarytwitterid")]
        [DisplayName("Primary Twitter ID")]
        [MaxLength(128)]
        public string PrimaryTwitterId {
            get {
                return GetAttributeValue<string>("primarytwitterid");
            }
            set {
                SetAttributeValue("primarytwitterid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue for the account, used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the annual revenue converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the account's primary industry of business, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Account record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the number of shares available to the public for the account. This number is used as an indicator in financial performance analysis.</para>
        /// <para>Display Name: Shares Outstanding</para>
        /// </summary>
        [AttributeLogicalName("sharesoutstanding")]
        [DisplayName("Shares Outstanding")]
        [Range(0, 1000000000)]
        public int? SharesOutstanding {
            get {
                return GetAttributeValue<int?>("sharesoutstanding");
            }
            set {
                SetAttributeValue("sharesoutstanding", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to the account's address to designate the preferred carrier or other delivery option.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Account_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Account_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account is active or inactive. Inactive accounts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AccountState? StateCode {
            get {
                return GetOptionSetValue<AccountState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the account's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Account_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Account_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange at which the account is listed to track their stock and financial performance of the company.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number for this account.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this account.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this account.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the account for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory Code</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory Code")]
        public Account_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Account_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the sales region or territory for the account to make sure the account is assigned to the correct representative and for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the stock exchange symbol for the account to track financial performance of the company. You can click the code entered in this field to access the latest trading information from MSN Money.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to account record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the account.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the account's website URL to get quick details about the company profile.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteURL {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the company name, if specified in Japanese, to make sure the name is pronounced correctly in phone calls and other communications.</para>
        /// <para>Display Name: Yomi Account Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Account Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Overenskomst</para>
        /// </summary>
        [AttributeLogicalName("ff_collectiveagreement")]
        [DisplayName("Overenskomst")]
        public EntityReference ff_collectiveagreement {
            get {
                return GetAttributeValue<EntityReference>("ff_collectiveagreement");
            }
            set {
                SetAttributeValue("ff_collectiveagreement", value);
            }
        }
        
        /// <summary>
        /// <para>Additional name field</para>
        /// <para>Display Name: Name 2</para>
        /// </summary>
        [AttributeLogicalName("ff_name2")]
        [DisplayName("Name 2")]
        [MaxLength(100)]
        public string ff_name2 {
            get {
                return GetAttributeValue<string>("ff_name2");
            }
            set {
                SetAttributeValue("ff_name2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Account associated with Account.</para>
        /// <para>Display Name: Managing Partner</para>
        /// </summary>
        [AttributeLogicalName("msa_managingpartnerid")]
        [DisplayName("Managing Partner")]
        public EntityReference msa_managingpartnerid {
            get {
                return GetAttributeValue<EntityReference>("msa_managingpartnerid");
            }
            set {
                SetAttributeValue("msa_managingpartnerid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the primary time zone that the client works on.</para>
        /// <para>Display Name: Primary Time Zone</para>
        /// </summary>
        [AttributeLogicalName("msdyn_primarytimezone")]
        [DisplayName("Primary Time Zone")]
        [Range(-1500, 1500)]
        public int? msdyn_PrimaryTimeZone {
            get {
                return GetAttributeValue<int?>("msdyn_primarytimezone");
            }
            set {
                SetAttributeValue("msdyn_primarytimezone", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_accountkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_accountkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_accountkpiid");
            }
            set {
                SetAttributeValue("msdyn_accountkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether account is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Sales Acceleration Insights ID</para>
        /// <para>Display Name: Sales Acceleration Insights ID</para>
        /// </summary>
        [AttributeLogicalName("msdyn_salesaccelerationinsightid")]
        [DisplayName("Sales Acceleration Insights ID")]
        public EntityReference msdyn_salesaccelerationinsightid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_salesaccelerationinsightid");
            }
            set {
                SetAttributeValue("msdyn_salesaccelerationinsightid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with account.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        [RelationshipSchemaName("Account_ActivityPointers")]
        public IEnumerable<ActivityPointer> Account_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Account_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Account_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Annotation")]
        public IEnumerable<Annotation> Account_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Account_Annotation", null);
            }
            set {
                SetRelatedEntities("Account_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Appointments")]
        public IEnumerable<Appointment> Account_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Account_Appointments", null);
            }
            set {
                SetRelatedEntities("Account_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_CustomerAddress")]
        public IEnumerable<CustomerAddress> Account_CustomerAddress {
            get {
                return GetRelatedEntities<CustomerAddress>("Account_CustomerAddress", null);
            }
            set {
                SetRelatedEntities("Account_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public IEnumerable<Email> Account_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Account_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public IEnumerable<Email> Account_Email_SendersAccount {
            get {
                return GetRelatedEntities<Email>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntities("Account_Email_SendersAccount", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Emails")]
        public IEnumerable<Email> Account_Emails {
            get {
                return GetRelatedEntities<Email>("Account_Emails", null);
            }
            set {
                SetRelatedEntities("Account_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Phonecalls")]
        public IEnumerable<PhoneCall> Account_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Account_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Account_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Account_Tasks")]
        public IEnumerable<Task> Account_Tasks {
            get {
                return GetRelatedEntities<Task>("Account_Tasks", null);
            }
            set {
                SetRelatedEntities("Account_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("account_master_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_master_account {
            get {
                return GetRelatedEntities<Account>("account_master_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_master_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("account_parent_account", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedaccount_parent_account {
            get {
                return GetRelatedEntities<Account>("account_parent_account", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("account_parent_account", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referenced)]
        public IEnumerable<Account> Referencedmsa_account_managingpartner {
            get {
                return GetRelatedEntities<Account>("msa_account_managingpartner", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("msa_account_managingpartner", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("account_master_account", EntityRole.Referencing)]
        public Account Referencingaccount_master_account {
            get {
                return GetRelatedEntity<Account>("account_master_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_master_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("account_parent_account", EntityRole.Referencing)]
        public Account Referencingaccount_parent_account {
            get {
                return GetRelatedEntity<Account>("account_parent_account", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("account_parent_account", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("msa_managingpartnerid")]
        [RelationshipSchemaName("msa_account_managingpartner", EntityRole.Referencing)]
        public Account Referencingmsa_account_managingpartner {
            get {
                return GetRelatedEntity<Account>("msa_account_managingpartner", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("msa_account_managingpartner", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_IncidentResolutions")]
        public IEnumerable<IncidentResolution> account_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("account_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("account_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("account_activity_parties")]
        public IEnumerable<ActivityParty> account_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("account_activity_parties", null);
            }
            set {
                SetRelatedEntities("account_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("account_entitlement_Account")]
        public IEnumerable<Entitlement> account_entitlement_Account {
            get {
                return GetRelatedEntities<Entitlement>("account_entitlement_Account", null);
            }
            set {
                SetRelatedEntities("account_entitlement_Account", null, value);
            }
        }
        
        [RelationshipSchemaName("account_entitlement_Customer")]
        public IEnumerable<Entitlement> account_entitlement_Customer {
            get {
                return GetRelatedEntities<Entitlement>("account_entitlement_Customer", null);
            }
            set {
                SetRelatedEntities("account_entitlement_Customer", null, value);
            }
        }
        
        [RelationshipSchemaName("account_ff_casenotes")]
        public IEnumerable<ff_casenote> account_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("account_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("account_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("account_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> account_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("account_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("account_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("account_originating_lead")]
        public Lead account_originating_lead {
            get {
                return GetRelatedEntity<Lead>("account_originating_lead", null);
            }
            set {
                SetRelatedEntity("account_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("account_primary_contact")]
        public Contact account_primary_contact {
            get {
                return GetRelatedEntity<Contact>("account_primary_contact", null);
            }
            set {
                SetRelatedEntity("account_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("accountleads_association")]
        public IEnumerable<Lead> accountleads_association {
            get {
                return GetRelatedEntities<Lead>("accountleads_association", null);
            }
            set {
                SetRelatedEntities("accountleads_association", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_accounts")]
        public BusinessUnit business_unit_accounts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntity("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_accounts")]
        public IEnumerable<Contact> contact_customer_accounts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntities("contact_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("ff_collectiveagreement")]
        [RelationshipSchemaName("ff_account_collectiveagreement_ff_collectiveagreement")]
        public ff_collectiveagreement ff_account_collectiveagreement_ff_collectiveagreement {
            get {
                return GetRelatedEntity<ff_collectiveagreement>("ff_account_collectiveagreement_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntity("ff_account_collectiveagreement_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_contact_firm_account")]
        public IEnumerable<Contact> ff_contact_firm_account {
            get {
                return GetRelatedEntities<Contact>("ff_contact_firm_account", null);
            }
            set {
                SetRelatedEntities("ff_contact_firm_account", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_employment_workplace_account")]
        public IEnumerable<ff_employment> ff_employment_workplace_account {
            get {
                return GetRelatedEntities<ff_employment>("ff_employment_workplace_account", null);
            }
            set {
                SetRelatedEntities("ff_employment_workplace_account", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_company_account")]
        public IEnumerable<Incident> ff_incident_company_account {
            get {
                return GetRelatedEntities<Incident>("ff_incident_company_account", null);
            }
            set {
                SetRelatedEntities("ff_incident_company_account", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_positionoftrust_workplace_account")]
        public IEnumerable<ff_positionoftrust> ff_positionoftrust_workplace_account {
            get {
                return GetRelatedEntities<ff_positionoftrust>("ff_positionoftrust_workplace_account", null);
            }
            set {
                SetRelatedEntities("ff_positionoftrust_workplace_account", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_customer_accounts")]
        public IEnumerable<Incident> incident_customer_accounts {
            get {
                return GetRelatedEntities<Incident>("incident_customer_accounts", null);
            }
            set {
                SetRelatedEntities("incident_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_customer_accounts")]
        public IEnumerable<Lead> lead_customer_accounts {
            get {
                return GetRelatedEntities<Lead>("lead_customer_accounts", null);
            }
            set {
                SetRelatedEntities("lead_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_parent_account")]
        public IEnumerable<Lead> lead_parent_account {
            get {
                return GetRelatedEntities<Lead>("lead_parent_account", null);
            }
            set {
                SetRelatedEntities("lead_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public SystemUser lk_accountbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public SystemUser lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public SystemUser lk_accountbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public SystemUser lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("msa_contact_managingpartner")]
        public IEnumerable<Contact> msa_contact_managingpartner {
            get {
                return GetRelatedEntities<Contact>("msa_contact_managingpartner", null);
            }
            set {
                SetRelatedEntities("msa_contact_managingpartner", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_customer_accounts")]
        public IEnumerable<Opportunity> opportunity_customer_accounts {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_customer_accounts", null);
            }
            set {
                SetRelatedEntities("opportunity_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_parent_account")]
        public IEnumerable<Opportunity> opportunity_parent_account {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_parent_account", null);
            }
            set {
                SetRelatedEntities("opportunity_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_accounts")]
        public SystemUser system_user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_accounts", null);
            }
            set {
                SetRelatedEntity("system_user_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_accounts")]
        public Team team_accounts {
            get {
                return GetRelatedEntity<Team>("team_accounts", null);
            }
            set {
                SetRelatedEntity("team_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_accounts")]
        public SystemUser user_accounts {
            get {
                return GetRelatedEntity<SystemUser>("user_accounts", null);
            }
            set {
                SetRelatedEntity("user_accounts", null, value);
            }
        }
        
        public static Account Retrieve(IOrganizationService service, Guid id, params Expression<Func<Account,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Accountkey'</para>
        /// </summary>
        public static Account Retrieve_ff_accountkey(IOrganizationService service, string AccountNumber, params Expression<Func<Account,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("accountnumber", AccountNumber);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Accountkey'</para>
        /// </summary>
        public void AltKey_ff_accountkey(string AccountNumber) {
            KeyAttributes.Clear();
            KeyAttributes.Add("accountnumber", AccountNumber);
        }
    }
    
    /// <summary>
    /// <para>description.</para>
    /// <para>Display Name: AccountLeads</para>
    /// </summary>
    [EntityLogicalName("accountleads")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class AccountLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "accountleads";
        
        public const string RelationshipSchemaName = "AccountLeads";
        
        public const int EntityTypeCode = 16;
        
        public AccountLeads() : 
                base(EntityLogicalName) {
        }
        
        public AccountLeads(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("accountleadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("accountleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the lead for the account.</para>
        /// </summary>
        [AttributeLogicalName("accountleadid")]
        public Guid? AccountLeadId {
            get {
                return GetAttributeValue<Guid?>("accountleadid");
            }
            set {
                SetId("accountleadid", value);
            }
        }
        
        [AttributeLogicalName("accountid")]
        public Guid? AccountId {
            get {
                return GetAttributeValue<Guid?>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("leadid")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static AccountLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<AccountLeads,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person or group associated with an activity. An activity can have multiple activity parties.</para>
    /// <para>Display Name: Activity Party</para>
    /// </summary>
    [EntityLogicalName("activityparty")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityParty : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "activityparty";
        
        public const int EntityTypeCode = 135;
        
        public ActivityParty() : 
                base(EntityLogicalName) {
        }
        
        public ActivityParty(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("partyidname");
            }
        }
        
        [AttributeLogicalName("activitypartyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity party.</para>
        /// <para>Display Name: Activity Party</para>
        /// </summary>
        [AttributeLogicalName("activitypartyid")]
        [DisplayName("Activity Party")]
        public Guid? ActivityPartyId {
            get {
                return GetAttributeValue<Guid?>("activitypartyid");
            }
            set {
                SetId("activitypartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity associated with the activity party. (A "party" is any person who is associated with an activity.)</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public EntityReference ActivityId {
            get {
                return GetAttributeValue<EntityReference>("activityid");
            }
            set {
                SetAttributeValue("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Email address to which an email is delivered, and which is associated with the target entity.</para>
        /// <para>Display Name: Address </para>
        /// </summary>
        [AttributeLogicalName("addressused")]
        [DisplayName("Address ")]
        [MaxLength(320)]
        public string AddressUsed {
            get {
                return GetAttributeValue<string>("addressused");
            }
            set {
                SetAttributeValue("addressused", value);
            }
        }
        
        /// <summary>
        /// <para>Email address column number from associated party.</para>
        /// <para>Display Name: Email column number of party</para>
        /// </summary>
        [AttributeLogicalName("addressusedemailcolumnnumber")]
        [DisplayName("Email column number of party")]
        [Range(1, 2147483647)]
        public int? AddressUsedEmailColumnNumber {
            get {
                return GetAttributeValue<int?>("addressusedemailcolumnnumber");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending email to the activity party.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEmail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending faxes to the activity party.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow phone calls to the lead.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow sending postal mail to the lead.</para>
        /// <para>Display Name: Do not allow Postal Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Postal Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
        }
        
        /// <summary>
        /// <para>Amount of effort used by the resource in a service appointment activity.</para>
        /// <para>Display Name: Effort</para>
        /// </summary>
        [AttributeLogicalName("effort")]
        [DisplayName("Effort")]
        public double? Effort {
            get {
                return GetAttributeValue<double?>("effort");
            }
            set {
                SetAttributeValue("effort", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Exchange Entry</para>
        /// </summary>
        [AttributeLogicalName("exchangeentryid")]
        [DisplayName("Exchange Entry")]
        [MaxLength(1024)]
        public string ExchangeEntryId {
            get {
                return GetAttributeValue<string>("exchangeentryid");
            }
            set {
                SetAttributeValue("exchangeentryid", value);
            }
        }
        
        /// <summary>
        /// <para>The external id used when the party does not have an email address.</para>
        /// <para>Display Name: External Id</para>
        /// </summary>
        [AttributeLogicalName("externalid")]
        [DisplayName("External Id")]
        [MaxLength(200)]
        public string ExternalId {
            get {
                return GetAttributeValue<string>("externalid");
            }
            set {
                SetAttributeValue("externalid", value);
            }
        }
        
        /// <summary>
        /// <para>The external id type used when the party does not have an email address.</para>
        /// <para>Display Name: External Id Type</para>
        /// </summary>
        [AttributeLogicalName("externalidtype")]
        [DisplayName("External Id Type")]
        [MaxLength(200)]
        public string ExternalIdType {
            get {
                return GetAttributeValue<string>("externalidtype");
            }
            set {
                SetAttributeValue("externalidtype", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public ActivityParty_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ActivityParty_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the underlying entity record is deleted.</para>
        /// <para>Display Name: Is Party Deleted</para>
        /// </summary>
        [AttributeLogicalName("ispartydeleted")]
        [DisplayName("Is Party Deleted")]
        public bool? IsPartyDeleted {
            get {
                return GetAttributeValue<bool?>("ispartydeleted");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity_party.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Role of the person in the activity, such as sender, to, cc, bcc, required, optional, organizer, regarding, or owner.</para>
        /// <para>Display Name: Participation Type</para>
        /// </summary>
        [AttributeLogicalName("participationtypemask")]
        [DisplayName("Participation Type")]
        public ActivityParty_ParticipationTypeMask? ParticipationTypeMask {
            get {
                return GetOptionSetValue<ActivityParty_ParticipationTypeMask>("participationtypemask");
            }
            set {
                SetOptionSetValue("participationtypemask", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the party associated with the activity.</para>
        /// <para>Display Name: Party</para>
        /// </summary>
        [AttributeLogicalName("partyid")]
        [DisplayName("Party")]
        public EntityReference PartyId {
            get {
                return GetAttributeValue<EntityReference>("partyid");
            }
            set {
                SetAttributeValue("partyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the resource specification for the activity party.</para>
        /// <para>Display Name: Resource Specification</para>
        /// </summary>
        [AttributeLogicalName("resourcespecid")]
        [DisplayName("Resource Specification")]
        public EntityReference ResourceSpecId {
            get {
                return GetAttributeValue<EntityReference>("resourcespecid");
            }
            set {
                SetAttributeValue("resourcespecid", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
        }
        
        /// <summary>
        /// <para>The name of the party to be used when the party is not resolved to an entity.</para>
        /// <para>Display Name: Unresolved Party Name</para>
        /// </summary>
        [AttributeLogicalName("unresolvedpartyname")]
        [DisplayName("Unresolved Party Name")]
        [MaxLength(200)]
        public string UnresolvedPartyName {
            get {
                return GetAttributeValue<string>("unresolvedpartyname");
            }
            set {
                SetAttributeValue("unresolvedpartyname", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("account_activity_parties")]
        public Account account_activity_parties {
            get {
                return GetRelatedEntity<Account>("account_activity_parties", null);
            }
            set {
                SetRelatedEntity("account_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activitypointer_activity_parties")]
        public ActivityPointer activitypointer_activity_parties {
            get {
                return GetRelatedEntity<ActivityPointer>("activitypointer_activity_parties", null);
            }
            set {
                SetRelatedEntity("activitypointer_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("appointment_activity_parties")]
        public Appointment appointment_activity_parties {
            get {
                return GetRelatedEntity<Appointment>("appointment_activity_parties", null);
            }
            set {
                SetRelatedEntity("appointment_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("contact_activity_parties")]
        public Contact contact_activity_parties {
            get {
                return GetRelatedEntity<Contact>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntity("contact_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("email_activity_parties")]
        public Email email_activity_parties {
            get {
                return GetRelatedEntity<Email>("email_activity_parties", null);
            }
            set {
                SetRelatedEntity("email_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("entitlement_ActivityParties")]
        public Entitlement entitlement_ActivityParties {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ActivityParties", null);
            }
            set {
                SetRelatedEntity("entitlement_ActivityParties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("ff_casenote_activity_parties")]
        public ff_casenote ff_casenote_activity_parties {
            get {
                return GetRelatedEntity<ff_casenote>("ff_casenote_activity_parties", null);
            }
            set {
                SetRelatedEntity("ff_casenote_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("ff_medlemsnote_activity_parties")]
        public ff_medlemsnote ff_medlemsnote_activity_parties {
            get {
                return GetRelatedEntity<ff_medlemsnote>("ff_medlemsnote_activity_parties", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("incident_activity_parties")]
        public Incident incident_activity_parties {
            get {
                return GetRelatedEntity<Incident>("incident_activity_parties", null);
            }
            set {
                SetRelatedEntity("incident_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("incidentresolution_activity_parties")]
        public IncidentResolution incidentresolution_activity_parties {
            get {
                return GetRelatedEntity<IncidentResolution>("incidentresolution_activity_parties", null);
            }
            set {
                SetRelatedEntity("incidentresolution_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("lead_activity_parties")]
        public Lead lead_activity_parties {
            get {
                return GetRelatedEntity<Lead>("lead_activity_parties", null);
            }
            set {
                SetRelatedEntity("lead_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("opportunity_activity_parties")]
        public Opportunity opportunity_activity_parties {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_activity_parties", null);
            }
            set {
                SetRelatedEntity("opportunity_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("phonecall_activity_parties")]
        public PhoneCall phonecall_activity_parties {
            get {
                return GetRelatedEntity<PhoneCall>("phonecall_activity_parties", null);
            }
            set {
                SetRelatedEntity("phonecall_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("queue_activity_parties")]
        public Queue queue_activity_parties {
            get {
                return GetRelatedEntity<Queue>("queue_activity_parties", null);
            }
            set {
                SetRelatedEntity("queue_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("partyid")]
        [RelationshipSchemaName("system_user_activity_parties")]
        public SystemUser system_user_activity_parties {
            get {
                return GetRelatedEntity<SystemUser>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntity("system_user_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("task_activity_parties")]
        public Task task_activity_parties {
            get {
                return GetRelatedEntity<Task>("task_activity_parties", null);
            }
            set {
                SetRelatedEntity("task_activity_parties", null, value);
            }
        }
        
        public static ActivityParty Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityParty,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Task performed, or to be performed, by a user. An activity is any action for which an entry can be made on a calendar.</para>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [EntityLogicalName("activitypointer")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ActivityPointer : ExtendedEntity<ActivityPointerState, ActivityPointer_StatusCode> {
        
        public const string EntityLogicalName = "activitypointer";
        
        public const int EntityTypeCode = 4200;
        
        public ActivityPointer() : 
                base(EntityLogicalName) {
        }
        
        public ActivityPointer(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity.</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was created.</para>
        /// <para>Display Name: Date Created</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Date Created")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the activity.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Formatted scheduled end time of the activity.</para>
        /// <para>Display Name: Formatted End Date</para>
        /// </summary>
        [AttributeLogicalName("formattedscheduledend")]
        [DisplayName("Formatted End Date")]
        public DateTime? FormattedScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("formattedscheduledend");
            }
        }
        
        /// <summary>
        /// <para>Formatted scheduled start time of the activity.</para>
        /// <para>Display Name: Formatted Start Date</para>
        /// </summary>
        [AttributeLogicalName("formattedscheduledstart")]
        [DisplayName("Formatted Start Date")]
        public DateTime? FormattedScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("formattedscheduledstart");
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public ActivityPointer_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ActivityPointer_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of user who last modified the activity.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when activity was last modified.</para>
        /// <para>Display Name: Last Updated</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Last Updated")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public ActivityPointer_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<ActivityPointer_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of an associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the activity.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public ActivityPointerState? StateCode {
            get {
                return GetOptionSetValue<ActivityPointerState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ActivityPointer_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<ActivityPointer_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>All activity parties associated with this activity.</para>
        /// <para>Display Name: All Activity Parties</para>
        /// </summary>
        [AttributeLogicalName("allparties")]
        [DisplayName("All Activity Parties")]
        public IEnumerable<ActivityParty> allparties {
            get {
                return GetEntityCollection<ActivityParty>("allparties");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_ActivityPointers")]
        public Account Account_ActivityPointers {
            get {
                return GetRelatedEntity<Account>("Account_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Account_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("ActivityPointer_QueueItem")]
        public IEnumerable<QueueItem> ActivityPointer_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("ActivityPointer_QueueItem", null);
            }
            set {
                SetRelatedEntities("ActivityPointer_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_ActivityPointers")]
        public Contact Contact_ActivityPointers {
            get {
                return GetRelatedEntity<Contact>("Contact_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Contact_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_ActivityPointers")]
        public Incident Incident_ActivityPointers {
            get {
                return GetRelatedEntity<Incident>("Incident_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Incident_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_ActivityPointers")]
        public Lead Lead_ActivityPointers {
            get {
                return GetRelatedEntity<Lead>("Lead_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Lead_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_ActivityPointers")]
        public Opportunity Opportunity_ActivityPointers {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("Opportunity_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_appointment")]
        public IEnumerable<Appointment> activity_pointer_appointment {
            get {
                return GetRelatedEntities<Appointment>("activity_pointer_appointment", null);
            }
            set {
                SetRelatedEntities("activity_pointer_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_email")]
        public IEnumerable<Email> activity_pointer_email {
            get {
                return GetRelatedEntities<Email>("activity_pointer_email", null);
            }
            set {
                SetRelatedEntities("activity_pointer_email", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_ff_casenote")]
        public IEnumerable<ff_casenote> activity_pointer_ff_casenote {
            get {
                return GetRelatedEntities<ff_casenote>("activity_pointer_ff_casenote", null);
            }
            set {
                SetRelatedEntities("activity_pointer_ff_casenote", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_ff_medlemsnote")]
        public IEnumerable<ff_medlemsnote> activity_pointer_ff_medlemsnote {
            get {
                return GetRelatedEntities<ff_medlemsnote>("activity_pointer_ff_medlemsnote", null);
            }
            set {
                SetRelatedEntities("activity_pointer_ff_medlemsnote", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_incident_resolution")]
        public IEnumerable<IncidentResolution> activity_pointer_incident_resolution {
            get {
                return GetRelatedEntities<IncidentResolution>("activity_pointer_incident_resolution", null);
            }
            set {
                SetRelatedEntities("activity_pointer_incident_resolution", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_phonecall")]
        public IEnumerable<PhoneCall> activity_pointer_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("activity_pointer_phonecall", null);
            }
            set {
                SetRelatedEntities("activity_pointer_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("activity_pointer_task")]
        public IEnumerable<Task> activity_pointer_task {
            get {
                return GetRelatedEntities<Task>("activity_pointer_task", null);
            }
            set {
                SetRelatedEntities("activity_pointer_task", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_activity_parties")]
        public IEnumerable<ActivityParty> activitypointer_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("activitypointer_activity_parties", null);
            }
            set {
                SetRelatedEntities("activitypointer_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("activitypointer_sendermailboxid_mailbox")]
        public Mailbox activitypointer_sendermailboxid_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("activitypointer_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntity("activitypointer_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_activitypointer")]
        public BusinessUnit business_unit_activitypointer {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_activitypointer", null);
            }
            set {
                SetRelatedEntity("business_unit_activitypointer", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_ActivityPointers")]
        public Entitlement entitlement_ActivityPointers {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("entitlement_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_ActivityPointers")]
        public ff_activities ff_activities_ActivityPointers {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_ActivityPointers", null);
            }
            set {
                SetRelatedEntity("ff_activities_ActivityPointers", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_activitypointer_createdby")]
        public SystemUser lk_activitypointer_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_createdby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
        public SystemUser lk_activitypointer_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_activitypointer_modifiedby")]
        public SystemUser lk_activitypointer_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
        public SystemUser lk_activitypointer_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_activitypointer_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_activitypointer_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_activity")]
        public Team team_activity {
            get {
                return GetRelatedEntity<Team>("team_activity", null);
            }
            set {
                SetRelatedEntity("team_activity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_activity")]
        public SystemUser user_activity {
            get {
                return GetRelatedEntity<SystemUser>("user_activity", null);
            }
            set {
                SetRelatedEntity("user_activity", null, value);
            }
        }
        
        public static ActivityPointer Retrieve(IOrganizationService service, Guid id, params Expression<Func<ActivityPointer,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Note that is attached to one or more objects, including other notes.</para>
    /// <para>Display Name: Note</para>
    /// </summary>
    [EntityLogicalName("annotation")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Annotation : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "annotation";
        
        public const int EntityTypeCode = 5;
        
        public Annotation() : 
                base(EntityLogicalName) {
        }
        
        public Annotation(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("annotationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("annotationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the note.</para>
        /// <para>Display Name: Note</para>
        /// </summary>
        [AttributeLogicalName("annotationid")]
        [DisplayName("Note")]
        public Guid? AnnotationId {
            get {
                return GetAttributeValue<Guid?>("annotationid");
            }
            set {
                SetId("annotationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the note.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the note was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the annotation.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Contents of the note's attachment.</para>
        /// <para>Display Name: Document</para>
        /// </summary>
        [AttributeLogicalName("documentbody")]
        [DisplayName("Document")]
        [MaxLength(1073741823)]
        public string DocumentBody {
            get {
                return GetAttributeValue<string>("documentbody");
            }
            set {
                SetAttributeValue("documentbody", value);
            }
        }
        
        /// <summary>
        /// <para>File name of the note.</para>
        /// <para>Display Name: File Name</para>
        /// </summary>
        [AttributeLogicalName("filename")]
        [DisplayName("File Name")]
        [MaxLength(255)]
        public string FileName {
            get {
                return GetAttributeValue<string>("filename");
            }
            set {
                SetAttributeValue("filename", value);
            }
        }
        
        /// <summary>
        /// <para>File size of the note.</para>
        /// <para>Display Name: File Size (Bytes)</para>
        /// </summary>
        [AttributeLogicalName("filesize")]
        [DisplayName("File Size (Bytes)")]
        [Range(0, 1000000000)]
        public int? FileSize {
            get {
                return GetAttributeValue<int?>("filesize");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Specifies whether the note is an attachment.</para>
        /// <para>Display Name: Is Document</para>
        /// </summary>
        [AttributeLogicalName("isdocument")]
        [DisplayName("Is Document")]
        public bool? IsDocument {
            get {
                return GetAttributeValue<bool?>("isdocument");
            }
            set {
                SetAttributeValue("isdocument", value);
            }
        }
        
        /// <summary>
        /// <para>Language identifier for the note.</para>
        /// <para>Display Name: Language ID</para>
        /// </summary>
        [AttributeLogicalName("langid")]
        [DisplayName("Language ID")]
        [MaxLength(2)]
        public string LangId {
            get {
                return GetAttributeValue<string>("langid");
            }
            set {
                SetAttributeValue("langid", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the note's attachment.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the note.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the note was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the annotation.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Text of the note.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("notetext")]
        [DisplayName("Description")]
        public string NoteText {
            get {
                return GetAttributeValue<string>("notetext");
            }
            set {
                SetAttributeValue("notetext", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the note is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        [DisplayName("Regarding")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
            set {
                SetAttributeValue("objectid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of entity with which the note is associated.</para>
        /// <para>Display Name: Object Type </para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Object Type ")]
        public string ObjectTypeCode {
            get {
                return GetAttributeValue<string>("objecttypecode");
            }
            set {
                SetAttributeValue("objecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the note.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the note.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the note.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the note.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Prefix of the file pointer in blob storage.</para>
        /// <para>Display Name: Prefix</para>
        /// </summary>
        [AttributeLogicalName("prefix")]
        [DisplayName("Prefix")]
        [MaxLength(10)]
        public string Prefix {
            get {
                return GetAttributeValue<string>("prefix");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the note.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Title")]
        [MaxLength(500)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>workflow step id associated with the note.</para>
        /// <para>Display Name: Step Id</para>
        /// </summary>
        [AttributeLogicalName("stepid")]
        [DisplayName("Step Id")]
        [MaxLength(32)]
        public string StepId {
            get {
                return GetAttributeValue<string>("stepid");
            }
            set {
                SetAttributeValue("stepid", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the note.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Title")]
        [MaxLength(500)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the note.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Determines whether annotation record was autonomously created on conversation wrap up for the linked case record.</para>
        /// <para>Display Name: Is autonomously created</para>
        /// </summary>
        [AttributeLogicalName("isautonomouslycreated")]
        [DisplayName("Is autonomously created")]
        public bool? isAutonomouslyCreated {
            get {
                return GetAttributeValue<bool?>("isautonomouslycreated");
            }
            set {
                SetAttributeValue("isautonomouslycreated", value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Account_Annotation")]
        public Account Account_Annotation {
            get {
                return GetRelatedEntity<Account>("Account_Annotation", null);
            }
            set {
                SetRelatedEntity("Account_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Appointment_Annotation")]
        public Appointment Appointment_Annotation {
            get {
                return GetRelatedEntity<Appointment>("Appointment_Annotation", null);
            }
            set {
                SetRelatedEntity("Appointment_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Contact_Annotation")]
        public Contact Contact_Annotation {
            get {
                return GetRelatedEntity<Contact>("Contact_Annotation", null);
            }
            set {
                SetRelatedEntity("Contact_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Email_Annotation")]
        public Email Email_Annotation {
            get {
                return GetRelatedEntity<Email>("Email_Annotation", null);
            }
            set {
                SetRelatedEntity("Email_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("IncidentResolution_Annotation")]
        public IncidentResolution IncidentResolution_Annotation {
            get {
                return GetRelatedEntity<IncidentResolution>("IncidentResolution_Annotation", null);
            }
            set {
                SetRelatedEntity("IncidentResolution_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Incident_Annotation")]
        public Incident Incident_Annotation {
            get {
                return GetRelatedEntity<Incident>("Incident_Annotation", null);
            }
            set {
                SetRelatedEntity("Incident_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Lead_Annotation")]
        public Lead Lead_Annotation {
            get {
                return GetRelatedEntity<Lead>("Lead_Annotation", null);
            }
            set {
                SetRelatedEntity("Lead_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Mailbox_Annotation")]
        public Mailbox Mailbox_Annotation {
            get {
                return GetRelatedEntity<Mailbox>("Mailbox_Annotation", null);
            }
            set {
                SetRelatedEntity("Mailbox_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Opportunity_Annotation")]
        public Opportunity Opportunity_Annotation {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Annotation", null);
            }
            set {
                SetRelatedEntity("Opportunity_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("PhoneCall_Annotation")]
        public PhoneCall PhoneCall_Annotation {
            get {
                return GetRelatedEntity<PhoneCall>("PhoneCall_Annotation", null);
            }
            set {
                SetRelatedEntity("PhoneCall_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Task_Annotation")]
        public Task Task_Annotation {
            get {
                return GetRelatedEntity<Task>("Task_Annotation", null);
            }
            set {
                SetRelatedEntity("Task_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("annotation_owning_user")]
        public SystemUser annotation_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("annotation_owning_user", null);
            }
            set {
                SetRelatedEntity("annotation_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_annotations")]
        public BusinessUnit business_unit_annotations {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_annotations", null);
            }
            set {
                SetRelatedEntity("business_unit_annotations", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("entitlement_Annotations")]
        public Entitlement entitlement_Annotations {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Annotations", null);
            }
            set {
                SetRelatedEntity("entitlement_Annotations", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ff_casenote_Annotations")]
        public ff_casenote ff_casenote_Annotations {
            get {
                return GetRelatedEntity<ff_casenote>("ff_casenote_Annotations", null);
            }
            set {
                SetRelatedEntity("ff_casenote_Annotations", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ff_medlemsnote_Annotations")]
        public ff_medlemsnote ff_medlemsnote_Annotations {
            get {
                return GetRelatedEntity<ff_medlemsnote>("ff_medlemsnote_Annotations", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_Annotations", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_annotationbase_createdby")]
        public SystemUser lk_annotationbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_annotationbase_createdonbehalfby")]
        public SystemUser lk_annotationbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_annotationbase_modifiedby")]
        public SystemUser lk_annotationbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_annotationbase_modifiedonbehalfby")]
        public SystemUser lk_annotationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_annotationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_annotationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_annotations")]
        public Team team_annotations {
            get {
                return GetRelatedEntity<Team>("team_annotations", null);
            }
            set {
                SetRelatedEntity("team_annotations", null, value);
            }
        }
        
        public static Annotation Retrieve(IOrganizationService service, Guid id, params Expression<Func<Annotation,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Commitment representing a time interval with start/end times and duration.</para>
    /// <para>Display Name: Appointment</para>
    /// </summary>
    [EntityLogicalName("appointment")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Appointment : ExtendedEntity<AppointmentState, Appointment_StatusCode> {
        
        public const string EntityLogicalName = "appointment";
        
        public const int EntityTypeCode = 4201;
        
        public Appointment() : 
                base(EntityLogicalName) {
        }
        
        public Appointment(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the appointment.</para>
        /// <para>Display Name: Appointment</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Appointment")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Shows the value selected in the Duration field on the appointment at the time that the appointment is closed as completed. The duration is used to report the time spent on the activity.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the appointment. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the appointment.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the appointment. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the appointment.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of attachments on the appointment.</para>
        /// <para>Display Name: Attachment Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentcount")]
        [DisplayName("Attachment Count")]
        [Range(0, 2147483647)]
        public int? AttachmentCount {
            get {
                return GetAttributeValue<int?>("attachmentcount");
            }
        }
        
        /// <summary>
        /// <para>Select the error code to identify issues with the outlook item recipients or attachments, such as blocked attachments.</para>
        /// <para>Display Name: AttachmentErrors</para>
        /// </summary>
        [AttributeLogicalName("attachmenterrors")]
        [DisplayName("AttachmentErrors")]
        public Appointment_AttachmentErrors? AttachmentErrors {
            get {
                return GetOptionSetValue<Appointment_AttachmentErrors>("attachmenterrors");
            }
            set {
                SetOptionSetValue("attachmenterrors", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the appointment type, such as sales demo, prospect call, or service call, to tie the appointment to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the purpose of the appointment.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Formatted scheduled end time of the appointment.</para>
        /// <para>Display Name: Formatted End Date</para>
        /// </summary>
        [AttributeLogicalName("formattedscheduledend")]
        [DisplayName("Formatted End Date")]
        public DateTime? FormattedScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("formattedscheduledend");
            }
        }
        
        /// <summary>
        /// <para>Formatted scheduled start time of the appointment.</para>
        /// <para>Display Name: Formatted Start Date</para>
        /// </summary>
        [AttributeLogicalName("formattedscheduledstart")]
        [DisplayName("Formatted Start Date")]
        public DateTime? FormattedScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("formattedscheduledstart");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the appointment in Microsoft Office Outlook. The ID is used to synchronize the appointment between Microsoft Dynamics 365 and the correct Exchange account.</para>
        /// <para>Display Name: Outlook Appointment</para>
        /// </summary>
        [AttributeLogicalName("globalobjectid")]
        [DisplayName("Outlook Appointment")]
        [MaxLength(300)]
        public string GlobalObjectId {
            get {
                return GetAttributeValue<string>("globalobjectid");
            }
            set {
                SetAttributeValue("globalobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Appointment Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Appointment Type")]
        public Appointment_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<Appointment_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Select whether the appointment is an all-day event to make sure that the required resources are scheduled for the full day.</para>
        /// <para>Display Name: All Day Event</para>
        /// </summary>
        [AttributeLogicalName("isalldayevent")]
        [DisplayName("All Day Event")]
        public bool? IsAllDayEvent {
            get {
                return GetAttributeValue<bool?>("isalldayevent");
            }
            set {
                SetAttributeValue("isalldayevent", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment is a draft.</para>
        /// <para>Display Name: IsDraft</para>
        /// </summary>
        [AttributeLogicalName("isdraft")]
        [DisplayName("IsDraft")]
        public bool? IsDraft {
            get {
                return GetAttributeValue<bool?>("isdraft");
            }
            set {
                SetAttributeValue("isdraft", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Displays whether or not this is an online meeting.</para>
        /// <para>Display Name: Is Online Meeting</para>
        /// </summary>
        [AttributeLogicalName("isonlinemeeting")]
        [DisplayName("Is Online Meeting")]
        public bool? IsOnlineMeeting {
            get {
                return GetAttributeValue<bool?>("isonlinemeeting");
            }
            set {
                SetAttributeValue("isonlinemeeting", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the appointment was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Type the location where the appointment will take place, such as a conference room or customer office.</para>
        /// <para>Display Name: Location</para>
        /// </summary>
        [AttributeLogicalName("location")]
        [DisplayName("Location")]
        [MaxLength(200)]
        public string Location {
            get {
                return GetAttributeValue<string>("location");
            }
            set {
                SetAttributeValue("location", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. </para>
        /// <para>Display Name: Modified Fields Mask</para>
        /// </summary>
        [AttributeLogicalName("modifiedfieldsmask")]
        [DisplayName("Modified Fields Mask")]
        public string ModifiedFieldsMask {
            get {
                return GetAttributeValue<string>("modifiedfieldsmask");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the online meeting chat id.</para>
        /// <para>Display Name: Online Meeting Chat Id</para>
        /// </summary>
        [AttributeLogicalName("onlinemeetingchatid")]
        [DisplayName("Online Meeting Chat Id")]
        [MaxLength(200)]
        public string OnlineMeetingChatId {
            get {
                return GetAttributeValue<string>("onlinemeetingchatid");
            }
            set {
                SetAttributeValue("onlinemeetingchatid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the online meeting id.</para>
        /// <para>Display Name: Online Meeting Id</para>
        /// </summary>
        [AttributeLogicalName("onlinemeetingid")]
        [DisplayName("Online Meeting Id")]
        [MaxLength(300)]
        public string OnlineMeetingId {
            get {
                return GetAttributeValue<string>("onlinemeetingid");
            }
            set {
                SetAttributeValue("onlinemeetingid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the online meeting join url.</para>
        /// <para>Display Name: Online Meeting Join Url</para>
        /// </summary>
        [AttributeLogicalName("onlinemeetingjoinurl")]
        [DisplayName("Online Meeting Join Url")]
        [MaxLength(600)]
        public string OnlineMeetingJoinUrl {
            get {
                return GetAttributeValue<string>("onlinemeetingjoinurl");
            }
            set {
                SetAttributeValue("onlinemeetingjoinurl", value);
            }
        }
        
        /// <summary>
        /// <para>Displays the online meeting type.</para>
        /// <para>Display Name: Online Meeting Type</para>
        /// </summary>
        [AttributeLogicalName("onlinemeetingtype")]
        [DisplayName("Online Meeting Type")]
        public onlinemeetingtype? OnlineMeetingType {
            get {
                return GetOptionSetValue<onlinemeetingtype>("onlinemeetingtype");
            }
            set {
                SetOptionSetValue("onlinemeetingtype", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are not needed at the appointment, but can optionally attend.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user who is in charge of coordinating or leading the appointment to make sure the appointment is displayed in the user's My Activities view.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>The original start date of the appointment.</para>
        /// <para>Display Name: Original Start Date</para>
        /// </summary>
        [AttributeLogicalName("originalstartdate")]
        [DisplayName("Original Start Date")]
        public DateTime? OriginalStartDate {
            get {
                return GetAttributeValue<DateTime?>("originalstartdate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Microsoft Office Outlook appointment owner that correlates to the PR_OWNER_APPT_ID MAPI property.</para>
        /// <para>Display Name: Outlook Appointment Owner</para>
        /// </summary>
        [AttributeLogicalName("outlookownerapptid")]
        [DisplayName("Outlook Appointment Owner")]
        [Range(-2147483648, 2147483647)]
        public int? OutlookOwnerApptId {
            get {
                return GetAttributeValue<int?>("outlookownerapptid");
            }
            set {
                SetAttributeValue("outlookownerapptid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the appointment.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the appointment.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Appointment_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Appointment_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the appointment relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, user, or other equipment resources that are required to attend the appointment.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the appointment record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this appointment. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Shows the expected duration of the appointment, in minutes.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about the timing of the appointment.</para>
        /// <para>Display Name: End Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("End Time")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the timing of the appointment.</para>
        /// <para>Display Name: Start Time</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Time")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for an associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the appointment is open, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public AppointmentState? StateCode {
            get {
                return GetOptionSetValue<AppointmentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the appointment's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Appointment_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Appointment_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the appointment type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the appointment.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the appointment.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Appointments")]
        public Account Account_Appointments {
            get {
                return GetRelatedEntity<Account>("Account_Appointments", null);
            }
            set {
                SetRelatedEntity("Account_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Appointment_Annotation")]
        public IEnumerable<Annotation> Appointment_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Appointment_Annotation", null);
            }
            set {
                SetRelatedEntities("Appointment_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Appointment_QueueItem")]
        public IEnumerable<QueueItem> Appointment_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Appointment_QueueItem", null);
            }
            set {
                SetRelatedEntities("Appointment_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Appointments")]
        public Contact Contact_Appointments {
            get {
                return GetRelatedEntity<Contact>("Contact_Appointments", null);
            }
            set {
                SetRelatedEntity("Contact_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Appointments")]
        public Incident Incident_Appointments {
            get {
                return GetRelatedEntity<Incident>("Incident_Appointments", null);
            }
            set {
                SetRelatedEntity("Incident_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Appointments")]
        public Lead Lead_Appointments {
            get {
                return GetRelatedEntity<Lead>("Lead_Appointments", null);
            }
            set {
                SetRelatedEntity("Lead_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Appointments")]
        public Opportunity Opportunity_Appointments {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Appointments", null);
            }
            set {
                SetRelatedEntity("Opportunity_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_appointment")]
        public ActivityPointer activity_pointer_appointment {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_appointment", null);
            }
            set {
                SetRelatedEntity("activity_pointer_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("appointment_activity_parties")]
        public IEnumerable<ActivityParty> appointment_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("appointment_activity_parties", null);
            }
            set {
                SetRelatedEntities("appointment_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_appointment_activities")]
        public BusinessUnit business_unit_appointment_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_appointment_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_appointment_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Appointments")]
        public Entitlement entitlement_Appointments {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Appointments", null);
            }
            set {
                SetRelatedEntity("entitlement_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_Appointments")]
        public ff_activities ff_activities_Appointments {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_Appointments", null);
            }
            set {
                SetRelatedEntity("ff_activities_Appointments", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_appointment_createdby")]
        public SystemUser lk_appointment_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_createdby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
        public SystemUser lk_appointment_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_appointment_modifiedby")]
        public SystemUser lk_appointment_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
        public SystemUser lk_appointment_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_appointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_appointment_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_appointment")]
        public Team team_appointment {
            get {
                return GetRelatedEntity<Team>("team_appointment", null);
            }
            set {
                SetRelatedEntity("team_appointment", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_appointment")]
        public SystemUser user_appointment {
            get {
                return GetRelatedEntity<SystemUser>("user_appointment", null);
            }
            set {
                SetRelatedEntity("user_appointment", null, value);
            }
        }
        
        public static Appointment Retrieve(IOrganizationService service, Guid id, params Expression<Func<Appointment,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Business, division, or department in the Microsoft Dynamics 365 database.</para>
    /// <para>Display Name: Business Unit</para>
    /// </summary>
    [EntityLogicalName("businessunit")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class BusinessUnit : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "businessunit";
        
        public const int EntityTypeCode = 10;
        
        public BusinessUnit() : 
                base(EntityLogicalName) {
        }
        
        public BusinessUnit(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public Guid? BusinessUnitId {
            get {
                return GetAttributeValue<Guid?>("businessunitid");
            }
            set {
                SetId("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public BusinessUnit_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: Bill To City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Bill To City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 1.</para>
        /// <para>Display Name: Bill To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Bill To Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Bill To Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Bill To Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Bill To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Bill To Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: Bill To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Bill To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public BusinessUnit_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: Bill To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Bill To State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public BusinessUnit_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Ship To City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Ship To City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Country/region name for address 2.</para>
        /// <para>Display Name: Ship To Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Ship To Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Ship To Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Ship To Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Ship To Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Ship To Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Ship To ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Ship To ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public BusinessUnit_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<BusinessUnit_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Ship To State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Ship To State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the business unit.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit cost center.</para>
        /// <para>Display Name: Cost Center</para>
        /// </summary>
        [AttributeLogicalName("costcenter")]
        [DisplayName("Cost Center")]
        [MaxLength(100)]
        public string CostCenter {
            get {
                return GetAttributeValue<string>("costcenter");
            }
            set {
                SetAttributeValue("costcenter", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the business unit.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the businessunit.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Credit limit for the business unit.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public double? CreditLimit {
            get {
                return GetAttributeValue<double?>("creditlimit");
            }
            set {
                SetAttributeValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the business unit.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the business unit.</para>
        /// <para>Display Name: Disable Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disable Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Name of the division to which the business unit belongs.</para>
        /// <para>Display Name: Division</para>
        /// </summary>
        [AttributeLogicalName("divisionname")]
        [DisplayName("Division")]
        [MaxLength(100)]
        public string DivisionName {
            get {
                return GetAttributeValue<string>("divisionname");
            }
            set {
                SetAttributeValue("divisionname", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the business unit.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the businessunit with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Alternative name under which the business unit can be filed.</para>
        /// <para>Display Name: File as Name</para>
        /// </summary>
        [AttributeLogicalName("fileasname")]
        [DisplayName("File as Name")]
        [MaxLength(100)]
        public string FileAsName {
            get {
                return GetAttributeValue<string>("fileasname");
            }
            set {
                SetAttributeValue("fileasname", value);
            }
        }
        
        /// <summary>
        /// <para>FTP site URL for the business unit.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Inheritance mask for the business unit.</para>
        /// <para>Display Name: Inheritance Mask</para>
        /// </summary>
        [AttributeLogicalName("inheritancemask")]
        [DisplayName("Inheritance Mask")]
        [Range(0, 1000000000)]
        public int? InheritanceMask {
            get {
                return GetAttributeValue<int?>("inheritancemask");
            }
            set {
                SetAttributeValue("inheritancemask", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the business unit is enabled or disabled.</para>
        /// <para>Display Name: Is Disabled</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Is Disabled")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the business unit.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the business unit was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the businessunit.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the business unit.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the parent business unit.</para>
        /// <para>Display Name: Parent Business</para>
        /// </summary>
        [AttributeLogicalName("parentbusinessunitid")]
        [DisplayName("Parent Business")]
        public EntityReference ParentBusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("parentbusinessunitid");
            }
            set {
                SetAttributeValue("parentbusinessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Picture or diagram of the business unit.</para>
        /// <para>Display Name: Picture</para>
        /// </summary>
        [AttributeLogicalName("picture")]
        [DisplayName("Picture")]
        public string Picture {
            get {
                return GetAttributeValue<string>("picture");
            }
            set {
                SetAttributeValue("picture", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the business unit.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange on which the business is listed.</para>
        /// <para>Display Name: Stock Exchange</para>
        /// </summary>
        [AttributeLogicalName("stockexchange")]
        [DisplayName("Stock Exchange")]
        [MaxLength(20)]
        public string StockExchange {
            get {
                return GetAttributeValue<string>("stockexchange");
            }
            set {
                SetAttributeValue("stockexchange", value);
            }
        }
        
        /// <summary>
        /// <para>Stock exchange ticker symbol for the business unit.</para>
        /// <para>Display Name: Ticker Symbol</para>
        /// </summary>
        [AttributeLogicalName("tickersymbol")]
        [DisplayName("Ticker Symbol")]
        [MaxLength(10)]
        public string TickerSymbol {
            get {
                return GetAttributeValue<string>("tickersymbol");
            }
            set {
                SetAttributeValue("tickersymbol", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the businessunit.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for the business unit. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the business unit.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Website URL for the business unit.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether workflow or sales process rules have been suspended.</para>
        /// <para>Display Name: Workflow Suspended</para>
        /// </summary>
        [AttributeLogicalName("workflowsuspended")]
        [DisplayName("Workflow Suspended")]
        public bool? WorkflowSuspended {
            get {
                return GetAttributeValue<bool?>("workflowsuspended");
            }
            set {
                SetAttributeValue("workflowsuspended", value);
            }
        }
        
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referenced)]
        public IEnumerable<BusinessUnit> Referencedbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntities<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("business_unit_parent_business_unit", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentbusinessunitid")]
        [RelationshipSchemaName("business_unit_parent_business_unit", EntityRole.Referencing)]
        public BusinessUnit Referencingbusiness_unit_parent_business_unit {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_parent_business_unit", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("business_unit_parent_business_unit", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_accounts")]
        public IEnumerable<Account> business_unit_accounts {
            get {
                return GetRelatedEntities<Account>("business_unit_accounts", null);
            }
            set {
                SetRelatedEntities("business_unit_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_activitypointer")]
        public IEnumerable<ActivityPointer> business_unit_activitypointer {
            get {
                return GetRelatedEntities<ActivityPointer>("business_unit_activitypointer", null);
            }
            set {
                SetRelatedEntities("business_unit_activitypointer", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_annotations")]
        public IEnumerable<Annotation> business_unit_annotations {
            get {
                return GetRelatedEntities<Annotation>("business_unit_annotations", null);
            }
            set {
                SetRelatedEntities("business_unit_annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_appointment_activities")]
        public IEnumerable<Appointment> business_unit_appointment_activities {
            get {
                return GetRelatedEntities<Appointment>("business_unit_appointment_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_appointment_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_contacts")]
        public IEnumerable<Contact> business_unit_contacts {
            get {
                return GetRelatedEntities<Contact>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntities("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_email_activities")]
        public IEnumerable<Email> business_unit_email_activities {
            get {
                return GetRelatedEntities<Email>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_email_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_entitlement")]
        public IEnumerable<Entitlement> business_unit_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("business_unit_entitlement", null);
            }
            set {
                SetRelatedEntities("business_unit_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_activities")]
        public IEnumerable<ff_activities> business_unit_ff_activities {
            get {
                return GetRelatedEntities<ff_activities>("business_unit_ff_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_awardgiftcard")]
        public IEnumerable<ff_awardgiftcard> business_unit_ff_awardgiftcard {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("business_unit_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_awardgiftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_casecategory")]
        public IEnumerable<ff_casecategory> business_unit_ff_casecategory {
            get {
                return GetRelatedEntities<ff_casecategory>("business_unit_ff_casecategory", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_casetype")]
        public IEnumerable<ff_casetype> business_unit_ff_casetype {
            get {
                return GetRelatedEntities<ff_casetype>("business_unit_ff_casetype", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_collectiveagreement")]
        public IEnumerable<ff_collectiveagreement> business_unit_ff_collectiveagreement {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("business_unit_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_committeemember")]
        public IEnumerable<ff_committeemember> business_unit_ff_committeemember {
            get {
                return GetRelatedEntities<ff_committeemember>("business_unit_ff_committeemember", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_committeemember", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_configuration")]
        public IEnumerable<ff_configuration> business_unit_ff_configuration {
            get {
                return GetRelatedEntities<ff_configuration>("business_unit_ff_configuration", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_employment")]
        public IEnumerable<ff_employment> business_unit_ff_employment {
            get {
                return GetRelatedEntities<ff_employment>("business_unit_ff_employment", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_employment", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_eventattendee")]
        public IEnumerable<ff_eventattendee> business_unit_ff_eventattendee {
            get {
                return GetRelatedEntities<ff_eventattendee>("business_unit_ff_eventattendee", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_eventattendee", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_giftcard")]
        public IEnumerable<ff_giftcard> business_unit_ff_giftcard {
            get {
                return GetRelatedEntities<ff_giftcard>("business_unit_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_incidentparty")]
        public IEnumerable<ff_incidentparty> business_unit_ff_incidentparty {
            get {
                return GetRelatedEntities<ff_incidentparty>("business_unit_ff_incidentparty", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_incidentparty", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_membershipfee")]
        public IEnumerable<ff_membershipfee> business_unit_ff_membershipfee {
            get {
                return GetRelatedEntities<ff_membershipfee>("business_unit_ff_membershipfee", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_membershipfee", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_positionoftrust")]
        public IEnumerable<ff_positionoftrust> business_unit_ff_positionoftrust {
            get {
                return GetRelatedEntities<ff_positionoftrust>("business_unit_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_reportingofopportunity")]
        public IEnumerable<ff_reportingofopportunity> business_unit_ff_reportingofopportunity {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("business_unit_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_reportingofopportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_ff_union")]
        public IEnumerable<ff_union> business_unit_ff_union {
            get {
                return GetRelatedEntities<ff_union>("business_unit_ff_union", null);
            }
            set {
                SetRelatedEntities("business_unit_ff_union", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_incident_resolution_activities")]
        public IEnumerable<IncidentResolution> business_unit_incident_resolution_activities {
            get {
                return GetRelatedEntities<IncidentResolution>("business_unit_incident_resolution_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_incident_resolution_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_incidents")]
        public IEnumerable<Incident> business_unit_incidents {
            get {
                return GetRelatedEntities<Incident>("business_unit_incidents", null);
            }
            set {
                SetRelatedEntities("business_unit_incidents", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_leads")]
        public IEnumerable<Lead> business_unit_leads {
            get {
                return GetRelatedEntities<Lead>("business_unit_leads", null);
            }
            set {
                SetRelatedEntities("business_unit_leads", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_mailbox")]
        public IEnumerable<Mailbox> business_unit_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("business_unit_mailbox", null);
            }
            set {
                SetRelatedEntities("business_unit_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_opportunities")]
        public IEnumerable<Opportunity> business_unit_opportunities {
            get {
                return GetRelatedEntities<Opportunity>("business_unit_opportunities", null);
            }
            set {
                SetRelatedEntities("business_unit_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_phone_call_activities")]
        public IEnumerable<PhoneCall> business_unit_phone_call_activities {
            get {
                return GetRelatedEntities<PhoneCall>("business_unit_phone_call_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_phone_call_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_queues")]
        public IEnumerable<Queue> business_unit_queues {
            get {
                return GetRelatedEntities<Queue>("business_unit_queues", null);
            }
            set {
                SetRelatedEntities("business_unit_queues", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_queues2")]
        public IEnumerable<Queue> business_unit_queues2 {
            get {
                return GetRelatedEntities<Queue>("business_unit_queues2", null);
            }
            set {
                SetRelatedEntities("business_unit_queues2", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_system_users")]
        public IEnumerable<SystemUser> business_unit_system_users {
            get {
                return GetRelatedEntities<SystemUser>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntities("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_task_activities")]
        public IEnumerable<Task> business_unit_task_activities {
            get {
                return GetRelatedEntities<Task>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntities("business_unit_task_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("business_unit_teams")]
        public IEnumerable<Team> business_unit_teams {
            get {
                return GetRelatedEntities<Team>("business_unit_teams", null);
            }
            set {
                SetRelatedEntities("business_unit_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_businessunit_owningbusinessunit")]
        public IEnumerable<ff_casenote> ff_casenote_businessunit_owningbusinessunit {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_businessunit_owningbusinessunit", null);
            }
            set {
                SetRelatedEntities("ff_casenote_businessunit_owningbusinessunit", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_businessunit_owningbusinessunit")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_businessunit_owningbusinessunit {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_businessunit_owningbusinessunit", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_businessunit_owningbusinessunit", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_union_businessunit_businessunit")]
        public IEnumerable<ff_union> ff_union_businessunit_businessunit {
            get {
                return GetRelatedEntities<ff_union>("ff_union_businessunit_businessunit", null);
            }
            set {
                SetRelatedEntities("ff_union_businessunit_businessunit", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public SystemUser lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public SystemUser lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public SystemUser lk_businessunitbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public SystemUser lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        public static BusinessUnit Retrieve(IOrganizationService service, Guid id, params Expression<Func<BusinessUnit,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with whom a business unit has a relationship, such as customer, supplier, and colleague.</para>
    /// <para>Display Name: Contact</para>
    /// </summary>
    [EntityLogicalName("contact")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Contact : ExtendedEntity<ContactState, Contact_StatusCode> {
        
        public const string EntityLogicalName = "contact";
        
        public const int EntityTypeCode = 2;
        
        public Contact() : 
                base(EntityLogicalName) {
        }
        
        public Contact(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("contactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
            set {
                SetId("contactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the contact is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's role within the company or sales process, such as decision maker, employee, or influencer.</para>
        /// <para>Display Name: Role</para>
        /// </summary>
        [AttributeLogicalName("accountrolecode")]
        [DisplayName("Role")]
        public Contact_AccountRoleCode? AccountRoleCode {
            get {
                return GetOptionSetValue<Contact_AccountRoleCode>("accountrolecode");
            }
            set {
                SetOptionSetValue("accountrolecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Contact_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: Address 1: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("Address 1: City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Address 1: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Address 1: Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the primary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 1: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address1_freighttermscode")]
        [DisplayName("Address 1: Freight Terms")]
        public Contact_Address1_FreightTermsCode? Address1_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address1_FreightTermsCode>("address1_freighttermscode");
            }
            set {
                SetOptionSetValue("address1_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Address 1: Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Address 1: Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Address 1: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Address 1: Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(200)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: Address 1: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("Address 1: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's primary address.</para>
        /// <para>Display Name: Address 1: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address1_primarycontactname")]
        [DisplayName("Address 1: Primary Contact Name")]
        [MaxLength(100)]
        public string Address1_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address1_primarycontactname");
            }
            set {
                SetAttributeValue("address1_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Contact_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: Address 1: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("Address 1: State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Phone")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Contact_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the secondary address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 2: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address2_freighttermscode")]
        [DisplayName("Address 2: Freight Terms")]
        public Contact_Address2_FreightTermsCode? Address2_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address2_FreightTermsCode>("address2_freighttermscode");
            }
            set {
                SetOptionSetValue("address2_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's secondary address.</para>
        /// <para>Display Name: Address 2: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address2_primarycontactname")]
        [DisplayName("Address 2: Primary Contact Name")]
        [MaxLength(100)]
        public string Address2_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address2_primarycontactname");
            }
            set {
                SetAttributeValue("address2_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Contact_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 3.</para>
        /// <para>Display Name: Address 3: ID</para>
        /// </summary>
        [AttributeLogicalName("address3_addressid")]
        [DisplayName("Address 3: ID")]
        public Guid? Address3_AddressId {
            get {
                return GetAttributeValue<Guid?>("address3_addressid");
            }
            set {
                SetAttributeValue("address3_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the third address type.</para>
        /// <para>Display Name: Address 3: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address3_addresstypecode")]
        [DisplayName("Address 3: Address Type")]
        public Contact_Address3_AddressTypeCode? Address3_AddressTypeCode {
            get {
                return GetOptionSetValue<Contact_Address3_AddressTypeCode>("address3_addresstypecode");
            }
            set {
                SetOptionSetValue("address3_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the 3rd address.</para>
        /// <para>Display Name: Address 3: City</para>
        /// </summary>
        [AttributeLogicalName("address3_city")]
        [DisplayName("Address 3: City")]
        [MaxLength(80)]
        public string Address3_City {
            get {
                return GetAttributeValue<string>("address3_city");
            }
            set {
                SetAttributeValue("address3_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete third address.</para>
        /// <para>Display Name: Address 3</para>
        /// </summary>
        [AttributeLogicalName("address3_composite")]
        [DisplayName("Address 3")]
        public string Address3_Composite {
            get {
                return GetAttributeValue<string>("address3_composite");
            }
        }
        
        /// <summary>
        /// <para>the country or region for the 3rd address.</para>
        /// <para>Display Name: Address3: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address3_country")]
        [DisplayName("Address3: Country/Region")]
        [MaxLength(80)]
        public string Address3_Country {
            get {
                return GetAttributeValue<string>("address3_country");
            }
            set {
                SetAttributeValue("address3_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the third address.</para>
        /// <para>Display Name: Address 3: County</para>
        /// </summary>
        [AttributeLogicalName("address3_county")]
        [DisplayName("Address 3: County")]
        [MaxLength(50)]
        public string Address3_County {
            get {
                return GetAttributeValue<string>("address3_county");
            }
            set {
                SetAttributeValue("address3_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the third address.</para>
        /// <para>Display Name: Address 3: Fax</para>
        /// </summary>
        [AttributeLogicalName("address3_fax")]
        [DisplayName("Address 3: Fax")]
        [MaxLength(50)]
        public string Address3_Fax {
            get {
                return GetAttributeValue<string>("address3_fax");
            }
            set {
                SetAttributeValue("address3_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms for the third address to make sure shipping orders are processed correctly.</para>
        /// <para>Display Name: Address 3: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("address3_freighttermscode")]
        [DisplayName("Address 3: Freight Terms")]
        public Contact_Address3_FreightTermsCode? Address3_FreightTermsCode {
            get {
                return GetOptionSetValue<Contact_Address3_FreightTermsCode>("address3_freighttermscode");
            }
            set {
                SetOptionSetValue("address3_freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address3_latitude")]
        [DisplayName("Address 3: Latitude")]
        public double? Address3_Latitude {
            get {
                return GetAttributeValue<double?>("address3_latitude");
            }
            set {
                SetAttributeValue("address3_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>the first line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address3_line1")]
        [DisplayName("Address3: Street 1")]
        [MaxLength(250)]
        public string Address3_Line1 {
            get {
                return GetAttributeValue<string>("address3_line1");
            }
            set {
                SetAttributeValue("address3_line1", value);
            }
        }
        
        /// <summary>
        /// <para>the second line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address3_line2")]
        [DisplayName("Address3: Street 2")]
        [MaxLength(250)]
        public string Address3_Line2 {
            get {
                return GetAttributeValue<string>("address3_line2");
            }
            set {
                SetAttributeValue("address3_line2", value);
            }
        }
        
        /// <summary>
        /// <para>the third line of the 3rd address.</para>
        /// <para>Display Name: Address3: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address3_line3")]
        [DisplayName("Address3: Street 3")]
        [MaxLength(250)]
        public string Address3_Line3 {
            get {
                return GetAttributeValue<string>("address3_line3");
            }
            set {
                SetAttributeValue("address3_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the third address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 3: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address3_longitude")]
        [DisplayName("Address 3: Longitude")]
        public double? Address3_Longitude {
            get {
                return GetAttributeValue<double?>("address3_longitude");
            }
            set {
                SetAttributeValue("address3_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the third address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 3: Name</para>
        /// </summary>
        [AttributeLogicalName("address3_name")]
        [DisplayName("Address 3: Name")]
        [MaxLength(200)]
        public string Address3_Name {
            get {
                return GetAttributeValue<string>("address3_name");
            }
            set {
                SetAttributeValue("address3_name", value);
            }
        }
        
        /// <summary>
        /// <para>the post office box number of the 3rd address.</para>
        /// <para>Display Name: Address 3: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address3_postofficebox")]
        [DisplayName("Address 3: Post Office Box")]
        [MaxLength(20)]
        public string Address3_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address3_postofficebox");
            }
            set {
                SetAttributeValue("address3_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>the ZIP Code or postal code for the 3rd address.</para>
        /// <para>Display Name: Address3: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address3_postalcode")]
        [DisplayName("Address3: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address3_PostalCode {
            get {
                return GetAttributeValue<string>("address3_postalcode");
            }
            set {
                SetAttributeValue("address3_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the main contact at the account's third address.</para>
        /// <para>Display Name: Address 3: Primary Contact Name</para>
        /// </summary>
        [AttributeLogicalName("address3_primarycontactname")]
        [DisplayName("Address 3: Primary Contact Name")]
        [MaxLength(100)]
        public string Address3_PrimaryContactName {
            get {
                return GetAttributeValue<string>("address3_primarycontactname");
            }
            set {
                SetAttributeValue("address3_primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 3: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address3_shippingmethodcode")]
        [DisplayName("Address 3: Shipping Method")]
        public Contact_Address3_ShippingMethodCode? Address3_ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_Address3_ShippingMethodCode>("address3_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address3_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>the state or province of the third address.</para>
        /// <para>Display Name: Address3: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address3_stateorprovince")]
        [DisplayName("Address3: State/Province")]
        [MaxLength(50)]
        public string Address3_StateOrProvince {
            get {
                return GetAttributeValue<string>("address3_stateorprovince");
            }
            set {
                SetAttributeValue("address3_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone1</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone1")]
        [DisplayName("Address 3: Telephone1")]
        [MaxLength(50)]
        public string Address3_Telephone1 {
            get {
                return GetAttributeValue<string>("address3_telephone1");
            }
            set {
                SetAttributeValue("address3_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the third address.</para>
        /// <para>Display Name: Address 3: Telephone2</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone2")]
        [DisplayName("Address 3: Telephone2")]
        [MaxLength(50)]
        public string Address3_Telephone2 {
            get {
                return GetAttributeValue<string>("address3_telephone2");
            }
            set {
                SetAttributeValue("address3_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 3: Telephone3</para>
        /// </summary>
        [AttributeLogicalName("address3_telephone3")]
        [DisplayName("Address 3: Telephone3")]
        [MaxLength(50)]
        public string Address3_Telephone3 {
            get {
                return GetAttributeValue<string>("address3_telephone3");
            }
            set {
                SetAttributeValue("address3_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the third address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 3: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address3_upszone")]
        [DisplayName("Address 3: UPS Zone")]
        [MaxLength(4)]
        public string Address3_UPSZone {
            get {
                return GetAttributeValue<string>("address3_upszone");
            }
            set {
                SetAttributeValue("address3_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 3: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address3_utcoffset")]
        [DisplayName("Address 3: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address3_UTCOffset {
            get {
                return GetAttributeValue<int?>("address3_utcoffset");
            }
            set {
                SetAttributeValue("address3_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By IP Address</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyipaddress")]
        [DisplayName("Created By IP Address")]
        [MaxLength(100)]
        public string Adx_CreatedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_createdbyipaddress");
            }
            set {
                SetAttributeValue("adx_createdbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Created By Username</para>
        /// </summary>
        [AttributeLogicalName("adx_createdbyusername")]
        [DisplayName("Created By Username")]
        [MaxLength(100)]
        public string Adx_CreatedByUsername {
            get {
                return GetAttributeValue<string>("adx_createdbyusername");
            }
            set {
                SetAttributeValue("adx_createdbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By IP Address</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyipaddress")]
        [DisplayName("Modified By IP Address")]
        [MaxLength(100)]
        public string Adx_ModifiedByIPAddress {
            get {
                return GetAttributeValue<string>("adx_modifiedbyipaddress");
            }
            set {
                SetAttributeValue("adx_modifiedbyipaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Modified By Username</para>
        /// </summary>
        [AttributeLogicalName("adx_modifiedbyusername")]
        [DisplayName("Modified By Username")]
        [MaxLength(100)]
        public string Adx_ModifiedByUsername {
            get {
                return GetAttributeValue<string>("adx_modifiedbyusername");
            }
            set {
                SetAttributeValue("adx_modifiedbyusername", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Organization Name</para>
        /// </summary>
        [AttributeLogicalName("adx_organizationname")]
        [DisplayName("Organization Name")]
        [MaxLength(250)]
        public string Adx_OrganizationName {
            get {
                return GetAttributeValue<string>("adx_organizationname");
            }
            set {
                SetAttributeValue("adx_organizationname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Is Anonymous</para>
        /// </summary>
        [AttributeLogicalName("adx_profileisanonymous")]
        [DisplayName("Profile Is Anonymous")]
        public bool? Adx_ProfileIsAnonymous {
            get {
                return GetAttributeValue<bool?>("adx_profileisanonymous");
            }
            set {
                SetAttributeValue("adx_profileisanonymous", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Last Activity</para>
        /// </summary>
        [AttributeLogicalName("adx_profilelastactivity")]
        [DisplayName("Profile Last Activity")]
        public DateTime? Adx_ProfileLastActivity {
            get {
                return GetAttributeValue<DateTime?>("adx_profilelastactivity");
            }
            set {
                SetAttributeValue("adx_profilelastactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Time Zone</para>
        /// </summary>
        [AttributeLogicalName("adx_timezone")]
        [DisplayName("Time Zone")]
        [Range(-1500, 1500)]
        public int? Adx_TimeZone {
            get {
                return GetAttributeValue<int?>("adx_timezone");
            }
            set {
                SetAttributeValue("adx_timezone", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 30</para>
        /// </summary>
        [AttributeLogicalName("aging30")]
        [DisplayName("Aging 30")]
        public decimal? Aging30 {
            get {
                return GetMoneyValue("aging30");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 30 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 30 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging30_base")]
        [DisplayName("Aging 30 (Base)")]
        public decimal? Aging30_Base {
            get {
                return GetMoneyValue("aging30_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 60</para>
        /// </summary>
        [AttributeLogicalName("aging60")]
        [DisplayName("Aging 60")]
        public decimal? Aging60 {
            get {
                return GetMoneyValue("aging60");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 60 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 60 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging60_base")]
        [DisplayName("Aging 60 (Base)")]
        public decimal? Aging60_Base {
            get {
                return GetMoneyValue("aging60_base");
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Aging 90</para>
        /// </summary>
        [AttributeLogicalName("aging90")]
        [DisplayName("Aging 90")]
        public decimal? Aging90 {
            get {
                return GetMoneyValue("aging90");
            }
        }
        
        /// <summary>
        /// <para>Shows the Aging 90 field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Aging 90 (Base)</para>
        /// </summary>
        [AttributeLogicalName("aging90_base")]
        [DisplayName("Aging 90 (Base)")]
        public decimal? Aging90_Base {
            get {
                return GetMoneyValue("aging90_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the date of the contact's wedding or service anniversary for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Anniversary</para>
        /// </summary>
        [AttributeLogicalName("anniversary")]
        [DisplayName("Anniversary")]
        public DateTime? Anniversary {
            get {
                return GetAttributeValue<DateTime?>("anniversary");
            }
            set {
                SetAttributeValue("anniversary", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's annual income for use in profiling and financial analysis.</para>
        /// <para>Display Name: Annual Income</para>
        /// </summary>
        [AttributeLogicalName("annualincome")]
        [DisplayName("Annual Income")]
        public decimal? AnnualIncome {
            get {
                return GetMoneyValue("annualincome");
            }
            set {
                SetMoneyValue("annualincome", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Annual Income field converted to the system's default base currency. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Annual Income (Base)</para>
        /// </summary>
        [AttributeLogicalName("annualincome_base")]
        [DisplayName("Annual Income (Base)")]
        public decimal? AnnualIncome_Base {
            get {
                return GetMoneyValue("annualincome_base");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's assistant.</para>
        /// <para>Display Name: Assistant</para>
        /// </summary>
        [AttributeLogicalName("assistantname")]
        [DisplayName("Assistant")]
        [MaxLength(100)]
        public string AssistantName {
            get {
                return GetAttributeValue<string>("assistantname");
            }
            set {
                SetAttributeValue("assistantname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's assistant.</para>
        /// <para>Display Name: Assistant Phone</para>
        /// </summary>
        [AttributeLogicalName("assistantphone")]
        [DisplayName("Assistant Phone")]
        [MaxLength(50)]
        public string AssistantPhone {
            get {
                return GetAttributeValue<string>("assistantphone");
            }
            set {
                SetAttributeValue("assistantphone", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the contact's birthday for use in customer gift programs or other communications.</para>
        /// <para>Display Name: Birthday</para>
        /// </summary>
        [AttributeLogicalName("birthdate")]
        [DisplayName("Birthday")]
        public DateTime? BirthDate {
            get {
                return GetAttributeValue<DateTime?>("birthdate");
            }
            set {
                SetAttributeValue("birthdate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second business phone number for this contact.</para>
        /// <para>Display Name: Business Phone 2</para>
        /// </summary>
        [AttributeLogicalName("business2")]
        [DisplayName("Business Phone 2")]
        [MaxLength(50)]
        public string Business2 {
            get {
                return GetAttributeValue<string>("business2");
            }
            set {
                SetAttributeValue("business2", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Image of the Business Card</para>
        /// <para>Display Name: Business Card</para>
        /// </summary>
        [AttributeLogicalName("businesscard")]
        [DisplayName("Business Card")]
        public string BusinessCard {
            get {
                return GetAttributeValue<string>("businesscard");
            }
            set {
                SetAttributeValue("businesscard", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Business Card Control Properties.</para>
        /// <para>Display Name: BusinessCardAttributes</para>
        /// </summary>
        [AttributeLogicalName("businesscardattributes")]
        [DisplayName("BusinessCardAttributes")]
        [MaxLength(4000)]
        public string BusinessCardAttributes {
            get {
                return GetAttributeValue<string>("businesscardattributes");
            }
            set {
                SetAttributeValue("businesscardattributes", value);
            }
        }
        
        /// <summary>
        /// <para>Type a callback phone number for this contact.</para>
        /// <para>Display Name: Callback Number</para>
        /// </summary>
        [AttributeLogicalName("callback")]
        [DisplayName("Callback Number")]
        [MaxLength(50)]
        public string Callback {
            get {
                return GetAttributeValue<string>("callback");
            }
            set {
                SetAttributeValue("callback", value);
            }
        }
        
        /// <summary>
        /// <para>Type the names of the contact's children for reference in communications and client programs.</para>
        /// <para>Display Name: Children's Names</para>
        /// </summary>
        [AttributeLogicalName("childrensnames")]
        [DisplayName("Children\'s Names")]
        [MaxLength(255)]
        public string ChildrensNames {
            get {
                return GetAttributeValue<string>("childrensnames");
            }
            set {
                SetAttributeValue("childrensnames", value);
            }
        }
        
        /// <summary>
        /// <para>Type the company phone of the contact.</para>
        /// <para>Display Name: Company Phone</para>
        /// </summary>
        [AttributeLogicalName("company")]
        [DisplayName("Company Phone")]
        [MaxLength(50)]
        public string Company {
            get {
                return GetAttributeValue<string>("company");
            }
            set {
                SetAttributeValue("company", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the credit limit of the contact for reference when you address invoice and accounting issues with the customer.</para>
        /// <para>Display Name: Credit Limit</para>
        /// </summary>
        [AttributeLogicalName("creditlimit")]
        [DisplayName("Credit Limit")]
        public decimal? CreditLimit {
            get {
                return GetMoneyValue("creditlimit");
            }
            set {
                SetMoneyValue("creditlimit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Credit Limit field converted to the system's default base currency for reporting purposes. The calculations use the exchange rate specified in the Currencies area.</para>
        /// <para>Display Name: Credit Limit (Base)</para>
        /// </summary>
        [AttributeLogicalName("creditlimit_base")]
        [DisplayName("Credit Limit (Base)")]
        public decimal? CreditLimit_Base {
            get {
                return GetMoneyValue("creditlimit_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact is on a credit hold, for reference when addressing invoice and accounting issues.</para>
        /// <para>Display Name: Credit Hold</para>
        /// </summary>
        [AttributeLogicalName("creditonhold")]
        [DisplayName("Credit Hold")]
        public bool? CreditOnHold {
            get {
                return GetAttributeValue<bool?>("creditonhold");
            }
            set {
                SetAttributeValue("creditonhold", value);
            }
        }
        
        /// <summary>
        /// <para>Select the size of the contact's company for segmentation and reporting purposes.</para>
        /// <para>Display Name: Customer Size</para>
        /// </summary>
        [AttributeLogicalName("customersizecode")]
        [DisplayName("Customer Size")]
        public Contact_CustomerSizeCode? CustomerSizeCode {
            get {
                return GetOptionSetValue<Contact_CustomerSizeCode>("customersizecode");
            }
            set {
                SetOptionSetValue("customersizecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the category that best describes the relationship between the contact and your organization.</para>
        /// <para>Display Name: Relationship Type</para>
        /// </summary>
        [AttributeLogicalName("customertypecode")]
        [DisplayName("Relationship Type")]
        public Contact_CustomerTypeCode? CustomerTypeCode {
            get {
                return GetOptionSetValue<Contact_CustomerTypeCode>("customertypecode");
            }
            set {
                SetOptionSetValue("customertypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the default price list associated with the contact to make sure the correct product prices for this customer are applied in sales opportunities, quotes, and orders.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("defaultpricelevelid")]
        [DisplayName("Price List")]
        public EntityReference DefaultPriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("defaultpricelevelid");
            }
            set {
                SetAttributeValue("defaultpricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the department or business unit where the contact works in the parent company or business.</para>
        /// <para>Display Name: Department</para>
        /// </summary>
        [AttributeLogicalName("department")]
        [DisplayName("Department")]
        [MaxLength(100)]
        public string Department {
            get {
                return GetAttributeValue<string>("department");
            }
            set {
                SetAttributeValue("department", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the contact, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts bulk postal mail sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the contact can be added to marketing lists, but will be excluded from the letters.</para>
        /// <para>Display Name: Do not allow Bulk Mails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkpostalmail")]
        [DisplayName("Do not allow Bulk Mails")]
        public bool? DoNotBulkPostalMail {
            get {
                return GetAttributeValue<bool?>("donotbulkpostalmail");
            }
            set {
                SetAttributeValue("donotbulkpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct email sent from Microsoft Dynamics 365. If Do Not Allow is selected, Microsoft Dynamics 365 will not send the email.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows faxes. If Do Not Allow is selected, the contact will be excluded from any fax activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts phone calls. If Do Not Allow is selected, the contact will be excluded from any phone call activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact allows direct mail. If Do Not Allow is selected, the contact will be excluded from letter activities distributed in marketing campaigns.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact accepts marketing materials, such as brochures or catalogs. Contacts that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Send Marketing Materials</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Send Marketing Materials")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens primære e-mail-adresse.</para>
        /// <para>Display Name: Privat Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Privat Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kontaktens sekundære e-mail-adresse.</para>
        /// <para>Display Name: Arbejde Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Arbejde Email")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate email address for the contact.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens højeste uddannelsesniveau til brug ved segmentering og analyser.</para>
        /// <para>Display Name: Education</para>
        /// </summary>
        [AttributeLogicalName("educationcode")]
        [DisplayName("Education")]
        public Contact_EducationCode? EducationCode {
            get {
                return GetOptionSetValue<Contact_EducationCode>("educationcode");
            }
            set {
                SetOptionSetValue("educationcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the employee ID or number for the contact for reference in orders, service cases, or other communications with the contact's organization.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(50)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Identifier for an external user.</para>
        /// <para>Display Name: External User Identifier</para>
        /// </summary>
        [AttributeLogicalName("externaluseridentifier")]
        [DisplayName("External User Identifier")]
        [MaxLength(50)]
        public string ExternalUserIdentifier {
            get {
                return GetAttributeValue<string>("externaluseridentifier");
            }
            set {
                SetAttributeValue("externaluseridentifier", value);
            }
        }
        
        /// <summary>
        /// <para>Select the marital status of the contact for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Marital Status</para>
        /// </summary>
        [AttributeLogicalName("familystatuscode")]
        [DisplayName("Marital Status")]
        public Contact_FamilyStatusCode? FamilyStatusCode {
            get {
                return GetOptionSetValue<Contact_FamilyStatusCode>("familystatuscode");
            }
            set {
                SetOptionSetValue("familystatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the contact.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's first name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the contact.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Type the URL for the contact's FTP site to enable users to access data and share documents.</para>
        /// <para>Display Name: FTP Site</para>
        /// </summary>
        [AttributeLogicalName("ftpsiteurl")]
        [DisplayName("FTP Site")]
        [MaxLength(200)]
        public string FtpSiteUrl {
            get {
                return GetAttributeValue<string>("ftpsiteurl");
            }
            set {
                SetAttributeValue("ftpsiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the contact's gender to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Gender</para>
        /// </summary>
        [AttributeLogicalName("gendercode")]
        [DisplayName("Gender")]
        public Contact_GenderCode? GenderCode {
            get {
                return GetOptionSetValue<Contact_GenderCode>("gendercode");
            }
            set {
                SetOptionSetValue("gendercode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the passport number or other government ID for the contact for use in documents or reports.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(50)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact has any children for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: Has Children</para>
        /// </summary>
        [AttributeLogicalName("haschildrencode")]
        [DisplayName("Has Children")]
        public Contact_HasChildrenCode? HasChildrenCode {
            get {
                return GetOptionSetValue<Contact_HasChildrenCode>("haschildrencode");
            }
            set {
                SetOptionSetValue("haschildrencode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second home phone number for this contact.</para>
        /// <para>Display Name: Home Phone 2</para>
        /// </summary>
        [AttributeLogicalName("home2")]
        [DisplayName("Home Phone 2")]
        [MaxLength(50)]
        public string Home2 {
            get {
                return GetAttributeValue<string>("home2");
            }
            set {
                SetAttributeValue("home2", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the contact exists in a separate accounting or other system, such as Microsoft Dynamics GP or another ERP database, for use in integration processes.</para>
        /// <para>Display Name: Back Office Customer</para>
        /// </summary>
        [AttributeLogicalName("isbackofficecustomer")]
        [DisplayName("Back Office Customer")]
        public bool? IsBackofficeCustomer {
            get {
                return GetAttributeValue<bool?>("isbackofficecustomer");
            }
            set {
                SetAttributeValue("isbackofficecustomer", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the contact to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the contact's last name to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the contact was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Date Included in Campaign</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Date Included in Campaign")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that directed the contact to your organization.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Contact_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Contact_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's manager for use in escalating issues or other follow-up communications with the contact.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("managername")]
        [DisplayName("Manager")]
        [MaxLength(100)]
        public string ManagerName {
            get {
                return GetAttributeValue<string>("managername");
            }
            set {
                SetAttributeValue("managername", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phone number for the contact's manager.</para>
        /// <para>Display Name: Manager Phone</para>
        /// </summary>
        [AttributeLogicalName("managerphone")]
        [DisplayName("Manager Phone")]
        [MaxLength(50)]
        public string ManagerPhone {
            get {
                return GetAttributeValue<string>("managerphone");
            }
            set {
                SetAttributeValue("managerphone", value);
            }
        }
        
        /// <summary>
        /// <para>Whether is only for marketing</para>
        /// <para>Display Name: Marketing Only</para>
        /// </summary>
        [AttributeLogicalName("marketingonly")]
        [DisplayName("Marketing Only")]
        public bool? MarketingOnly {
            get {
                return GetAttributeValue<bool?>("marketingonly");
            }
            set {
                SetAttributeValue("marketingonly", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master contact for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the account has been merged with a master contact.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's middle name or initial to make sure the contact is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the contact.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(50)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's nickname.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(100)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of children the contact has for reference in follow-up phone calls and other communications.</para>
        /// <para>Display Name: No. of Children</para>
        /// </summary>
        [AttributeLogicalName("numberofchildren")]
        [DisplayName("No. of Children")]
        [Range(0, 1000000000)]
        public int? NumberOfChildren {
            get {
                return GetAttributeValue<int?>("numberofchildren");
            }
            set {
                SetAttributeValue("numberofchildren", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the lead that the contact was created if the contact was created by converting a lead in Microsoft Dynamics 365. This is used to relate the contact to the data on the originating lead for use in reporting and analytics.</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the contact.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the contact.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the contact.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the contact.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the parent contact.</para>
        /// <para>Display Name: Parent Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
        }
        
        /// <summary>
        /// <para>Select the parent account or parent contact for the contact to provide a quick link to additional details, such as financial information, activities, and opportunities.</para>
        /// <para>Display Name: Virksomhed</para>
        /// </summary>
        [AttributeLogicalName("parentcustomerid")]
        [DisplayName("Virksomhed")]
        public EntityReference ParentCustomerId {
            get {
                return GetAttributeValue<EntityReference>("parentcustomerid");
            }
            set {
                SetAttributeValue("parentcustomerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select the payment terms to indicate when the customer needs to pay the total amount.</para>
        /// <para>Display Name: Payment Terms</para>
        /// </summary>
        [AttributeLogicalName("paymenttermscode")]
        [DisplayName("Payment Terms")]
        public Contact_PaymentTermsCode? PaymentTermsCode {
            get {
                return GetOptionSetValue<Contact_PaymentTermsCode>("paymenttermscode");
            }
            set {
                SetOptionSetValue("paymenttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred day of the week for service appointments.</para>
        /// <para>Display Name: Preferred Day</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmentdaycode")]
        [DisplayName("Preferred Day")]
        public Contact_PreferredAppointmentDayCode? PreferredAppointmentDayCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentDayCode>("preferredappointmentdaycode");
            }
            set {
                SetOptionSetValue("preferredappointmentdaycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the preferred time of day for service appointments.</para>
        /// <para>Display Name: Preferred Time</para>
        /// </summary>
        [AttributeLogicalName("preferredappointmenttimecode")]
        [DisplayName("Preferred Time")]
        public Contact_PreferredAppointmentTimeCode? PreferredAppointmentTimeCode {
            get {
                return GetOptionSetValue<Contact_PreferredAppointmentTimeCode>("preferredappointmenttimecode");
            }
            set {
                SetOptionSetValue("preferredappointmenttimecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne kontaktmetode.</para>
        /// <para>Display Name: Foretrukken kontaktmetode</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Foretrukken kontaktmetode")]
        public Contact_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Contact_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the contact's preferred service facility or equipment to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Facility/Equipment</para>
        /// </summary>
        [AttributeLogicalName("preferredequipmentid")]
        [DisplayName("Preferred Facility/Equipment")]
        public EntityReference PreferredEquipmentId {
            get {
                return GetAttributeValue<EntityReference>("preferredequipmentid");
            }
            set {
                SetAttributeValue("preferredequipmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the contact's preferred service to make sure services are scheduled correctly for the customer.</para>
        /// <para>Display Name: Preferred Service</para>
        /// </summary>
        [AttributeLogicalName("preferredserviceid")]
        [DisplayName("Preferred Service")]
        public EntityReference PreferredServiceId {
            get {
                return GetAttributeValue<EntityReference>("preferredserviceid");
            }
            set {
                SetAttributeValue("preferredserviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the regular or preferred customer service representative for reference when scheduling service activities for the contact.</para>
        /// <para>Display Name: Preferred User</para>
        /// </summary>
        [AttributeLogicalName("preferredsystemuserid")]
        [DisplayName("Preferred User")]
        public EntityReference PreferredSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("preferredsystemuserid");
            }
            set {
                SetAttributeValue("preferredsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the contact's first and last names so that the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Contact record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the contact to make sure the contact is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public Contact_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<Contact_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the contact's spouse or partner for reference during calls, events, or other communications with the contact.</para>
        /// <para>Display Name: Spouse/Partner Name</para>
        /// </summary>
        [AttributeLogicalName("spousesname")]
        [DisplayName("Spouse/Partner Name")]
        [MaxLength(100)]
        public string SpousesName {
            get {
                return GetAttributeValue<string>("spousesname");
            }
            set {
                SetAttributeValue("spousesname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the contact is active or inactive. Inactive contacts are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ContactState? StateCode {
            get {
                return GetOptionSetValue<ContactState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kontaktens status.</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Contact_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Contact_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the suffix used in the contact's name, such as Jr. or Sr. to make sure the contact is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Suffix</para>
        /// </summary>
        [AttributeLogicalName("suffix")]
        [DisplayName("Suffix")]
        [MaxLength(10)]
        public string Suffix {
            get {
                return GetAttributeValue<string>("suffix");
            }
            set {
                SetAttributeValue("suffix", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv hovedtelefonnummeret til denne kontakt.</para>
        /// <para>Display Name: Telefon (arbejde)</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Telefon (arbejde)")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for this contact.</para>
        /// <para>Display Name: Telefon (privat)</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Telefon (privat)")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for this contact.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Select a region or territory for the contact for use in segmentation and analysis.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territorycode")]
        [DisplayName("Territory")]
        public Contact_TerritoryCode? TerritoryCode {
            get {
                return GetOptionSetValue<Contact_TerritoryCode>("territorycode");
            }
            set {
                SetOptionSetValue("territorycode", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the contact record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the contact.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the contact's professional or personal website or blog URL.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the combined Yomi first and last names of the contact so that the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the contact's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the contact.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Confirm Remove Password</para>
        /// </summary>
        [AttributeLogicalName("adx_confirmremovepassword")]
        [DisplayName("Confirm Remove Password")]
        public bool? adx_ConfirmRemovePassword {
            get {
                return GetAttributeValue<bool?>("adx_confirmremovepassword");
            }
            set {
                SetAttributeValue("adx_confirmremovepassword", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Public Profile Copy</para>
        /// </summary>
        [AttributeLogicalName("adx_publicprofilecopy")]
        [DisplayName("Public Profile Copy")]
        public string adx_PublicProfileCopy {
            get {
                return GetAttributeValue<string>("adx_publicprofilecopy");
            }
            set {
                SetAttributeValue("adx_publicprofilecopy", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the current count of failed password attempts for the contact.</para>
        /// <para>Display Name: Access Failed Count</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_accessfailedcount")]
        [DisplayName("Access Failed Count")]
        [Range(-2147483648, 2147483647)]
        public int? adx_identity_accessfailedcount {
            get {
                return GetAttributeValue<int?>("adx_identity_accessfailedcount");
            }
            set {
                SetAttributeValue("adx_identity_accessfailedcount", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if the email is confirmed by the contact.</para>
        /// <para>Display Name: Email Confirmed</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_emailaddress1confirmed")]
        [DisplayName("Email Confirmed")]
        public bool? adx_identity_emailaddress1confirmed {
            get {
                return GetAttributeValue<bool?>("adx_identity_emailaddress1confirmed");
            }
            set {
                SetAttributeValue("adx_identity_emailaddress1confirmed", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the last date and time the user successfully signed in to a portal.</para>
        /// <para>Display Name: Last Successful Login</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lastsuccessfullogin")]
        [DisplayName("Last Successful Login")]
        public DateTime? adx_identity_lastsuccessfullogin {
            get {
                return GetAttributeValue<DateTime?>("adx_identity_lastsuccessfullogin");
            }
            set {
                SetAttributeValue("adx_identity_lastsuccessfullogin", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that the contact can no longer sign in to the portal using the local account.</para>
        /// <para>Display Name: Local Login Disabled</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_locallogindisabled")]
        [DisplayName("Local Login Disabled")]
        public bool? adx_identity_locallogindisabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_locallogindisabled");
            }
            set {
                SetAttributeValue("adx_identity_locallogindisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if this contact will track failed access attempts and become locked after too many failed attempts. To prevent the contact from becoming locked, you can disable this setting.</para>
        /// <para>Display Name: Lockout Enabled</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lockoutenabled")]
        [DisplayName("Lockout Enabled")]
        public bool? adx_identity_lockoutenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_lockoutenabled");
            }
            set {
                SetAttributeValue("adx_identity_lockoutenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the moment in time when the locked contact becomes unlocked again.</para>
        /// <para>Display Name: Lockout End Date</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_lockoutenddate")]
        [DisplayName("Lockout End Date")]
        public DateTime? adx_identity_lockoutenddate {
            get {
                return GetAttributeValue<DateTime?>("adx_identity_lockoutenddate");
            }
            set {
                SetAttributeValue("adx_identity_lockoutenddate", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if web authentication is enabled for the contact.</para>
        /// <para>Display Name: Login Enabled</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_logonenabled")]
        [DisplayName("Login Enabled")]
        public bool? adx_identity_logonenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_logonenabled");
            }
            set {
                SetAttributeValue("adx_identity_logonenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if the phone number is confirmed by the contact.</para>
        /// <para>Display Name: Mobile Phone Confirmed</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_mobilephoneconfirmed")]
        [DisplayName("Mobile Phone Confirmed")]
        public bool? adx_identity_mobilephoneconfirmed {
            get {
                return GetAttributeValue<bool?>("adx_identity_mobilephoneconfirmed");
            }
            set {
                SetAttributeValue("adx_identity_mobilephoneconfirmed", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: New Password Input</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_newpassword")]
        [DisplayName("New Password Input")]
        [MaxLength(100)]
        public string adx_identity_newpassword {
            get {
                return GetAttributeValue<string>("adx_identity_newpassword");
            }
            set {
                SetAttributeValue("adx_identity_newpassword", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Password Hash</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_passwordhash")]
        [DisplayName("Password Hash")]
        [MaxLength(128)]
        public string adx_identity_passwordhash {
            get {
                return GetAttributeValue<string>("adx_identity_passwordhash");
            }
            set {
                SetAttributeValue("adx_identity_passwordhash", value);
            }
        }
        
        /// <summary>
        /// <para>A token used to manage the web authentication session.</para>
        /// <para>Display Name: Security Stamp</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_securitystamp")]
        [DisplayName("Security Stamp")]
        [MaxLength(100)]
        public string adx_identity_securitystamp {
            get {
                return GetAttributeValue<string>("adx_identity_securitystamp");
            }
            set {
                SetAttributeValue("adx_identity_securitystamp", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if two-factor authentication is enabled for the contact.</para>
        /// <para>Display Name: Two Factor Enabled</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_twofactorenabled")]
        [DisplayName("Two Factor Enabled")]
        public bool? adx_identity_twofactorenabled {
            get {
                return GetAttributeValue<bool?>("adx_identity_twofactorenabled");
            }
            set {
                SetAttributeValue("adx_identity_twofactorenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the user identity for local web authentication.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("adx_identity_username")]
        [DisplayName("User Name")]
        [MaxLength(100)]
        public string adx_identity_username {
            get {
                return GetAttributeValue<string>("adx_identity_username");
            }
            set {
                SetAttributeValue("adx_identity_username", value);
            }
        }
        
        /// <summary>
        /// <para>User’s preferred portal LCID</para>
        /// <para>Display Name: Preferred LCID (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("adx_preferredlcid")]
        [DisplayName("Preferred LCID (Deprecated)")]
        [Range(-2147483648, 2147483647)]
        public int? adx_preferredlcid {
            get {
                return GetAttributeValue<int?>("adx_preferredlcid");
            }
            set {
                SetAttributeValue("adx_preferredlcid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Alert</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealert")]
        [DisplayName("Profile Alert")]
        public bool? adx_profilealert {
            get {
                return GetAttributeValue<bool?>("adx_profilealert");
            }
            set {
                SetAttributeValue("adx_profilealert", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Alert Date</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealertdate")]
        [DisplayName("Profile Alert Date")]
        public DateTime? adx_profilealertdate {
            get {
                return GetAttributeValue<DateTime?>("adx_profilealertdate");
            }
            set {
                SetAttributeValue("adx_profilealertdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Alert Instructions</para>
        /// </summary>
        [AttributeLogicalName("adx_profilealertinstructions")]
        [DisplayName("Profile Alert Instructions")]
        public string adx_profilealertinstructions {
            get {
                return GetAttributeValue<string>("adx_profilealertinstructions");
            }
            set {
                SetAttributeValue("adx_profilealertinstructions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Profile Modified On</para>
        /// </summary>
        [AttributeLogicalName("adx_profilemodifiedon")]
        [DisplayName("Profile Modified On")]
        public DateTime? adx_profilemodifiedon {
            get {
                return GetAttributeValue<DateTime?>("adx_profilemodifiedon");
            }
            set {
                SetAttributeValue("adx_profilemodifiedon", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated - bruges ikke mere.</para>
        /// <para>Display Name: ZZ_Case party company</para>
        /// </summary>
        [AttributeLogicalName("ff_sagspartfirma")]
        [DisplayName("ZZ_Case party company")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_Sagspartfirma {
            get {
                return GetAttributeValue<string>("ff_sagspartfirma");
            }
            set {
                SetAttributeValue("ff_sagspartfirma", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Age</para>
        /// </summary>
        [AttributeLogicalName("ff_age")]
        [DisplayName("Age")]
        public decimal? ff_age {
            get {
                return GetAttributeValue<decimal?>("ff_age");
            }
            set {
                SetAttributeValue("ff_age", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Unemployment insurance fund</para>
        /// </summary>
        [AttributeLogicalName("ff_akasse")]
        [DisplayName("Unemployment insurance fund")]
        public bool? ff_akasse {
            get {
                return GetAttributeValue<bool?>("ff_akasse");
            }
            set {
                SetAttributeValue("ff_akasse", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Are you already a member of a union?</para>
        /// </summary>
        [AttributeLogicalName("ff_alreadymember")]
        [DisplayName("Are you already a member of a union?")]
        public bool? ff_alreadymember {
            get {
                return GetAttributeValue<bool?>("ff_alreadymember");
            }
            set {
                SetAttributeValue("ff_alreadymember", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Are you a recent graduate?</para>
        /// </summary>
        [AttributeLogicalName("ff_areyourecentlygraduated")]
        [DisplayName("Are you a recent graduate?")]
        public bool? ff_areyourecentlygraduated {
            get {
                return GetAttributeValue<bool?>("ff_areyourecentlygraduated");
            }
            set {
                SetAttributeValue("ff_areyourecentlygraduated", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaign</para>
        /// </summary>
        [AttributeLogicalName("ff_campaign")]
        [DisplayName("Campaign")]
        public EntityReference ff_campaign {
            get {
                return GetAttributeValue<EntityReference>("ff_campaign");
            }
            set {
                SetAttributeValue("ff_campaign", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaign activity</para>
        /// </summary>
        [AttributeLogicalName("ff_campaignactivity")]
        [DisplayName("Campaign activity")]
        public EntityReference ff_campaignactivity {
            get {
                return GetAttributeValue<EntityReference>("ff_campaignactivity");
            }
            set {
                SetAttributeValue("ff_campaignactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated - Bruges ikke mere.</para>
        /// <para>Display Name: ZZ_Case party</para>
        /// </summary>
        [AttributeLogicalName("ff_caseparty")]
        [DisplayName("ZZ_Case party")]
        [ObsoleteAttribute()]
        public bool? ff_caseparty {
            get {
                return GetAttributeValue<bool?>("ff_caseparty");
            }
            set {
                SetAttributeValue("ff_caseparty", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Company</para>
        /// </summary>
        [AttributeLogicalName("ff_company")]
        [DisplayName("ZZ_Company")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_company {
            get {
                return GetAttributeValue<string>("ff_company");
            }
            set {
                SetAttributeValue("ff_company", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company address</para>
        /// </summary>
        [AttributeLogicalName("ff_companyaddress")]
        [DisplayName("Company address")]
        [MaxLength(100)]
        public string ff_companyaddress {
            get {
                return GetAttributeValue<string>("ff_companyaddress");
            }
            set {
                SetAttributeValue("ff_companyaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("ff_companystring")]
        [DisplayName("Company")]
        [MaxLength(200)]
        public string ff_companystring {
            get {
                return GetAttributeValue<string>("ff_companystring");
            }
            set {
                SetAttributeValue("ff_companystring", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Postal code</para>
        /// </summary>
        [AttributeLogicalName("ff_companyzipcode")]
        [DisplayName("Postal code")]
        [MaxLength(100)]
        public string ff_companyzipcode {
            get {
                return GetAttributeValue<string>("ff_companyzipcode");
            }
            set {
                SetAttributeValue("ff_companyzipcode", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Consent 3rd party</para>
        /// </summary>
        [AttributeLogicalName("ff_consentthirdparty")]
        [DisplayName("Consent 3rd party")]
        public bool? ff_consentthirdparty {
            get {
                return GetAttributeValue<bool?>("ff_consentthirdparty");
            }
            set {
                SetAttributeValue("ff_consentthirdparty", value);
            }
        }
        
        /// <summary>
        /// <para>Udmeldelsesårsag for et tidligere medlem. Sættes automatisk af BC.</para>
        /// <para>Display Name: Udmeldelsesårsag</para>
        /// </summary>
        [AttributeLogicalName("ff_disenrollmentreason")]
        [DisplayName("Udmeldelsesårsag")]
        public EntityReference ff_disenrollmentreason {
            get {
                return GetAttributeValue<EntityReference>("ff_disenrollmentreason");
            }
            set {
                SetAttributeValue("ff_disenrollmentreason", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: e-Boks</para>
        /// </summary>
        [AttributeLogicalName("ff_eboks")]
        [DisplayName("e-Boks")]
        public bool? ff_eboks {
            get {
                return GetAttributeValue<bool?>("ff_eboks");
            }
            set {
                SetAttributeValue("ff_eboks", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Education level</para>
        /// </summary>
        [AttributeLogicalName("ff_educationlevel")]
        [DisplayName("Education level")]
        [MaxLength(100)]
        public string ff_educationlevel {
            get {
                return GetAttributeValue<string>("ff_educationlevel");
            }
            set {
                SetAttributeValue("ff_educationlevel", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 25/10-24: Erstattet af en anden ordlyd]</para>
        /// <para>Display Name: ZZ_English speaking</para>
        /// </summary>
        [AttributeLogicalName("ff_englishspeaking")]
        [DisplayName("ZZ_English speaking")]
        [ObsoleteAttribute()]
        public bool? ff_englishspeaking {
            get {
                return GetAttributeValue<bool?>("ff_englishspeaking");
            }
            set {
                SetAttributeValue("ff_englishspeaking", value);
            }
        }
        
        /// <summary>
        /// <para>Date of enrollment of membership</para>
        /// <para>Display Name: Enrollment date</para>
        /// </summary>
        [AttributeLogicalName("ff_enrollmentdate")]
        [DisplayName("Enrollment date")]
        public DateTime? ff_enrollmentdate {
            get {
                return GetAttributeValue<DateTime?>("ff_enrollmentdate");
            }
            set {
                SetAttributeValue("ff_enrollmentdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Join unemployment insurance fund</para>
        /// </summary>
        [AttributeLogicalName("ff_enrollunemploymentfund")]
        [DisplayName("Join unemployment insurance fund")]
        public bool? ff_enrollunemploymentfund {
            get {
                return GetAttributeValue<bool?>("ff_enrollunemploymentfund");
            }
            set {
                SetAttributeValue("ff_enrollunemploymentfund", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Stamdata</para>
        /// </summary>
        [AttributeLogicalName("ff_ff_masterdata")]
        [DisplayName("ZZ_Stamdata")]
        [ObsoleteAttribute()]
        public string ff_ff_masterdata {
            get {
                return GetAttributeValue<string>("ff_ff_masterdata");
            }
            set {
                SetAttributeValue("ff_ff_masterdata", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("ff_firm")]
        [DisplayName("Company")]
        public EntityReference ff_firm {
            get {
                return GetAttributeValue<EntityReference>("ff_firm");
            }
            set {
                SetAttributeValue("ff_firm", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Payment method</para>
        /// </summary>
        [AttributeLogicalName("ff_formofpayment")]
        [DisplayName("Payment method")]
        public Contact_ff_formofpayment? ff_formofpayment {
            get {
                return GetOptionSetValue<Contact_ff_formofpayment>("ff_formofpayment");
            }
            set {
                SetOptionSetValue("ff_formofpayment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Graduation date</para>
        /// </summary>
        [AttributeLogicalName("ff_graduatedate")]
        [DisplayName("Graduation date")]
        public DateTime? ff_graduatedate {
            get {
                return GetAttributeValue<DateTime?>("ff_graduatedate");
            }
            set {
                SetAttributeValue("ff_graduatedate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Do you hold any union positions?</para>
        /// </summary>
        [AttributeLogicalName("ff_hasactivepositionsoftrust")]
        [DisplayName("Do you hold any union positions?")]
        public bool? ff_hasactivepositionsoftrust {
            get {
                return GetAttributeValue<bool?>("ff_hasactivepositionsoftrust");
            }
            set {
                SetAttributeValue("ff_hasactivepositionsoftrust", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Information about membership offers</para>
        /// </summary>
        [AttributeLogicalName("ff_informationaboutmemberoffer")]
        [DisplayName("Information about membership offers")]
        public bool? ff_informationaboutmemberoffer {
            get {
                return GetAttributeValue<bool?>("ff_informationaboutmemberoffer");
            }
            set {
                SetAttributeValue("ff_informationaboutmemberoffer", value);
            }
        }
        
        /// <summary>
        /// <para>Det er baseret på om medlemmets arbejdsplads tilbyder løntræk.</para>
        /// <para>Display Name: Do you want to pay via payroll deduction?</para>
        /// </summary>
        [AttributeLogicalName("ff_ispayrolldeductionpreferred")]
        [DisplayName("Do you want to pay via payroll deduction?")]
        public bool? ff_isPayrollDeductionPreferred {
            get {
                return GetAttributeValue<bool?>("ff_ispayrolldeductionpreferred");
            }
            set {
                SetAttributeValue("ff_ispayrolldeductionpreferred", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: I wish to be</para>
        /// </summary>
        [AttributeLogicalName("ff_iwhichtobe")]
        [DisplayName("I wish to be")]
        public bool? ff_iwhichtobe {
            get {
                return GetAttributeValue<bool?>("ff_iwhichtobe");
            }
            set {
                SetAttributeValue("ff_iwhichtobe", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated - lokalt valg bruges, da den global på SM ikke kunne trigge ribbon knap alligevel.</para>
        /// <para>Display Name: ZZ_Jobsituation</para>
        /// </summary>
        [AttributeLogicalName("ff_jobsituation")]
        [DisplayName("ZZ_Jobsituation")]
        [ObsoleteAttribute()]
        public ff_jobsituation? ff_jobsituation {
            get {
                return GetOptionSetValue<ff_jobsituation>("ff_jobsituation");
            }
            set {
                SetOptionSetValue("ff_jobsituation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Leave another union</para>
        /// </summary>
        [AttributeLogicalName("ff_leaveotherunion")]
        [DisplayName("Leave another union")]
        public bool? ff_leaveotherunion {
            get {
                return GetAttributeValue<bool?>("ff_leaveotherunion");
            }
            set {
                SetAttributeValue("ff_leaveotherunion", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Stamdata</para>
        /// </summary>
        [AttributeLogicalName("ff_masterdata")]
        [DisplayName("ZZ_Stamdata")]
        [ObsoleteAttribute()]
        public string ff_masterdata {
            get {
                return GetAttributeValue<string>("ff_masterdata");
            }
            set {
                SetAttributeValue("ff_masterdata", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership number</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipnumber")]
        [DisplayName("Membership number")]
        [MaxLength(100)]
        public string ff_membershipnumber {
            get {
                return GetAttributeValue<string>("ff_membershipnumber");
            }
            set {
                SetAttributeValue("ff_membershipnumber", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 10/12-24: Pga. GDPR]</para>
        /// <para>Display Name: ZZ_Number of active cases</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivecases")]
        [DisplayName("ZZ_Number of active cases")]
        [Range(-2147483648, 2147483647)]
        [ObsoleteAttribute()]
        public int? ff_numberofactivecases {
            get {
                return GetAttributeValue<int?>("ff_numberofactivecases");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Number of Active Cases.</para>
        /// <para>Display Name: Number of Active Cases (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivecases_date")]
        [DisplayName("Number of Active Cases (Last Updated On)")]
        public DateTime? ff_numberofactivecases_Date {
            get {
                return GetAttributeValue<DateTime?>("ff_numberofactivecases_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Number of Active Cases.</para>
        /// <para>Display Name: Number of Active Cases (State)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivecases_state")]
        [DisplayName("Number of Active Cases (State)")]
        [Range(-2147483648, 2147483647)]
        public int? ff_numberofactivecases_State {
            get {
                return GetAttributeValue<int?>("ff_numberofactivecases_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Number of active union roles</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivepositionsoftrust")]
        [DisplayName("Number of active union roles")]
        [Range(-2147483648, 2147483647)]
        public int? ff_numberofactivepositionsoftrust {
            get {
                return GetAttributeValue<int?>("ff_numberofactivepositionsoftrust");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Number of Active Positions of trust.</para>
        /// <para>Display Name: Number of Active Positions of trust (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivepositionsoftrust_date")]
        [DisplayName("Number of Active Positions of trust (Last Updated On)")]
        public DateTime? ff_numberofactivepositionsoftrust_Date {
            get {
                return GetAttributeValue<DateTime?>("ff_numberofactivepositionsoftrust_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Number of Active Positions of trust.</para>
        /// <para>Display Name: Number of Active Positions of trust (State)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofactivepositionsoftrust_state")]
        [DisplayName("Number of Active Positions of trust (State)")]
        [Range(-2147483648, 2147483647)]
        public int? ff_numberofactivepositionsoftrust_State {
            get {
                return GetAttributeValue<int?>("ff_numberofactivepositionsoftrust_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Antal salgsmuligheder tilknyttet</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofopportunitieslinked")]
        [DisplayName("Antal salgsmuligheder tilknyttet")]
        [Range(-2147483648, 2147483647)]
        public int? ff_numberofopportunitieslinked {
            get {
                return GetAttributeValue<int?>("ff_numberofopportunitieslinked");
            }
        }
        
        /// <summary>
        /// <para>Last Updated time of rollup field Antal Salgsmuligheder Tilknyttet.</para>
        /// <para>Display Name: Antal Salgsmuligheder Tilknyttet (Last Updated On)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofopportunitieslinked_date")]
        [DisplayName("Antal Salgsmuligheder Tilknyttet (Last Updated On)")]
        public DateTime? ff_numberofopportunitieslinked_Date {
            get {
                return GetAttributeValue<DateTime?>("ff_numberofopportunitieslinked_date");
            }
        }
        
        /// <summary>
        /// <para>State of rollup field Antal Salgsmuligheder Tilknyttet.</para>
        /// <para>Display Name: Antal Salgsmuligheder Tilknyttet (State)</para>
        /// </summary>
        [AttributeLogicalName("ff_numberofopportunitieslinked_state")]
        [DisplayName("Antal Salgsmuligheder Tilknyttet (State)")]
        [Range(-2147483648, 2147483647)]
        public int? ff_numberofopportunitieslinked_State {
            get {
                return GetAttributeValue<int?>("ff_numberofopportunitieslinked_state");
            }
        }
        
        /// <summary>
        /// <para>Display Name: CPR (Danish ID)</para>
        /// </summary>
        [AttributeLogicalName("ff_personalidentificationnumber")]
        [DisplayName("CPR (Danish ID)")]
        [MaxLength(10)]
        public string ff_personalidentificationnumber {
            get {
                return GetAttributeValue<string>("ff_personalidentificationnumber");
            }
            set {
                SetAttributeValue("ff_personalidentificationnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Place of study</para>
        /// </summary>
        [AttributeLogicalName("ff_placeofeducation")]
        [DisplayName("Place of study")]
        public EntityReference ff_placeofeducation {
            get {
                return GetAttributeValue<EntityReference>("ff_placeofeducation");
            }
            set {
                SetAttributeValue("ff_placeofeducation", value);
            }
        }
        
        /// <summary>
        /// <para>Bruges ikke pt, da denne ikke udfyldes. Kan måske anvendes med noget autoudfyld i fremtiden.
        ///[Deprecated 28/11-24: kan ikke sættes i 1:N relation fra BC]</para>
        /// <para>Display Name: ZZ_Position of trust</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrust")]
        [DisplayName("ZZ_Position of trust")]
        [ObsoleteAttribute()]
        public EntityReference ff_positionoftrust {
            get {
                return GetAttributeValue<EntityReference>("ff_positionoftrust");
            }
            set {
                SetAttributeValue("ff_positionoftrust", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("ff_preferredemail")]
        [DisplayName("ZZ_Preferred Email")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_preferredemail {
            get {
                return GetAttributeValue<string>("ff_preferredemail");
            }
            set {
                SetAttributeValue("ff_preferredemail", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Preferred language</para>
        /// </summary>
        [AttributeLogicalName("ff_preferredlanguage")]
        [DisplayName("Preferred language")]
        public bool? ff_preferredlanguage {
            get {
                return GetAttributeValue<bool?>("ff_preferredlanguage");
            }
            set {
                SetAttributeValue("ff_preferredlanguage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Primary email</para>
        /// </summary>
        [AttributeLogicalName("ff_primarymail")]
        [DisplayName("Primary email")]
        public bool? ff_primarymail {
            get {
                return GetAttributeValue<bool?>("ff_primarymail");
            }
            set {
                SetAttributeValue("ff_primarymail", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Have you previously been a member of an unemployment fund?</para>
        /// </summary>
        [AttributeLogicalName("ff_priorunemploymentfundmembership")]
        [DisplayName("Have you previously been a member of an unemployment fund?")]
        public bool? ff_priorunemploymentfundmembership {
            get {
                return GetAttributeValue<bool?>("ff_priorunemploymentfundmembership");
            }
            set {
                SetAttributeValue("ff_priorunemploymentfundmembership", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: How to secure your rights</para>
        /// </summary>
        [AttributeLogicalName("ff_protectingyourrights")]
        [DisplayName("How to secure your rights")]
        public bool? ff_protectingyourrights {
            get {
                return GetAttributeValue<bool?>("ff_protectingyourrights");
            }
            set {
                SetAttributeValue("ff_protectingyourrights", value);
            }
        }
        
        /// <summary>
        /// <para>Status som sættes af DMS</para>
        /// <para>Display Name: Provisioning status</para>
        /// </summary>
        [AttributeLogicalName("ff_provisioningstatus")]
        [DisplayName("Provisioning status")]
        public Contact_ff_provisioningstatus? ff_provisioningstatus {
            get {
                return GetOptionSetValue<Contact_ff_provisioningstatus>("ff_provisioningstatus");
            }
            set {
                SetOptionSetValue("ff_provisioningstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contribution group end date</para>
        /// </summary>
        [AttributeLogicalName("ff_quotaend")]
        [DisplayName("Contribution group end date")]
        public DateTime? ff_quotaend {
            get {
                return GetAttributeValue<DateTime?>("ff_quotaend");
            }
            set {
                SetAttributeValue("ff_quotaend", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contribution group</para>
        /// </summary>
        [AttributeLogicalName("ff_quotagroup")]
        [DisplayName("Contribution group")]
        public Contact_ff_quotagroup? ff_quotagroup {
            get {
                return GetOptionSetValue<Contact_ff_quotagroup>("ff_quotagroup");
            }
            set {
                SetOptionSetValue("ff_quotagroup", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Contribution group start date</para>
        /// </summary>
        [AttributeLogicalName("ff_quotastart")]
        [DisplayName("Contribution group start date")]
        public DateTime? ff_quotastart {
            get {
                return GetAttributeValue<DateTime?>("ff_quotastart");
            }
            set {
                SetAttributeValue("ff_quotastart", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 5/6-25: Erstattet af lookup]</para>
        /// <para>Display Name: ZZ_Udmeldelsesårsag</para>
        /// </summary>
        [AttributeLogicalName("ff_reasonfortermination")]
        [DisplayName("ZZ_Udmeldelsesårsag")]
        [ObsoleteAttribute()]
        public ff_reasonfortermination? ff_reasonfortermination {
            get {
                return GetOptionSetValue<ff_reasonfortermination>("ff_reasonfortermination");
            }
            set {
                SetOptionSetValue("ff_reasonfortermination", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Residence in DK at study start</para>
        /// </summary>
        [AttributeLogicalName("ff_residenceindenmarkstudystart")]
        [DisplayName("Residence in DK at study start")]
        public bool? ff_residenceindenmarkstudystart {
            get {
                return GetAttributeValue<bool?>("ff_residenceindenmarkstudystart");
            }
            set {
                SetAttributeValue("ff_residenceindenmarkstudystart", value);
            }
        }
        
        /// <summary>
        /// <para>Udfyldes af DMS når et medlem oprettes</para>
        /// <para>Display Name: SharePoint URL</para>
        /// </summary>
        [AttributeLogicalName("ff_sharepointurl")]
        [DisplayName("SharePoint URL")]
        [MaxLength(500)]
        public string ff_sharepointurl {
            get {
                return GetAttributeValue<string>("ff_sharepointurl");
            }
            set {
                SetAttributeValue("ff_sharepointurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Should we resign you from your current union?</para>
        /// </summary>
        [AttributeLogicalName("ff_switchunion")]
        [DisplayName("Should we resign you from your current union?")]
        public bool? ff_switchunion {
            get {
                return GetAttributeValue<bool?>("ff_switchunion");
            }
            set {
                SetAttributeValue("ff_switchunion", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 18/6-25: Jf. PBI 6407 bruges ikke mere.</para>
        /// <para>Display Name: ZZ_TRYG møde booking</para>
        /// </summary>
        [AttributeLogicalName("ff_trygmeetingbooking")]
        [DisplayName("ZZ_TRYG møde booking")]
        [ObsoleteAttribute()]
        public bool? ff_trygmeetingbooking {
            get {
                return GetAttributeValue<bool?>("ff_trygmeetingbooking");
            }
            set {
                SetAttributeValue("ff_trygmeetingbooking", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Are you a member of an unemployment fund?</para>
        /// </summary>
        [AttributeLogicalName("ff_unemploymentinsurancestatus")]
        [DisplayName("Are you a member of an unemployment fund?")]
        public Contact_ff_unemploymentinsurancestatus? ff_unemploymentinsurancestatus {
            get {
                return GetOptionSetValue<Contact_ff_unemploymentinsurancestatus>("ff_unemploymentinsurancestatus");
            }
            set {
                SetOptionSetValue("ff_unemploymentinsurancestatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Which union are you a member of?</para>
        /// </summary>
        [AttributeLogicalName("ff_unionselection")]
        [DisplayName("Which union are you a member of?")]
        public Contact_ff_unionselection? ff_unionselection {
            get {
                return GetOptionSetValue<Contact_ff_unionselection>("ff_unionselection");
            }
            set {
                SetOptionSetValue("ff_unionselection", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Which unemployment fund</para>
        /// </summary>
        [AttributeLogicalName("ff_whichunemploymentfund")]
        [DisplayName("Which unemployment fund")]
        public Contact_ff_whichunemploymentfund? ff_whichunemploymentfund {
            get {
                return GetOptionSetValue<Contact_ff_whichunemploymentfund>("ff_whichunemploymentfund");
            }
            set {
                SetOptionSetValue("ff_whichunemploymentfund", value);
            }
        }
        
        /// <summary>
        /// <para>Dato for udmeldelse</para>
        /// <para>Display Name: Resignation date</para>
        /// </summary>
        [AttributeLogicalName("ff_withdrawaldate")]
        [DisplayName("Resignation date")]
        public DateTime? ff_withdrawaldate {
            get {
                return GetAttributeValue<DateTime?>("ff_withdrawaldate");
            }
            set {
                SetAttributeValue("ff_withdrawaldate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Work area</para>
        /// </summary>
        [AttributeLogicalName("ff_workarea")]
        [DisplayName("Work area")]
        public Contact_ff_workarea? ff_workarea {
            get {
                return GetOptionSetValue<Contact_ff_workarea>("ff_workarea");
            }
            set {
                SetOptionSetValue("ff_workarea", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Health and safety representative</para>
        /// </summary>
        [AttributeLogicalName("ff_workingenvironmentrepresentative")]
        [DisplayName("Health and safety representative")]
        public EntityReference ff_workingenvironmentrepresentative {
            get {
                return GetAttributeValue<EntityReference>("ff_workingenvironmentrepresentative");
            }
            set {
                SetAttributeValue("ff_workingenvironmentrepresentative", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Jobsituation</para>
        /// </summary>
        [AttributeLogicalName("ff_worksituation")]
        [DisplayName("Jobsituation")]
        public Contact_ff_worksituation? ff_worksituation {
            get {
                return GetOptionSetValue<Contact_ff_worksituation>("ff_worksituation");
            }
            set {
                SetOptionSetValue("ff_worksituation", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated</para>
        /// <para>Display Name: ZZ_Job situation</para>
        /// </summary>
        [AttributeLogicalName("ff_worksitutation")]
        [DisplayName("ZZ_Job situation")]
        [ObsoleteAttribute()]
        public Contact_ff_worksitutation? ff_worksitutation {
            get {
                return GetOptionSetValue<Contact_ff_worksitutation>("ff_worksitutation");
            }
            set {
                SetOptionSetValue("ff_worksitutation", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Account associated with Contact.</para>
        /// <para>Display Name: Managing Partner</para>
        /// </summary>
        [AttributeLogicalName("msa_managingpartnerid")]
        [DisplayName("Managing Partner")]
        public EntityReference msa_managingpartnerid {
            get {
                return GetAttributeValue<EntityReference>("msa_managingpartnerid");
            }
            set {
                SetAttributeValue("msa_managingpartnerid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the primary time zone that the contact works on.</para>
        /// <para>Display Name: Primary Time Zone</para>
        /// </summary>
        [AttributeLogicalName("msdyn_primarytimezone")]
        [DisplayName("Primary Time Zone")]
        [Range(-1500, 1500)]
        public int? msdyn_PrimaryTimeZone {
            get {
                return GetAttributeValue<int?>("msdyn_primarytimezone");
            }
            set {
                SetAttributeValue("msdyn_primarytimezone", value);
            }
        }
        
        /// <summary>
        /// <para>Maps to contact KPI records</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_contactkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_contactkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_contactkpiid");
            }
            set {
                SetAttributeValue("msdyn_contactkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicate buying influence using labels</para>
        /// <para>Display Name: Decision influence labels</para>
        /// </summary>
        [AttributeLogicalName("msdyn_decisioninfluencetag")]
        [DisplayName("Decision influence labels")]
        public Contact_msdyn_decisioninfluencetag? msdyn_decisioninfluencetag {
            get {
                return GetOptionSetValue<Contact_msdyn_decisioninfluencetag>("msdyn_decisioninfluencetag");
            }
            set {
                SetOptionSetValue("msdyn_decisioninfluencetag", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that the contact has opted out of web tracking.</para>
        /// <para>Display Name: Disable Web Tracking</para>
        /// </summary>
        [AttributeLogicalName("msdyn_disablewebtracking")]
        [DisplayName("Disable Web Tracking")]
        public bool? msdyn_disablewebtracking {
            get {
                return GetAttributeValue<bool?>("msdyn_disablewebtracking");
            }
            set {
                SetAttributeValue("msdyn_disablewebtracking", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether contact is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Describes if the contact is an assistant in org chart</para>
        /// <para>Display Name: Is Assistant</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isassistantinorgchart")]
        [DisplayName("Is Assistant")]
        public bool? msdyn_isassistantinorgchart {
            get {
                return GetAttributeValue<bool?>("msdyn_isassistantinorgchart");
            }
            set {
                SetAttributeValue("msdyn_isassistantinorgchart", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that the contact is considered a minor in their jurisdiction.</para>
        /// <para>Display Name: Is Minor</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isminor")]
        [DisplayName("Is Minor")]
        public bool? msdyn_isminor {
            get {
                return GetAttributeValue<bool?>("msdyn_isminor");
            }
            set {
                SetAttributeValue("msdyn_isminor", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that the contact is considered a minor in their jurisdiction and has parental consent.</para>
        /// <para>Display Name: Is Minor with Parental Consent</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isminorwithparentalconsent")]
        [DisplayName("Is Minor with Parental Consent")]
        public bool? msdyn_isminorwithparentalconsent {
            get {
                return GetAttributeValue<bool?>("msdyn_isminorwithparentalconsent");
            }
            set {
                SetAttributeValue("msdyn_isminorwithparentalconsent", value);
            }
        }
        
        /// <summary>
        /// <para>Whether or not the contact belongs to the associated account</para>
        /// <para>Display Name: Not at Company Flag</para>
        /// </summary>
        [AttributeLogicalName("msdyn_orgchangestatus")]
        [DisplayName("Not at Company Flag")]
        public Contact_msdyn_orgchangestatus? msdyn_orgchangestatus {
            get {
                return GetOptionSetValue<Contact_msdyn_orgchangestatus>("msdyn_orgchangestatus");
            }
            set {
                SetOptionSetValue("msdyn_orgchangestatus", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the date and time that the person agreed to the portal terms and conditions.</para>
        /// <para>Display Name: Portal Terms Agreement Date</para>
        /// </summary>
        [AttributeLogicalName("msdyn_portaltermsagreementdate")]
        [DisplayName("Portal Terms Agreement Date")]
        public DateTime? msdyn_portaltermsagreementdate {
            get {
                return GetAttributeValue<DateTime?>("msdyn_portaltermsagreementdate");
            }
            set {
                SetAttributeValue("msdyn_portaltermsagreementdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with contact.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        /// <summary>
        /// <para>User’s preferred portal language</para>
        /// <para>Display Name: Preferred Language</para>
        /// </summary>
        [AttributeLogicalName("mspp_userpreferredlcid")]
        [DisplayName("Preferred Language")]
        public powerpagelanguages? mspp_userpreferredlcid {
            get {
                return GetOptionSetValue<powerpagelanguages>("mspp_userpreferredlcid");
            }
            set {
                SetOptionSetValue("mspp_userpreferredlcid", value);
            }
        }
        
        [RelationshipSchemaName("Contact_ActivityPointers")]
        public IEnumerable<ActivityPointer> Contact_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Contact_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Contact_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Annotation")]
        public IEnumerable<Annotation> Contact_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Contact_Annotation", null);
            }
            set {
                SetRelatedEntities("Contact_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Appointments")]
        public IEnumerable<Appointment> Contact_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Contact_Appointments", null);
            }
            set {
                SetRelatedEntities("Contact_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_CustomerAddress")]
        public IEnumerable<CustomerAddress> Contact_CustomerAddress {
            get {
                return GetRelatedEntities<CustomerAddress>("Contact_CustomerAddress", null);
            }
            set {
                SetRelatedEntities("Contact_CustomerAddress", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public IEnumerable<Email> Contact_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Contact_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Emails")]
        public IEnumerable<Email> Contact_Emails {
            get {
                return GetRelatedEntities<Email>("Contact_Emails", null);
            }
            set {
                SetRelatedEntities("Contact_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Phonecalls")]
        public IEnumerable<PhoneCall> Contact_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Contact_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Contact_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Contact_Tasks")]
        public IEnumerable<Task> Contact_Tasks {
            get {
                return GetRelatedEntities<Task>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntities("Contact_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_customer_contacts {
            get {
                return GetRelatedEntities<Contact>("contact_customer_contacts", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_customer_contacts", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referenced)]
        public IEnumerable<Contact> Referencedcontact_master_contact {
            get {
                return GetRelatedEntities<Contact>("contact_master_contact", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("contact_master_contact", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_contacts", EntityRole.Referencing)]
        public Contact Referencingcontact_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("contact_customer_contacts", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_customer_contacts", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("contact_master_contact", EntityRole.Referencing)]
        public Contact Referencingcontact_master_contact {
            get {
                return GetRelatedEntity<Contact>("contact_master_contact", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("contact_master_contact", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_primary_contact")]
        public IEnumerable<Account> account_primary_contact {
            get {
                return GetRelatedEntities<Account>("account_primary_contact", null);
            }
            set {
                SetRelatedEntities("account_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_contacts")]
        public BusinessUnit business_unit_contacts {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_contacts", null);
            }
            set {
                SetRelatedEntity("business_unit_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_activity_parties")]
        public IEnumerable<ActivityParty> contact_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("contact_activity_parties", null);
            }
            set {
                SetRelatedEntities("contact_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_as_primary_contact")]
        public IEnumerable<Incident> contact_as_primary_contact {
            get {
                return GetRelatedEntities<Incident>("contact_as_primary_contact", null);
            }
            set {
                SetRelatedEntities("contact_as_primary_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_as_responsible_contact")]
        public IEnumerable<Incident> contact_as_responsible_contact {
            get {
                return GetRelatedEntities<Incident>("contact_as_responsible_contact", null);
            }
            set {
                SetRelatedEntities("contact_as_responsible_contact", null, value);
            }
        }
        
        [AttributeLogicalName("parentcustomerid")]
        [RelationshipSchemaName("contact_customer_accounts")]
        public Account contact_customer_accounts {
            get {
                return GetRelatedEntity<Account>("contact_customer_accounts", null);
            }
            set {
                SetRelatedEntity("contact_customer_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_entitlement_ContactId")]
        public IEnumerable<Entitlement> contact_entitlement_ContactId {
            get {
                return GetRelatedEntities<Entitlement>("contact_entitlement_ContactId", null);
            }
            set {
                SetRelatedEntities("contact_entitlement_ContactId", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_entitlement_Customer")]
        public IEnumerable<Entitlement> contact_entitlement_Customer {
            get {
                return GetRelatedEntities<Entitlement>("contact_entitlement_Customer", null);
            }
            set {
                SetRelatedEntities("contact_entitlement_Customer", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_ff_casenotes")]
        public IEnumerable<ff_casenote> contact_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("contact_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("contact_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> contact_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("contact_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("contact_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("contact_originating_lead")]
        public Lead contact_originating_lead {
            get {
                return GetRelatedEntity<Lead>("contact_originating_lead", null);
            }
            set {
                SetRelatedEntity("contact_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("contact_owning_user")]
        public SystemUser contact_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("contact_owning_user", null);
            }
            set {
                SetRelatedEntity("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("contactleads_association")]
        public IEnumerable<Lead> contactleads_association {
            get {
                return GetRelatedEntities<Lead>("contactleads_association", null);
            }
            set {
                SetRelatedEntities("contactleads_association", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlementcontacts_association")]
        public IEnumerable<Entitlement> entitlementcontacts_association {
            get {
                return GetRelatedEntities<Entitlement>("entitlementcontacts_association", null);
            }
            set {
                SetRelatedEntities("entitlementcontacts_association", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_Contact_member_ff_activities")]
        public IEnumerable<ff_activities> ff_Contact_member_ff_activities {
            get {
                return GetRelatedEntities<ff_activities>("ff_Contact_member_ff_activities", null);
            }
            set {
                SetRelatedEntities("ff_Contact_member_ff_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_awardgiftcard_existingmember_contact")]
        public IEnumerable<ff_awardgiftcard> ff_awardgiftcard_existingmember_contact {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("ff_awardgiftcard_existingmember_contact", null);
            }
            set {
                SetRelatedEntities("ff_awardgiftcard_existingmember_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_awardgiftcard_newmember_contact")]
        public IEnumerable<ff_awardgiftcard> ff_awardgiftcard_newmember_contact {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("ff_awardgiftcard_newmember_contact", null);
            }
            set {
                SetRelatedEntities("ff_awardgiftcard_newmember_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_committeemember_member_contact")]
        public IEnumerable<ff_committeemember> ff_committeemember_member_contact {
            get {
                return GetRelatedEntities<ff_committeemember>("ff_committeemember_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_committeemember_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_firm")]
        [RelationshipSchemaName("ff_contact_firm_account")]
        public Account ff_contact_firm_account {
            get {
                return GetRelatedEntity<Account>("ff_contact_firm_account", null);
            }
            set {
                SetRelatedEntity("ff_contact_firm_account", null, value);
            }
        }
        
        [AttributeLogicalName("ff_positionoftrust")]
        [RelationshipSchemaName("ff_contact_positionoftrust_ff_positionoftrust")]
        public ff_positionoftrust ff_contact_positionoftrust_ff_positionoftrust {
            get {
                return GetRelatedEntity<ff_positionoftrust>("ff_contact_positionoftrust_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntity("ff_contact_positionoftrust_ff_positionoftrust", null, value);
            }
        }
        
        [AttributeLogicalName("ff_workingenvironmentrepresentative")]
        [RelationshipSchemaName("ff_contact_workingenvironmentrepresentative_ff_positionoftrust")]
        public ff_positionoftrust ff_contact_workingenvironmentrepresentative_ff_positionoftrust {
            get {
                return GetRelatedEntity<ff_positionoftrust>("ff_contact_workingenvironmentrepresentative_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntity("ff_contact_workingenvironmentrepresentative_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_Internpart_contact")]
        public IEnumerable<Email> ff_email_Internpart_contact {
            get {
                return GetRelatedEntities<Email>("ff_email_Internpart_contact", null);
            }
            set {
                SetRelatedEntities("ff_email_Internpart_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_member_contact")]
        public IEnumerable<Email> ff_email_member_contact {
            get {
                return GetRelatedEntities<Email>("ff_email_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_email_member_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_employment_member_contact")]
        public IEnumerable<ff_employment> ff_employment_member_contact {
            get {
                return GetRelatedEntities<ff_employment>("ff_employment_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_employment_member_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_eventattendee_contact_contact")]
        public IEnumerable<ff_eventattendee> ff_eventattendee_contact_contact {
            get {
                return GetRelatedEntities<ff_eventattendee>("ff_eventattendee_contact_contact", null);
            }
            set {
                SetRelatedEntities("ff_eventattendee_contact_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_giftcard_contact_contact")]
        public IEnumerable<ff_giftcard> ff_giftcard_contact_contact {
            get {
                return GetRelatedEntities<ff_giftcard>("ff_giftcard_contact_contact", null);
            }
            set {
                SetRelatedEntities("ff_giftcard_contact_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_member_contact")]
        public IEnumerable<Incident> ff_incident_member_contact {
            get {
                return GetRelatedEntities<Incident>("ff_incident_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_incident_member_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incidentparty_contact_contact")]
        public IEnumerable<ff_incidentparty> ff_incidentparty_contact_contact {
            get {
                return GetRelatedEntities<ff_incidentparty>("ff_incidentparty_contact_contact", null);
            }
            set {
                SetRelatedEntities("ff_incidentparty_contact_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_lead_refererer_contact")]
        public IEnumerable<Lead> ff_lead_refererer_contact {
            get {
                return GetRelatedEntities<Lead>("ff_lead_refererer_contact", null);
            }
            set {
                SetRelatedEntities("ff_lead_refererer_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_membershipfee_member_contact")]
        public IEnumerable<ff_membershipfee> ff_membershipfee_member_contact {
            get {
                return GetRelatedEntities<ff_membershipfee>("ff_membershipfee_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_membershipfee_member_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_opportunity_referrer_contact")]
        public IEnumerable<Opportunity> ff_opportunity_referrer_contact {
            get {
                return GetRelatedEntities<Opportunity>("ff_opportunity_referrer_contact", null);
            }
            set {
                SetRelatedEntities("ff_opportunity_referrer_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_positionoftrust_member_contact")]
        public IEnumerable<ff_positionoftrust> ff_positionoftrust_member_contact {
            get {
                return GetRelatedEntities<ff_positionoftrust>("ff_positionoftrust_member_contact", null);
            }
            set {
                SetRelatedEntities("ff_positionoftrust_member_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_customer_contacts")]
        public IEnumerable<Incident> incident_customer_contacts {
            get {
                return GetRelatedEntities<Incident>("incident_customer_contacts", null);
            }
            set {
                SetRelatedEntities("incident_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_customer_contacts")]
        public IEnumerable<Lead> lead_customer_contacts {
            get {
                return GetRelatedEntities<Lead>("lead_customer_contacts", null);
            }
            set {
                SetRelatedEntities("lead_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_parent_contact")]
        public IEnumerable<Lead> lead_parent_contact {
            get {
                return GetRelatedEntities<Lead>("lead_parent_contact", null);
            }
            set {
                SetRelatedEntities("lead_parent_contact", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public SystemUser lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public SystemUser lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public SystemUser lk_contactbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public SystemUser lk_contactbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("msa_managingpartnerid")]
        [RelationshipSchemaName("msa_contact_managingpartner")]
        public Account msa_contact_managingpartner {
            get {
                return GetRelatedEntity<Account>("msa_contact_managingpartner", null);
            }
            set {
                SetRelatedEntity("msa_contact_managingpartner", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_customer_contacts")]
        public IEnumerable<Opportunity> opportunity_customer_contacts {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_customer_contacts", null);
            }
            set {
                SetRelatedEntities("opportunity_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_parent_contact")]
        public IEnumerable<Opportunity> opportunity_parent_contact {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_parent_contact", null);
            }
            set {
                SetRelatedEntities("opportunity_parent_contact", null, value);
            }
        }
        
        [AttributeLogicalName("preferredsystemuserid")]
        [RelationshipSchemaName("system_user_contacts")]
        public SystemUser system_user_contacts {
            get {
                return GetRelatedEntity<SystemUser>("system_user_contacts", null);
            }
            set {
                SetRelatedEntity("system_user_contacts", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_contacts")]
        public Team team_contacts {
            get {
                return GetRelatedEntity<Team>("team_contacts", null);
            }
            set {
                SetRelatedEntity("team_contacts", null, value);
            }
        }
        
        public static Contact Retrieve(IOrganizationService service, Guid id, params Expression<Func<Contact,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'ContactKey'</para>
        /// </summary>
        public static Contact Retrieve_ff_contactkey(IOrganizationService service, string ff_membershipnumber, params Expression<Func<Contact,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_membershipnumber", ff_membershipnumber);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'CPR Number Key'</para>
        /// </summary>
        public static Contact Retrieve_ff_cprnumberkey(IOrganizationService service, string ff_personalidentificationnumber, params Expression<Func<Contact,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_personalidentificationnumber", ff_personalidentificationnumber);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'ContactKey'</para>
        /// </summary>
        public void AltKey_ff_contactkey(string ff_membershipnumber) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_membershipnumber", ff_membershipnumber);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'CPR Number Key'</para>
        /// </summary>
        public void AltKey_ff_cprnumberkey(string ff_personalidentificationnumber) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_personalidentificationnumber", ff_personalidentificationnumber);
        }
    }
    
    /// <summary>
    /// <para>Display Name: ContactLeads</para>
    /// </summary>
    [EntityLogicalName("contactleads")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ContactLeads : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "contactleads";
        
        public const string RelationshipSchemaName = "ContactLeads";
        
        public const int EntityTypeCode = 22;
        
        public ContactLeads() : 
                base(EntityLogicalName) {
        }
        
        public ContactLeads(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("contactleadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("contactleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the leads for the contact.</para>
        /// </summary>
        [AttributeLogicalName("contactleadid")]
        public Guid? ContactLeadId {
            get {
                return GetAttributeValue<Guid?>("contactleadid");
            }
            set {
                SetId("contactleadid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        [AttributeLogicalName("leadid")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static ContactLeads Retrieve(IOrganizationService service, Guid id, params Expression<Func<ContactLeads,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Address and shipping information. Used to store additional addresses for an account or contact.</para>
    /// <para>Display Name: Address</para>
    /// </summary>
    [EntityLogicalName("customeraddress")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class CustomerAddress : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "customeraddress";
        
        public const int EntityTypeCode = 1071;
        
        public CustomerAddress() : 
                base(EntityLogicalName) {
        }
        
        public CustomerAddress(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("customeraddressid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("customeraddressid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the customer address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("customeraddressid")]
        [DisplayName("Address")]
        public Guid? CustomerAddressId {
            get {
                return GetAttributeValue<Guid?>("customeraddressid");
            }
            set {
                SetId("customeraddressid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of the address, to indicate whether the address is the primary, secondary, or other address for the customer.</para>
        /// <para>Display Name: Address Number</para>
        /// </summary>
        [AttributeLogicalName("addressnumber")]
        [DisplayName("Address Number")]
        [Range(0, 1000000000)]
        public int? AddressNumber {
            get {
                return GetAttributeValue<int?>("addressnumber");
            }
            set {
                SetAttributeValue("addressnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the address type, such as primary or billing.</para>
        /// <para>Display Name: Address Type</para>
        /// </summary>
        [AttributeLogicalName("addresstypecode")]
        [DisplayName("Address Type")]
        public CustomerAddress_AddressTypeCode? AddressTypeCode {
            get {
                return GetOptionSetValue<CustomerAddress_AddressTypeCode>("addresstypecode");
            }
            set {
                SetOptionSetValue("addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the customer's address to help identify the location.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("city")]
        [DisplayName("City")]
        [MaxLength(80)]
        public string City {
            get {
                return GetAttributeValue<string>("city");
            }
            set {
                SetAttributeValue("city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("composite")]
        [DisplayName("Address")]
        public string Composite {
            get {
                return GetAttributeValue<string>("composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the customer's address.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("country")]
        [DisplayName("Country/Region")]
        [MaxLength(80)]
        public string Country {
            get {
                return GetAttributeValue<string>("country");
            }
            set {
                SetAttributeValue("country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the customer's address.</para>
        /// <para>Display Name: County</para>
        /// </summary>
        [AttributeLogicalName("county")]
        [DisplayName("County")]
        [MaxLength(50)]
        public string County {
            get {
                return GetAttributeValue<string>("county");
            }
            set {
                SetAttributeValue("county", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the customer's address.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Select the freight terms to make sure shipping charges are processed correctly.</para>
        /// <para>Display Name: Freight Terms</para>
        /// </summary>
        [AttributeLogicalName("freighttermscode")]
        [DisplayName("Freight Terms")]
        public CustomerAddress_FreightTermsCode? FreightTermsCode {
            get {
                return GetOptionSetValue<CustomerAddress_FreightTermsCode>("freighttermscode");
            }
            set {
                SetOptionSetValue("freighttermscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the customer's address, for use in mapping and other applications.</para>
        /// <para>Display Name: Latitude</para>
        /// </summary>
        [AttributeLogicalName("latitude")]
        [DisplayName("Latitude")]
        public double? Latitude {
            get {
                return GetAttributeValue<double?>("latitude");
            }
            set {
                SetAttributeValue("latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the customer's address to help identify the location.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("line1")]
        [DisplayName("Street 1")]
        [MaxLength(250)]
        public string Line1 {
            get {
                return GetAttributeValue<string>("line1");
            }
            set {
                SetAttributeValue("line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the customer's address.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("line2")]
        [DisplayName("Street 2")]
        [MaxLength(250)]
        public string Line2 {
            get {
                return GetAttributeValue<string>("line2");
            }
            set {
                SetAttributeValue("line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the customer's address.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("line3")]
        [DisplayName("Street 3")]
        [MaxLength(250)]
        public string Line3 {
            get {
                return GetAttributeValue<string>("line3");
            }
            set {
                SetAttributeValue("line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the customer's address, for use in mapping and other applications.</para>
        /// <para>Display Name: Longitude</para>
        /// </summary>
        [AttributeLogicalName("longitude")]
        [DisplayName("Longitude")]
        public double? Longitude {
            get {
                return GetAttributeValue<double?>("longitude");
            }
            set {
                SetAttributeValue("longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the customer's address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Address Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type code of the customer record to indicate whether the address belongs to a customer account or contact.</para>
        /// <para>Display Name: Object Type </para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Object Type ")]
        public string ObjectTypeCode {
            get {
                return GetAttributeValue<string>("objecttypecode");
            }
            set {
                SetAttributeValue("objecttypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Shows the business unit that the record owner belongs to.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the customer address.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owner")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the customer's address.</para>
        /// <para>Display Name: Parent</para>
        /// </summary>
        [AttributeLogicalName("parentid")]
        [DisplayName("Parent")]
        public EntityReference ParentId {
            get {
                return GetAttributeValue<EntityReference>("parentid");
            }
            set {
                SetAttributeValue("parentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the customer's address.</para>
        /// <para>Display Name: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("postofficebox")]
        [DisplayName("Post Office Box")]
        [MaxLength(20)]
        public string PostOfficeBox {
            get {
                return GetAttributeValue<string>("postofficebox");
            }
            set {
                SetAttributeValue("postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the address.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(20)]
        public string PostalCode {
            get {
                return GetAttributeValue<string>("postalcode");
            }
            set {
                SetAttributeValue("postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the primary contact person for the customer's address.</para>
        /// <para>Display Name: Address Contact</para>
        /// </summary>
        [AttributeLogicalName("primarycontactname")]
        [DisplayName("Address Contact")]
        [MaxLength(150)]
        public string PrimaryContactName {
            get {
                return GetAttributeValue<string>("primarycontactname");
            }
            set {
                SetAttributeValue("primarycontactname", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the customer's address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Address Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("shippingmethodcode")]
        [DisplayName("Shipping Method")]
        public CustomerAddress_ShippingMethodCode? ShippingMethodCode {
            get {
                return GetOptionSetValue<CustomerAddress_ShippingMethodCode>("shippingmethodcode");
            }
            set {
                SetOptionSetValue("shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the customer's address.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(50)]
        public string StateOrProvince {
            get {
                return GetAttributeValue<string>("stateorprovince");
            }
            set {
                SetAttributeValue("stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the primary phone number for the customer's address.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number for the customer's address.</para>
        /// <para>Display Name: Phone 2</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Phone 2")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number for the customer's address.</para>
        /// <para>Display Name: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Telephone 3")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the customer's address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("upszone")]
        [DisplayName("UPS Zone")]
        [MaxLength(4)]
        public string UPSZone {
            get {
                return GetAttributeValue<string>("upszone");
            }
            set {
                SetAttributeValue("upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone for the address.</para>
        /// <para>Display Name: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("utcoffset")]
        [DisplayName("UTC Offset")]
        [Range(-1500, 1500)]
        public int? UTCOffset {
            get {
                return GetAttributeValue<int?>("utcoffset");
            }
            set {
                SetAttributeValue("utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the customer address.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("parentid")]
        [RelationshipSchemaName("Account_CustomerAddress")]
        public Account Account_CustomerAddress {
            get {
                return GetRelatedEntity<Account>("Account_CustomerAddress", null);
            }
            set {
                SetRelatedEntity("Account_CustomerAddress", null, value);
            }
        }
        
        [AttributeLogicalName("parentid")]
        [RelationshipSchemaName("Contact_CustomerAddress")]
        public Contact Contact_CustomerAddress {
            get {
                return GetRelatedEntity<Contact>("Contact_CustomerAddress", null);
            }
            set {
                SetRelatedEntity("Contact_CustomerAddress", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_customeraddress_createdonbehalfby")]
        public SystemUser lk_customeraddress_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddress_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddress_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_customeraddress_modifiedonbehalfby")]
        public SystemUser lk_customeraddress_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddress_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddress_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_customeraddressbase_createdby")]
        public SystemUser lk_customeraddressbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddressbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddressbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_customeraddressbase_modifiedby")]
        public SystemUser lk_customeraddressbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_customeraddressbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_customeraddressbase_modifiedby", null, value);
            }
        }
        
        public static CustomerAddress Retrieve(IOrganizationService service, Guid id, params Expression<Func<CustomerAddress,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity that is delivered using email protocols.</para>
    /// <para>Display Name: Email</para>
    /// </summary>
    [EntityLogicalName("email")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Email : ExtendedEntity<EmailState, Email_StatusCode> {
        
        public const string EntityLogicalName = "email";
        
        public const int EntityTypeCode = 4202;
        
        public Email() : 
                base(EntityLogicalName) {
        }
        
        public Email(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email activity.</para>
        /// <para>Display Name: Email Message</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Email Message")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>The Entity that Accepted the Email</para>
        /// <para>Display Name: Accepting Entity</para>
        /// </summary>
        [AttributeLogicalName("acceptingentityid")]
        [DisplayName("Accepting Entity")]
        public EntityReference AcceptingEntityId {
            get {
                return GetAttributeValue<EntityReference>("acceptingentityid");
            }
            set {
                SetAttributeValue("acceptingentityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent creating and sending the email. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the email. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the email. By default, it displays the date and time when the activity was created, but can be edited to capture the actual time to create and send the email.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the umber of attachments of the email message.</para>
        /// <para>Display Name: Attachment Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentcount")]
        [DisplayName("Attachment Count")]
        [Range(0, 2147483647)]
        public int? AttachmentCount {
            get {
                return GetAttributeValue<int?>("attachmentcount");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email attachment has been viewed.</para>
        /// <para>Display Name: Attachment Open Count</para>
        /// </summary>
        [AttributeLogicalName("attachmentopencount")]
        [DisplayName("Attachment Open Count")]
        [Range(0, 2147483647)]
        public int? AttachmentOpenCount {
            get {
                return GetAttributeValue<int?>("attachmentopencount");
            }
            set {
                SetAttributeValue("attachmentopencount", value);
            }
        }
        
        /// <summary>
        /// <para>Hash of base of conversation index.</para>
        /// <para>Display Name: Conversation Index (Hash)</para>
        /// </summary>
        [AttributeLogicalName("baseconversationindexhash")]
        [DisplayName("Conversation Index (Hash)")]
        [Range(-2147483648, 2147483647)]
        public int? BaseConversationIndexHash {
            get {
                return GetAttributeValue<int?>("baseconversationindexhash");
            }
            set {
                SetAttributeValue("baseconversationindexhash", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that are included on the email distribution, but are not displayed to other recipients.</para>
        /// <para>Display Name: Bcc</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("Bcc")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the email type, such as lead outreach, customer follow-up, or service alert, to tie the email to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the recipients that should be copied on the email.</para>
        /// <para>Display Name: Cc</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("Cc")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the body is compressed.</para>
        /// <para>Display Name: Compression</para>
        /// </summary>
        [AttributeLogicalName("compressed")]
        [DisplayName("Compression")]
        public bool? Compressed {
            get {
                return GetAttributeValue<bool?>("compressed");
            }
        }
        
        /// <summary>
        /// <para>Identifier for all the email responses for this conversation.</para>
        /// <para>Display Name: Conversation Index</para>
        /// </summary>
        [AttributeLogicalName("conversationindex")]
        [DisplayName("Conversation Index")]
        [MaxLength(2048)]
        public string ConversationIndex {
            get {
                return GetAttributeValue<string>("conversationindex");
            }
        }
        
        /// <summary>
        /// <para>Conversation Tracking Id.</para>
        /// <para>Display Name: Conversation Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("conversationtrackingid")]
        [DisplayName("Conversation Tracking Id")]
        public Guid? ConversationTrackingId {
            get {
                return GetAttributeValue<Guid?>("conversationtrackingid");
            }
            set {
                SetAttributeValue("conversationtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Correlated Activity Id</para>
        /// <para>Display Name: Correlated Activity Id</para>
        /// </summary>
        [AttributeLogicalName("correlatedactivityid")]
        [DisplayName("Correlated Activity Id")]
        public EntityReference CorrelatedActivityId {
            get {
                return GetAttributeValue<EntityReference>("correlatedactivityid");
            }
            set {
                SetAttributeValue("correlatedactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how an email is correlated to an existing email in Microsoft Dynamics 365. XHeader and CustomCorrelation are not used. For system use only.</para>
        /// <para>Display Name: Correlation Method</para>
        /// </summary>
        [AttributeLogicalName("correlationmethod")]
        [DisplayName("Correlation Method")]
        public Email_CorrelationMethod? CorrelationMethod {
            get {
                return GetOptionSetValue<Email_CorrelationMethod>("correlationmethod");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected date and time when email will be sent.</para>
        /// <para>Display Name: Send Later</para>
        /// </summary>
        [AttributeLogicalName("delayedemailsendtime")]
        [DisplayName("Send Later")]
        public DateTime? DelayedEmailSendTime {
            get {
                return GetAttributeValue<DateTime?>("delayedemailsendtime");
            }
            set {
                SetAttributeValue("delayedemailsendtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the count of the number of attempts made to send the email. The count is used as an indicator of email routing issues.</para>
        /// <para>Display Name: No. of Delivery Attempts</para>
        /// </summary>
        [AttributeLogicalName("deliveryattempts")]
        [DisplayName("No. of Delivery Attempts")]
        [Range(0, 1000000000)]
        public int? DeliveryAttempts {
            get {
                return GetAttributeValue<int?>("deliveryattempts");
            }
            set {
                SetAttributeValue("deliveryattempts", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority of delivery of the email to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the sender should receive confirmation that the email was delivered.</para>
        /// <para>Display Name: Delivery Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("deliveryreceiptrequested")]
        [DisplayName("Delivery Receipt Requested")]
        public bool? DeliveryReceiptRequested {
            get {
                return GetAttributeValue<bool?>("deliveryreceiptrequested");
            }
            set {
                SetAttributeValue("deliveryreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>Type the greeting and message text of the email.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the email as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when an email reminder expires.</para>
        /// <para>Display Name: Email Reminder Expiry Time</para>
        /// </summary>
        [AttributeLogicalName("emailreminderexpirytime")]
        [DisplayName("Email Reminder Expiry Time")]
        public DateTime? EmailReminderExpiryTime {
            get {
                return GetAttributeValue<DateTime?>("emailreminderexpirytime");
            }
            set {
                SetAttributeValue("emailreminderexpirytime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the email reminder.</para>
        /// <para>Display Name: Email Reminder Status</para>
        /// </summary>
        [AttributeLogicalName("emailreminderstatus")]
        [DisplayName("Email Reminder Status")]
        public Email_EmailReminderStatus? EmailReminderStatus {
            get {
                return GetOptionSetValue<Email_EmailReminderStatus>("emailreminderstatus");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Email Reminder Text</para>
        /// </summary>
        [AttributeLogicalName("emailremindertext")]
        [DisplayName("Email Reminder Text")]
        [MaxLength(1250)]
        public string EmailReminderText {
            get {
                return GetAttributeValue<string>("emailremindertext");
            }
            set {
                SetAttributeValue("emailremindertext", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of the email reminder.</para>
        /// <para>Display Name: Email Reminder Type</para>
        /// </summary>
        [AttributeLogicalName("emailremindertype")]
        [DisplayName("Email Reminder Type")]
        public Email_EmailReminderType? EmailReminderType {
            get {
                return GetOptionSetValue<Email_EmailReminderType>("emailremindertype");
            }
            set {
                SetOptionSetValue("emailremindertype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the sender of the email.</para>
        /// <para>Display Name: Sender</para>
        /// </summary>
        [AttributeLogicalName("emailsender")]
        [DisplayName("Sender")]
        public EntityReference EmailSender {
            get {
                return GetAttributeValue<EntityReference>("emailsender");
            }
        }
        
        /// <summary>
        /// <para>Email Tracking Id.</para>
        /// <para>Display Name: Email Tracking Id</para>
        /// </summary>
        [AttributeLogicalName("emailtrackingid")]
        [DisplayName("Email Tracking Id")]
        public Guid? EmailTrackingId {
            get {
                return GetAttributeValue<Guid?>("emailtrackingid");
            }
            set {
                SetAttributeValue("emailtrackingid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select whether the email allows following recipient activities sent from Microsoft Dynamics 365.This is user preference state which can be overridden by system evaluated state.</para>
        /// <para>Display Name: Following</para>
        /// </summary>
        [AttributeLogicalName("followemailuserpreference")]
        [DisplayName("Following")]
        public bool? FollowEmailUserPreference {
            get {
                return GetAttributeValue<bool?>("followemailuserpreference");
            }
            set {
                SetAttributeValue("followemailuserpreference", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ID of the email message that this email activity is a response to.</para>
        /// <para>Display Name: In Reply To Message</para>
        /// </summary>
        [AttributeLogicalName("inreplyto")]
        [DisplayName("In Reply To Message")]
        [MaxLength(320)]
        public string InReplyTo {
            get {
                return GetAttributeValue<string>("inreplyto");
            }
        }
        
        /// <summary>
        /// <para>Contains a set of internet headers associated to the email message in json format</para>
        /// <para>Display Name: Internet message headers</para>
        /// </summary>
        [AttributeLogicalName("internetmessageheaders")]
        [DisplayName("Internet message headers")]
        [MaxLength(500)]
        public string InternetMessageHeaders {
            get {
                return GetAttributeValue<string>("internetmessageheaders");
            }
            set {
                SetAttributeValue("internetmessageheaders", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the email activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the sender of the email is unresolved in case of multiple match</para>
        /// <para>Display Name: Is Duplicate Sender Unresolved</para>
        /// </summary>
        [AttributeLogicalName("isduplicatesenderunresolved")]
        [DisplayName("Is Duplicate Sender Unresolved")]
        public bool? IsDuplicateSenderUnresolved {
            get {
                return GetAttributeValue<bool?>("isduplicatesenderunresolved");
            }
            set {
                SetAttributeValue("isduplicatesenderunresolved", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email is followed. This is evaluated state which overrides user selection of follow email.</para>
        /// <para>Display Name: Followed</para>
        /// </summary>
        [AttributeLogicalName("isemailfollowed")]
        [DisplayName("Followed")]
        public bool? IsEmailFollowed {
            get {
                return GetAttributeValue<bool?>("isemailfollowed");
            }
        }
        
        /// <summary>
        /// <para>For internal use only. Shows whether this email Reminder is Set.</para>
        /// <para>Display Name: Reminder Set</para>
        /// </summary>
        [AttributeLogicalName("isemailreminderset")]
        [DisplayName("Reminder Set")]
        public bool? IsEmailReminderSet {
            get {
                return GetAttributeValue<bool?>("isemailreminderset");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: IsUnsafe</para>
        /// </summary>
        [AttributeLogicalName("isunsafe")]
        [DisplayName("IsUnsafe")]
        [Range(0, 2147483647)]
        public int? IsUnsafe {
            get {
                return GetAttributeValue<int?>("isunsafe");
            }
        }
        
        /// <summary>
        /// <para>Indication if the email was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the latest date and time when email was opened.</para>
        /// <para>Display Name: Last Opened Time</para>
        /// </summary>
        [AttributeLogicalName("lastopenedtime")]
        [DisplayName("Last Opened Time")]
        public DateTime? LastOpenedTime {
            get {
                return GetAttributeValue<DateTime?>("lastopenedtime");
            }
            set {
                SetAttributeValue("lastopenedtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times a link in an email has been clicked.</para>
        /// <para>Display Name: Links Clicked Count</para>
        /// </summary>
        [AttributeLogicalName("linksclickedcount")]
        [DisplayName("Links Clicked Count")]
        [Range(0, 2147483647)]
        public int? LinksClickedCount {
            get {
                return GetAttributeValue<int?>("linksclickedcount");
            }
            set {
                SetAttributeValue("linksclickedcount", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the email message. Used only for email that is received.</para>
        /// <para>Display Name: Message ID</para>
        /// </summary>
        [AttributeLogicalName("messageid")]
        [DisplayName("Message ID")]
        [MaxLength(320)]
        public string MessageId {
            get {
                return GetAttributeValue<string>("messageid");
            }
            set {
                SetAttributeValue("messageid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Message ID Dup Check</para>
        /// </summary>
        [AttributeLogicalName("messageiddupcheck")]
        [DisplayName("Message ID Dup Check")]
        public Guid? MessageIdDupCheck {
            get {
                return GetAttributeValue<Guid?>("messageiddupcheck");
            }
            set {
                SetAttributeValue("messageiddupcheck", value);
            }
        }
        
        /// <summary>
        /// <para>MIME type of the email message data.</para>
        /// <para>Display Name: Mime Type</para>
        /// </summary>
        [AttributeLogicalName("mimetype")]
        [DisplayName("Mime Type")]
        [MaxLength(256)]
        public string MimeType {
            get {
                return GetAttributeValue<string>("mimetype");
            }
            set {
                SetAttributeValue("mimetype", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Select the notification code to identify issues with the email recipients or attachments, such as blocked attachments.</para>
        /// <para>Display Name: Notifications</para>
        /// </summary>
        [AttributeLogicalName("notifications")]
        [DisplayName("Notifications")]
        public Email_Notifications? Notifications {
            get {
                return GetOptionSetValue<Email_Notifications>("notifications");
            }
            set {
                SetOptionSetValue("notifications", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email has been opened.</para>
        /// <para>Display Name: Open Count</para>
        /// </summary>
        [AttributeLogicalName("opencount")]
        [DisplayName("Open Count")]
        [Range(0, 2147483647)]
        public int? OpenCount {
            get {
                return GetAttributeValue<int?>("opencount");
            }
            set {
                SetAttributeValue("opencount", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the email activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the email activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the email activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Select the activity that the email is associated with.</para>
        /// <para>Display Name: Parent Activity Id</para>
        /// </summary>
        [AttributeLogicalName("parentactivityid")]
        [DisplayName("Parent Activity Id")]
        public EntityReference ParentActivityId {
            get {
                return GetAttributeValue<EntityReference>("parentactivityid");
            }
            set {
                SetAttributeValue("parentactivityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Parent Sensitivity Label Id</para>
        /// </summary>
        [AttributeLogicalName("parentsensitivitylabelid")]
        [DisplayName("Parent Sensitivity Label Id")]
        public Guid? ParentSensitivityLabelId {
            get {
                return GetAttributeValue<Guid?>("parentsensitivitylabelid");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay email processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeemailprocessinguntil")]
        [DisplayName("Delay email processing until")]
        public DateTime? PostponeEmailProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeemailprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Email_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Email_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates that a read receipt is requested.</para>
        /// <para>Display Name: Read Receipt Requested</para>
        /// </summary>
        [AttributeLogicalName("readreceiptrequested")]
        [DisplayName("Read Receipt Requested")]
        public bool? ReadReceiptRequested {
            get {
                return GetAttributeValue<bool?>("readreceiptrequested");
            }
            set {
                SetAttributeValue("readreceiptrequested", value);
            }
        }
        
        /// <summary>
        /// <para>The Mailbox that Received the Email.</para>
        /// <para>Display Name: Receiving Mailbox</para>
        /// </summary>
        [AttributeLogicalName("receivingmailboxid")]
        [DisplayName("Receiving Mailbox")]
        public EntityReference ReceivingMailboxId {
            get {
                return GetAttributeValue<EntityReference>("receivingmailboxid");
            }
            set {
                SetAttributeValue("receivingmailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the email relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Reminder Action Card Id.</para>
        /// <para>Display Name: Reminder Action Card Id.</para>
        /// </summary>
        [AttributeLogicalName("reminderactioncardid")]
        [DisplayName("Reminder Action Card Id.")]
        public Guid? ReminderActionCardId {
            get {
                return GetAttributeValue<Guid?>("reminderactioncardid");
            }
            set {
                SetAttributeValue("reminderactioncardid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the number of replies received for an email.</para>
        /// <para>Display Name: Reply Count</para>
        /// </summary>
        [AttributeLogicalName("replycount")]
        [DisplayName("Reply Count")]
        [Range(0, 2147483647)]
        public int? ReplyCount {
            get {
                return GetAttributeValue<int?>("replycount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Reserved for internal use</para>
        /// </summary>
        [AttributeLogicalName("reservedforinternaluse")]
        [DisplayName("Reserved for internal use")]
        public string ReservedForInternalUse {
            get {
                return GetAttributeValue<string>("reservedforinternaluse");
            }
            set {
                SetAttributeValue("reservedforinternaluse", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the email record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this email. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the email activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time for the activity to be completed to provide details about when the email will be sent.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected start date and time for the activity to provide details about the tentative time when the email activity must be initiated.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Sender of the email.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("sender")]
        [DisplayName("From")]
        [MaxLength(250)]
        public string Sender {
            get {
                return GetAttributeValue<string>("sender");
            }
            set {
                SetAttributeValue("sender", value);
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Shows the parent account of the sender of the email.</para>
        /// <para>Display Name: Senders Account</para>
        /// </summary>
        [AttributeLogicalName("sendersaccount")]
        [DisplayName("Senders Account")]
        public EntityReference SendersAccount {
            get {
                return GetAttributeValue<EntityReference>("sendersaccount");
            }
        }
        
        /// <summary>
        /// <para>The sensitivity label assigned to the Email.</para>
        /// <para>Display Name: Sensitivity Label</para>
        /// </summary>
        [AttributeLogicalName("sensitivitylabelid")]
        [DisplayName("Sensitivity Label")]
        public EntityReference SensitivityLabelId {
            get {
                return GetAttributeValue<EntityReference>("sensitivitylabelid");
            }
            set {
                SetAttributeValue("sensitivitylabelid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Sensitivity Label Info</para>
        /// </summary>
        [AttributeLogicalName("sensitivitylabelinfo")]
        [DisplayName("Sensitivity Label Info")]
        [MaxLength(1073741823)]
        public string SensitivityLabelInfo {
            get {
                return GetAttributeValue<string>("sensitivitylabelinfo");
            }
            set {
                SetAttributeValue("sensitivitylabelinfo", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time that the email was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the email is open, completed, or canceled. Completed and canceled email is read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public EmailState? StateCode {
            get {
                return GetOptionSetValue<EmailState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg mailens status.</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Email_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Email_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the email type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the email.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(800)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the Microsoft Office Outlook account for the user who submitted the email to Microsoft Dynamics 365.</para>
        /// <para>Display Name: Submitted By</para>
        /// </summary>
        [AttributeLogicalName("submittedby")]
        [DisplayName("Submitted By")]
        [MaxLength(250)]
        public string SubmittedBy {
            get {
                return GetAttributeValue<string>("submittedby");
            }
            set {
                SetAttributeValue("submittedby", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only. ID for template used in email.</para>
        /// <para>Display Name: ID for template used.</para>
        /// </summary>
        [AttributeLogicalName("templateid")]
        [DisplayName("ID for template used.")]
        public EntityReference TemplateId {
            get {
                return GetAttributeValue<EntityReference>("templateid");
            }
            set {
                SetAttributeValue("templateid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, queue, or user recipients for the email.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the email addresses corresponding to the recipients.</para>
        /// <para>Display Name: To Recipients</para>
        /// </summary>
        [AttributeLogicalName("torecipients")]
        [DisplayName("To Recipients")]
        [MaxLength(500)]
        public string ToRecipients {
            get {
                return GetAttributeValue<string>("torecipients");
            }
            set {
                SetAttributeValue("torecipients", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the tracking token assigned to the email to make sure responses are automatically tracked in Microsoft Dynamics 365.</para>
        /// <para>Display Name: Tracking Token</para>
        /// </summary>
        [AttributeLogicalName("trackingtoken")]
        [DisplayName("Tracking Token")]
        [MaxLength(50)]
        public string TrackingToken {
            get {
                return GetAttributeValue<string>("trackingtoken");
            }
            set {
                SetAttributeValue("trackingtoken", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the email message.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Indicates if the subject changed compared to the subject of the correlated email</para>
        /// <para>Display Name: Correlated subject changed</para>
        /// </summary>
        [AttributeLogicalName("correlatedsubjectchanged")]
        [DisplayName("Correlated subject changed")]
        public bool? correlatedsubjectchanged {
            get {
                return GetAttributeValue<bool?>("correlatedsubjectchanged");
            }
            set {
                SetAttributeValue("correlatedsubjectchanged", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Intern part</para>
        /// </summary>
        [AttributeLogicalName("ff_internpart")]
        [DisplayName("Intern part")]
        public EntityReference ff_Internpart {
            get {
                return GetAttributeValue<EntityReference>("ff_internpart");
            }
            set {
                SetAttributeValue("ff_internpart", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Note</para>
        /// </summary>
        [AttributeLogicalName("ff_note")]
        [DisplayName("Note")]
        [MaxLength(100)]
        public string ff_Note {
            get {
                return GetAttributeValue<string>("ff_note");
            }
            set {
                SetAttributeValue("ff_note", value);
            }
        }
        
        /// <summary>
        /// <para>Vedrørende sag.</para>
        /// <para>Display Name: Sag</para>
        /// </summary>
        [AttributeLogicalName("ff_case")]
        [DisplayName("Sag")]
        public EntityReference ff_case {
            get {
                return GetAttributeValue<EntityReference>("ff_case");
            }
            set {
                SetAttributeValue("ff_case", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sagsnummer</para>
        /// </summary>
        [AttributeLogicalName("ff_casenumber")]
        [DisplayName("Sagsnummer")]
        [MaxLength(500)]
        public string ff_casenumber {
            get {
                return GetAttributeValue<string>("ff_casenumber");
            }
            set {
                SetAttributeValue("ff_casenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ang. lukket sag</para>
        /// </summary>
        [AttributeLogicalName("ff_closedcase")]
        [DisplayName("Ang. lukket sag")]
        public EntityReference ff_closedcase {
            get {
                return GetAttributeValue<EntityReference>("ff_closedcase");
            }
            set {
                SetAttributeValue("ff_closedcase", value);
            }
        }
        
        /// <summary>
        /// <para>Lookup to closed opportunity.</para>
        /// <para>Display Name: Lukket salgsmulighed</para>
        /// </summary>
        [AttributeLogicalName("ff_closedopportunity")]
        [DisplayName("Lukket salgsmulighed")]
        public EntityReference ff_closedopportunity {
            get {
                return GetAttributeValue<EntityReference>("ff_closedopportunity");
            }
            set {
                SetAttributeValue("ff_closedopportunity", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg bruger som håndterer emailen til synliggørelse i visning.</para>
        /// <para>Display Name: Email håndteres af</para>
        /// </summary>
        [AttributeLogicalName("ff_emailhandledby")]
        [DisplayName("Email håndteres af")]
        public EntityReference ff_emailhandledby {
            get {
                return GetAttributeValue<EntityReference>("ff_emailhandledby");
            }
            set {
                SetAttributeValue("ff_emailhandledby", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Hent vedhæftninger</para>
        /// </summary>
        [AttributeLogicalName("ff_getattachments")]
        [DisplayName("Hent vedhæftninger")]
        public bool? ff_getattachments {
            get {
                return GetAttributeValue<bool?>("ff_getattachments");
            }
            set {
                SetAttributeValue("ff_getattachments", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Medlem</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Medlem")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fælles postkasse</para>
        /// </summary>
        [AttributeLogicalName("ff_receivingmailbox")]
        [DisplayName("Fælles postkasse")]
        public EntityReference ff_receivingmailbox {
            get {
                return GetAttributeValue<EntityReference>("ff_receivingmailbox");
            }
            set {
                SetAttributeValue("ff_receivingmailbox", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Afsenders Mailadresse</para>
        /// </summary>
        [AttributeLogicalName("ff_sendersmailaddress")]
        [DisplayName("Afsenders Mailadresse")]
        [MaxLength(100)]
        public string ff_sendersmailaddress {
            get {
                return GetAttributeValue<string>("ff_sendersmailaddress");
            }
            set {
                SetAttributeValue("ff_sendersmailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: SharePoint URL</para>
        /// </summary>
        [AttributeLogicalName("ff_sharepointurl")]
        [DisplayName("SharePoint URL")]
        [MaxLength(500)]
        public string ff_sharepointurl {
            get {
                return GetAttributeValue<string>("ff_sharepointurl");
            }
            set {
                SetAttributeValue("ff_sharepointurl", value);
            }
        }
        
        /// <summary>
        /// <para>Individual email will be sent to each recipient.</para>
        /// <para>Display Name: Recipient List</para>
        /// </summary>
        [AttributeLogicalName("msdyn_recipientlist")]
        [DisplayName("Recipient List")]
        [MaxLength(8000)]
        public string msdyn_RecipientList {
            get {
                return GetAttributeValue<string>("msdyn_recipientlist");
            }
            set {
                SetAttributeValue("msdyn_recipientlist", value);
            }
        }
        
        /// <summary>
        /// <para>copilot entity metadata</para>
        /// <para>Display Name: copilot entity metadata</para>
        /// </summary>
        [AttributeLogicalName("msdyn_autofill_type")]
        [DisplayName("copilot entity metadata")]
        public Email_msdyn_autofill_type? msdyn_autofill_type {
            get {
                return GetOptionSetValue<Email_msdyn_autofill_type>("msdyn_autofill_type");
            }
            set {
                SetOptionSetValue("msdyn_autofill_type", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Copilot Engaged</para>
        /// </summary>
        [AttributeLogicalName("msdyn_copilotengaged")]
        [DisplayName("Copilot Engaged")]
        public bool? msdyn_copilotengaged {
            get {
                return GetAttributeValue<bool?>("msdyn_copilotengaged");
            }
            set {
                SetAttributeValue("msdyn_copilotengaged", value);
            }
        }
        
        /// <summary>
        /// <para>Email engagement interactions</para>
        /// <para>Display Name: Email engagement interactions</para>
        /// </summary>
        [AttributeLogicalName("msdyn_emailengagementinteractions")]
        [DisplayName("Email engagement interactions")]
        public string msdyn_emailengagementinteractions {
            get {
                return GetAttributeValue<string>("msdyn_emailengagementinteractions");
            }
            set {
                SetAttributeValue("msdyn_emailengagementinteractions", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sentiment</para>
        /// </summary>
        [AttributeLogicalName("msdyn_sentiment")]
        [DisplayName("Sentiment")]
        public Email_msdyn_sentiment? msdyn_sentiment {
            get {
                return GetOptionSetValue<Email_msdyn_sentiment>("msdyn_sentiment");
            }
            set {
                SetOptionSetValue("msdyn_sentiment", value);
            }
        }
        
        /// <summary>
        /// <para>Sentiment Reason</para>
        /// <para>Display Name: Sentiment Reason</para>
        /// </summary>
        [AttributeLogicalName("msdyn_sentimentreason")]
        [DisplayName("Sentiment Reason")]
        public Email_msdyn_sentimentreason? msdyn_sentimentreason {
            get {
                return GetOptionSetValue<Email_msdyn_sentimentreason>("msdyn_sentimentreason");
            }
            set {
                SetOptionSetValue("msdyn_sentimentreason", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the related records for the email.</para>
        /// <para>Display Name: Related</para>
        /// </summary>
        [AttributeLogicalName("related")]
        [DisplayName("Related")]
        public IEnumerable<ActivityParty> related {
            get {
                return GetEntityCollection<ActivityParty>("related");
            }
            set {
                SetEntityCollection("related", value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Account_Email_EmailSender")]
        public Account Account_Email_EmailSender {
            get {
                return GetRelatedEntity<Account>("Account_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Account_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("sendersaccount")]
        [RelationshipSchemaName("Account_Email_SendersAccount")]
        public Account Account_Email_SendersAccount {
            get {
                return GetRelatedEntity<Account>("Account_Email_SendersAccount", null);
            }
            set {
                SetRelatedEntity("Account_Email_SendersAccount", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Emails")]
        public Account Account_Emails {
            get {
                return GetRelatedEntity<Account>("Account_Emails", null);
            }
            set {
                SetRelatedEntity("Account_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Contact_Email_EmailSender")]
        public Contact Contact_Email_EmailSender {
            get {
                return GetRelatedEntity<Contact>("Contact_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Contact_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Emails")]
        public Contact Contact_Emails {
            get {
                return GetRelatedEntity<Contact>("Contact_Emails", null);
            }
            set {
                SetRelatedEntity("Contact_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_Annotation")]
        public IEnumerable<Annotation> Email_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Email_Annotation", null);
            }
            set {
                SetRelatedEntities("Email_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Email_QueueItem")]
        public IEnumerable<QueueItem> Email_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Email_QueueItem", null);
            }
            set {
                SetRelatedEntities("Email_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Emails")]
        public Incident Incident_Emails {
            get {
                return GetRelatedEntity<Incident>("Incident_Emails", null);
            }
            set {
                SetRelatedEntity("Incident_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Lead_Email_EmailSender")]
        public Lead Lead_Email_EmailSender {
            get {
                return GetRelatedEntity<Lead>("Lead_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Lead_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Emails")]
        public Lead Lead_Emails {
            get {
                return GetRelatedEntity<Lead>("Lead_Emails", null);
            }
            set {
                SetRelatedEntity("Lead_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Emails")]
        public Opportunity Opportunity_Emails {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Emails", null);
            }
            set {
                SetRelatedEntity("Opportunity_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("Queue_Email_EmailSender")]
        public Queue Queue_Email_EmailSender {
            get {
                return GetRelatedEntity<Queue>("Queue_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("Queue_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntities<Email>("email_email_CorrelatedActivityId", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_CorrelatedActivityId", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referenced)]
        public IEnumerable<Email> Referencedemail_email_parentactivityid {
            get {
                return GetRelatedEntities<Email>("email_email_parentactivityid", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("email_email_parentactivityid", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("correlatedactivityid")]
        [RelationshipSchemaName("email_email_CorrelatedActivityId", EntityRole.Referencing)]
        public Email Referencingemail_email_CorrelatedActivityId {
            get {
                return GetRelatedEntity<Email>("email_email_CorrelatedActivityId", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_CorrelatedActivityId", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentactivityid")]
        [RelationshipSchemaName("email_email_parentactivityid", EntityRole.Referencing)]
        public Email Referencingemail_email_parentactivityid {
            get {
                return GetRelatedEntity<Email>("email_email_parentactivityid", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("email_email_parentactivityid", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("emailsender")]
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public SystemUser SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntity<SystemUser>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntity("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_email")]
        public ActivityPointer activity_pointer_email {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_email", null);
            }
            set {
                SetRelatedEntity("activity_pointer_email", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_email_activities")]
        public BusinessUnit business_unit_email_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_email_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_email_activities", null, value);
            }
        }
        
        [AttributeLogicalName("acceptingentityid")]
        [RelationshipSchemaName("email_acceptingentity_queue")]
        public Queue email_acceptingentity_queue {
            get {
                return GetRelatedEntity<Queue>("email_acceptingentity_queue", null);
            }
            set {
                SetRelatedEntity("email_acceptingentity_queue", null, value);
            }
        }
        
        [AttributeLogicalName("acceptingentityid")]
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public SystemUser email_acceptingentity_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntity("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("email_activity_parties")]
        public IEnumerable<ActivityParty> email_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("email_activity_parties", null);
            }
            set {
                SetRelatedEntities("email_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("email_sendermailboxid_mailbox")]
        public Mailbox email_sendermailboxid_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("email_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntity("email_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Emails")]
        public Entitlement entitlement_Emails {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Emails", null);
            }
            set {
                SetRelatedEntity("entitlement_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_Emails")]
        public ff_activities ff_activities_Emails {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_Emails", null);
            }
            set {
                SetRelatedEntity("ff_activities_Emails", null, value);
            }
        }
        
        [AttributeLogicalName("ff_internpart")]
        [RelationshipSchemaName("ff_email_Internpart_contact")]
        public Contact ff_email_Internpart_contact {
            get {
                return GetRelatedEntity<Contact>("ff_email_Internpart_contact", null);
            }
            set {
                SetRelatedEntity("ff_email_Internpart_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_case")]
        [RelationshipSchemaName("ff_email_case_incident")]
        public Incident ff_email_case_incident {
            get {
                return GetRelatedEntity<Incident>("ff_email_case_incident", null);
            }
            set {
                SetRelatedEntity("ff_email_case_incident", null, value);
            }
        }
        
        [AttributeLogicalName("ff_closedcase")]
        [RelationshipSchemaName("ff_email_closedcase_incident")]
        public Incident ff_email_closedcase_incident {
            get {
                return GetRelatedEntity<Incident>("ff_email_closedcase_incident", null);
            }
            set {
                SetRelatedEntity("ff_email_closedcase_incident", null, value);
            }
        }
        
        [AttributeLogicalName("ff_closedopportunity")]
        [RelationshipSchemaName("ff_email_closedopportunity_opportunity")]
        public Opportunity ff_email_closedopportunity_opportunity {
            get {
                return GetRelatedEntity<Opportunity>("ff_email_closedopportunity_opportunity", null);
            }
            set {
                SetRelatedEntity("ff_email_closedopportunity_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("ff_emailhandledby")]
        [RelationshipSchemaName("ff_email_emailhandledby_systemuser")]
        public SystemUser ff_email_emailhandledby_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("ff_email_emailhandledby_systemuser", null);
            }
            set {
                SetRelatedEntity("ff_email_emailhandledby_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_email_member_contact")]
        public Contact ff_email_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_email_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_email_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_receivingmailbox")]
        [RelationshipSchemaName("ff_email_receivingmailbox_mailbox")]
        public Mailbox ff_email_receivingmailbox_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("ff_email_receivingmailbox_mailbox", null);
            }
            set {
                SetRelatedEntity("ff_email_receivingmailbox_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_email_createdby")]
        public SystemUser lk_email_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public SystemUser lk_email_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_email_modifiedby")]
        public SystemUser lk_email_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public SystemUser lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("receivingmailboxid")]
        [RelationshipSchemaName("mailbox_email_ReceivingMailboxId")]
        public Mailbox mailbox_email_ReceivingMailboxId {
            get {
                return GetRelatedEntity<Mailbox>("mailbox_email_ReceivingMailboxId", null);
            }
            set {
                SetRelatedEntity("mailbox_email_ReceivingMailboxId", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_email")]
        public Team team_email {
            get {
                return GetRelatedEntity<Team>("team_email", null);
            }
            set {
                SetRelatedEntity("team_email", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_email")]
        public SystemUser user_email {
            get {
                return GetRelatedEntity<SystemUser>("user_email", null);
            }
            set {
                SetRelatedEntity("user_email", null, value);
            }
        }
        
        public static Email Retrieve(IOrganizationService service, Guid id, params Expression<Func<Email,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Defines the amount and type of support a customer should receive.</para>
    /// <para>Display Name: Entitlement</para>
    /// </summary>
    [EntityLogicalName("entitlement")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Entitlement : ExtendedEntity<EntitlementState, Entitlement_StatusCode> {
        
        public const string EntityLogicalName = "entitlement";
        
        public const int EntityTypeCode = 9700;
        
        public Entitlement() : 
                base(EntityLogicalName) {
        }
        
        public Entitlement(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("entitlementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Entitlement</para>
        /// </summary>
        [AttributeLogicalName("entitlementid")]
        [DisplayName("Entitlement")]
        public Guid? EntitlementId {
            get {
                return GetAttributeValue<Guid?>("entitlementid");
            }
            set {
                SetId("entitlementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Account associated with Entitlement.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Select the type of entitlement terms.</para>
        /// <para>Display Name: Allocation Type</para>
        /// </summary>
        [AttributeLogicalName("allocationtypecode")]
        [DisplayName("Allocation Type")]
        public Entitlement_AllocationTypeCode? AllocationTypeCode {
            get {
                return GetOptionSetValue<Entitlement_AllocationTypeCode>("allocationtypecode");
            }
            set {
                SetOptionSetValue("allocationtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Contact associated with Entitlement.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the entitlement.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Choose a contact or account for which this entitlement has been defined.</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to decrease the remaining terms when the case is created or when it is resolved.</para>
        /// <para>Display Name: Decrease Remaining On</para>
        /// </summary>
        [AttributeLogicalName("decreaseremainingon")]
        [DisplayName("Decrease Remaining On")]
        public Entitlement_DecreaseRemainingOn? DecreaseRemainingOn {
            get {
                return GetOptionSetValue<Entitlement_DecreaseRemainingOn>("decreaseremainingon");
            }
            set {
                SetOptionSetValue("decreaseremainingon", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the Entitlement</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the entitlement ends.</para>
        /// <para>Display Name: End Date</para>
        /// </summary>
        [AttributeLogicalName("enddate")]
        [DisplayName("End Date")]
        public DateTime? EndDate {
            get {
                return GetAttributeValue<DateTime?>("enddate");
            }
            set {
                SetAttributeValue("enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Entitlement Template associated with Entitlement.</para>
        /// <para>Display Name: Entitlement Template</para>
        /// </summary>
        [AttributeLogicalName("entitlementtemplateid")]
        [DisplayName("Entitlement Template")]
        public EntityReference EntitlementTemplateId {
            get {
                return GetAttributeValue<EntityReference>("entitlementtemplateid");
            }
            set {
                SetAttributeValue("entitlementtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the contact with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether this entitlement is the default one for the specified customer.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Select the access someone will have to the knowledge base on the portal.</para>
        /// <para>Display Name: KB Access Level</para>
        /// </summary>
        [AttributeLogicalName("kbaccesslevel")]
        [DisplayName("KB Access Level")]
        public Entitlement_KbAccessLevel? KbAccessLevel {
            get {
                return GetOptionSetValue<Entitlement_KbAccessLevel>("kbaccesslevel");
            }
            set {
                SetOptionSetValue("kbaccesslevel", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the entitlement.</para>
        /// <para>Display Name: Entitlement Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entitlement Name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type a meaningful name for the entitlement.</para>
        /// <para>Display Name: Entitlement Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Entitlement Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the total number of entitlement terms that are left.</para>
        /// <para>Display Name: Remaining Terms</para>
        /// </summary>
        [AttributeLogicalName("remainingterms")]
        [DisplayName("Remaining Terms")]
        public decimal? RemainingTerms {
            get {
                return GetAttributeValue<decimal?>("remainingterms");
            }
            set {
                SetAttributeValue("remainingterms", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether case creation is restricted based on entitlement terms.</para>
        /// <para>Display Name: Restrict based on entitlement terms</para>
        /// </summary>
        [AttributeLogicalName("restrictcasecreation")]
        [DisplayName("Restrict based on entitlement terms")]
        public bool? RestrictCaseCreation {
            get {
                return GetAttributeValue<bool?>("restrictcasecreation");
            }
            set {
                SetAttributeValue("restrictcasecreation", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) associated with the entitlement.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date when the entitlement starts.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("startdate")]
        [DisplayName("Start Date")]
        public DateTime? StartDate {
            get {
                return GetAttributeValue<DateTime?>("startdate");
            }
            set {
                SetAttributeValue("startdate", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public EntitlementState? StateCode {
            get {
                return GetOptionSetValue<EntitlementState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the reason code that explains the status of the entitlement.</para>
        /// <para>Display Name: Status Code</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Code")]
        public Entitlement_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Entitlement_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type the total number of entitlement terms.</para>
        /// <para>Display Name: Total Terms</para>
        /// </summary>
        [AttributeLogicalName("totalterms")]
        [DisplayName("Total Terms")]
        public decimal? TotalTerms {
            get {
                return GetAttributeValue<decimal?>("totalterms");
            }
            set {
                SetAttributeValue("totalterms", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the contact.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Entity type for which the entitlement applies</para>
        /// <para>Display Name: Entity Type</para>
        /// </summary>
        [AttributeLogicalName("entitytype")]
        [DisplayName("Entity Type")]
        public entitytype? entitytype {
            get {
                return GetOptionSetValue<entitytype>("entitytype");
            }
            set {
                SetOptionSetValue("entitytype", value);
            }
        }
        
        [AttributeLogicalName("accountid")]
        [RelationshipSchemaName("account_entitlement_Account")]
        public Account account_entitlement_Account {
            get {
                return GetRelatedEntity<Account>("account_entitlement_Account", null);
            }
            set {
                SetRelatedEntity("account_entitlement_Account", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("account_entitlement_Customer")]
        public Account account_entitlement_Customer {
            get {
                return GetRelatedEntity<Account>("account_entitlement_Customer", null);
            }
            set {
                SetRelatedEntity("account_entitlement_Customer", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_entitlement")]
        public BusinessUnit business_unit_entitlement {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_entitlement", null);
            }
            set {
                SetRelatedEntity("business_unit_entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        [RelationshipSchemaName("contact_entitlement_ContactId")]
        public Contact contact_entitlement_ContactId {
            get {
                return GetRelatedEntity<Contact>("contact_entitlement_ContactId", null);
            }
            set {
                SetRelatedEntity("contact_entitlement_ContactId", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("contact_entitlement_Customer")]
        public Contact contact_entitlement_Customer {
            get {
                return GetRelatedEntity<Contact>("contact_entitlement_Customer", null);
            }
            set {
                SetRelatedEntity("contact_entitlement_Customer", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ActivityParties")]
        public IEnumerable<ActivityParty> entitlement_ActivityParties {
            get {
                return GetRelatedEntities<ActivityParty>("entitlement_ActivityParties", null);
            }
            set {
                SetRelatedEntities("entitlement_ActivityParties", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ActivityPointers")]
        public IEnumerable<ActivityPointer> entitlement_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("entitlement_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("entitlement_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Annotations")]
        public IEnumerable<Annotation> entitlement_Annotations {
            get {
                return GetRelatedEntities<Annotation>("entitlement_Annotations", null);
            }
            set {
                SetRelatedEntities("entitlement_Annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Appointments")]
        public IEnumerable<Appointment> entitlement_Appointments {
            get {
                return GetRelatedEntities<Appointment>("entitlement_Appointments", null);
            }
            set {
                SetRelatedEntities("entitlement_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Emails")]
        public IEnumerable<Email> entitlement_Emails {
            get {
                return GetRelatedEntities<Email>("entitlement_Emails", null);
            }
            set {
                SetRelatedEntities("entitlement_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_IncidentResolutions")]
        public IEnumerable<IncidentResolution> entitlement_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("entitlement_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("entitlement_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_PhoneCalls")]
        public IEnumerable<PhoneCall> entitlement_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("entitlement_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("entitlement_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_Tasks")]
        public IEnumerable<Task> entitlement_Tasks {
            get {
                return GetRelatedEntities<Task>("entitlement_Tasks", null);
            }
            set {
                SetRelatedEntities("entitlement_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_cases")]
        public IEnumerable<Incident> entitlement_cases {
            get {
                return GetRelatedEntities<Incident>("entitlement_cases", null);
            }
            set {
                SetRelatedEntities("entitlement_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ff_casenotes")]
        public IEnumerable<ff_casenote> entitlement_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("entitlement_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("entitlement_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlement_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> entitlement_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("entitlement_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("entitlement_ff_medlemsnotes", null, value);
            }
        }
        
        [RelationshipSchemaName("entitlementcontacts_association")]
        public IEnumerable<Contact> entitlementcontacts_association {
            get {
                return GetRelatedEntities<Contact>("entitlementcontacts_association", null);
            }
            set {
                SetRelatedEntities("entitlementcontacts_association", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_entitlement_createdby")]
        public SystemUser lk_entitlement_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_createdby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
        public SystemUser lk_entitlement_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_entitlement_modifiedby")]
        public SystemUser lk_entitlement_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
        public SystemUser lk_entitlement_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_entitlement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_entitlement_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_entitlement")]
        public Team team_entitlement {
            get {
                return GetRelatedEntity<Team>("team_entitlement", null);
            }
            set {
                SetRelatedEntity("team_entitlement", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_entitlement")]
        public SystemUser user_entitlement {
            get {
                return GetRelatedEntity<SystemUser>("user_entitlement", null);
            }
            set {
                SetRelatedEntity("user_entitlement", null, value);
            }
        }
        
        public static Entitlement Retrieve(IOrganizationService service, Guid id, params Expression<Func<Entitlement,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Entitlement Contact</para>
    /// </summary>
    [EntityLogicalName("entitlementcontacts")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class EntitlementContacts : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "entitlementcontacts";
        
        public const string RelationshipSchemaName = "EntitlementContacts";
        
        public const int EntityTypeCode = 7272;
        
        public EntitlementContacts() : 
                base(EntityLogicalName) {
        }
        
        public EntitlementContacts(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("entitlementcontactid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("entitlementcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contacts for the entitlements.</para>
        /// </summary>
        [AttributeLogicalName("entitlementcontactid")]
        public Guid? EntitlementContactId {
            get {
                return GetAttributeValue<Guid?>("entitlementcontactid");
            }
            set {
                SetId("entitlementcontactid", value);
            }
        }
        
        [AttributeLogicalName("contactid")]
        public Guid? ContactId {
            get {
                return GetAttributeValue<Guid?>("contactid");
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        public Guid? EntitlementId {
            get {
                return GetAttributeValue<Guid?>("entitlementid");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>name</para>
        /// <para>Display Name: name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static EntitlementContacts Retrieve(IOrganizationService service, Guid id, params Expression<Func<EntitlementContacts,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Service request case associated with a contract.</para>
    /// <para>Display Name: Case</para>
    /// </summary>
    [EntityLogicalName("incident")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Incident : ExtendedEntity<IncidentState, Incident_StatusCode> {
        
        public const string EntityLogicalName = "incident";
        
        public const int EntityTypeCode = 112;
        
        public Incident() : 
                base(EntityLogicalName) {
        }
        
        public Incident(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("incidentid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the case.</para>
        /// <para>Display Name: Case</para>
        /// </summary>
        [AttributeLogicalName("incidentid")]
        [DisplayName("Case")]
        public Guid? IncidentId {
            get {
                return GetAttributeValue<Guid?>("incidentid");
            }
            set {
                SetId("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the case is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Activities Complete</para>
        /// </summary>
        [AttributeLogicalName("activitiescomplete")]
        [DisplayName("Activities Complete")]
        public bool? ActivitiesComplete {
            get {
                return GetAttributeValue<bool?>("activitiescomplete");
            }
            set {
                SetAttributeValue("activitiescomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of service units that were actually required to resolve the case.</para>
        /// <para>Display Name: Actual Service Units</para>
        /// </summary>
        [AttributeLogicalName("actualserviceunits")]
        [DisplayName("Actual Service Units")]
        [Range(0, 1000000000)]
        public int? ActualServiceUnits {
            get {
                return GetAttributeValue<int?>("actualserviceunits");
            }
            set {
                SetAttributeValue("actualserviceunits", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of service units that were billed to the customer for the case.</para>
        /// <para>Display Name: Billed Service Units</para>
        /// </summary>
        [AttributeLogicalName("billedserviceunits")]
        [DisplayName("Billed Service Units")]
        [Range(0, 1000000000)]
        public int? BilledServiceUnits {
            get {
                return GetAttributeValue<int?>("billedserviceunits");
            }
            set {
                SetAttributeValue("billedserviceunits", value);
            }
        }
        
        /// <summary>
        /// <para>Details whether the profile is blocked or not.</para>
        /// <para>Display Name: Blocked Profile</para>
        /// </summary>
        [AttributeLogicalName("blockedprofile")]
        [DisplayName("Blocked Profile")]
        public bool? BlockedProfile {
            get {
                return GetAttributeValue<bool?>("blockedprofile");
            }
            set {
                SetAttributeValue("blockedprofile", value);
            }
        }
        
        /// <summary>
        /// <para>Select how contact about the case was originated, such as email, phone, or web, for use in reporting and analysis.</para>
        /// <para>Display Name: Origin</para>
        /// </summary>
        [AttributeLogicalName("caseorigincode")]
        [DisplayName("Origin")]
        public incident_caseorigincode? CaseOriginCode {
            get {
                return GetOptionSetValue<incident_caseorigincode>("caseorigincode");
            }
            set {
                SetOptionSetValue("caseorigincode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of case to identify the incident for use in case routing and analysis.</para>
        /// <para>Display Name: Case Type</para>
        /// </summary>
        [AttributeLogicalName("casetypecode")]
        [DisplayName("Case Type")]
        public Incident_CaseTypeCode? CaseTypeCode {
            get {
                return GetOptionSetValue<Incident_CaseTypeCode>("casetypecode");
            }
            set {
                SetOptionSetValue("casetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Check Email</para>
        /// </summary>
        [AttributeLogicalName("checkemail")]
        [DisplayName("Check Email")]
        public bool? CheckEmail {
            get {
                return GetAttributeValue<bool?>("checkemail");
            }
            set {
                SetAttributeValue("checkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact associated with the case.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Choose the contract line that the case should be logged under to make sure the customer is charged correctly.</para>
        /// <para>Display Name: Contract Line</para>
        /// </summary>
        [AttributeLogicalName("contractdetailid")]
        [DisplayName("Contract Line")]
        public EntityReference ContractDetailId {
            get {
                return GetAttributeValue<EntityReference>("contractdetailid");
            }
            set {
                SetAttributeValue("contractdetailid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service contract that the case should be logged under to make sure the customer is eligible for support services.</para>
        /// <para>Display Name: Contract</para>
        /// </summary>
        [AttributeLogicalName("contractid")]
        [DisplayName("Contract")]
        public EntityReference ContractId {
            get {
                return GetAttributeValue<EntityReference>("contractid");
            }
            set {
                SetAttributeValue("contractid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the service level for the case to make sure the case is handled correctly.</para>
        /// <para>Display Name: Service Level</para>
        /// </summary>
        [AttributeLogicalName("contractservicelevelcode")]
        [DisplayName("Service Level")]
        public Incident_ContractServiceLevelCode? ContractServiceLevelCode {
            get {
                return GetOptionSetValue<Incident_ContractServiceLevelCode>("contractservicelevelcode");
            }
            set {
                SetOptionSetValue("contractservicelevelcode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Dato og klokkeslæt for oprettelse af posten.</para>
        /// <para>Display Name: Oprettet</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Oprettet")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Tells whether customer service representative has contacted the customer or not.</para>
        /// <para>Display Name: Customer Contacted</para>
        /// </summary>
        [AttributeLogicalName("customercontacted")]
        [DisplayName("Customer Contacted")]
        public bool? CustomerContacted {
            get {
                return GetAttributeValue<bool?>("customercontacted");
            }
            set {
                SetAttributeValue("customercontacted", value);
            }
        }
        
        /// <summary>
        /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the customer's level of satisfaction with the handling and resolution of the case.</para>
        /// <para>Display Name: Satisfaction</para>
        /// </summary>
        [AttributeLogicalName("customersatisfactioncode")]
        [DisplayName("Satisfaction")]
        public Incident_CustomerSatisfactionCode? CustomerSatisfactionCode {
            get {
                return GetOptionSetValue<Incident_CustomerSatisfactionCode>("customersatisfactioncode");
            }
            set {
                SetOptionSetValue("customersatisfactioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether terms of the associated entitlement should be decremented or not.</para>
        /// <para>Display Name: Decrement Entitlement Terms</para>
        /// </summary>
        [AttributeLogicalName("decremententitlementterm")]
        [DisplayName("Decrement Entitlement Terms")]
        public bool? DecrementEntitlementTerm {
            get {
                return GetAttributeValue<bool?>("decremententitlementterm");
            }
            set {
                SetAttributeValue("decremententitlementterm", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the case to assist the service team in reaching a resolution.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the entitlement that is applicable for the case.</para>
        /// <para>Display Name: Entitlement</para>
        /// </summary>
        [AttributeLogicalName("entitlementid")]
        [DisplayName("Entitlement")]
        public EntityReference EntitlementId {
            get {
                return GetAttributeValue<EntityReference>("entitlementid");
            }
            set {
                SetAttributeValue("entitlementid", value);
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Indicates the date and time when the case was escalated.</para>
        /// <para>Display Name: Escalated On</para>
        /// </summary>
        [AttributeLogicalName("escalatedon")]
        [DisplayName("Escalated On")]
        public DateTime? EscalatedOn {
            get {
                return GetAttributeValue<DateTime?>("escalatedon");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Select an existing case for the customer that has been populated. For internal use only.</para>
        /// <para>Display Name: Existing Case</para>
        /// </summary>
        [AttributeLogicalName("existingcase")]
        [DisplayName("Existing Case")]
        public EntityReference ExistingCase {
            get {
                return GetAttributeValue<EntityReference>("existingcase");
            }
            set {
                SetAttributeValue("existingcase", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: First Response By KPI</para>
        /// </summary>
        [AttributeLogicalName("firstresponsebykpiid")]
        [DisplayName("First Response By KPI")]
        public EntityReference FirstResponseByKPIId {
            get {
                return GetAttributeValue<EntityReference>("firstresponsebykpiid");
            }
            set {
                SetAttributeValue("firstresponsebykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the initial response time for the case according to the terms of the SLA.</para>
        /// <para>Display Name: First Response SLA Status</para>
        /// </summary>
        [AttributeLogicalName("firstresponseslastatus")]
        [DisplayName("First Response SLA Status")]
        public Incident_FirstResponseSLAStatus? FirstResponseSLAStatus {
            get {
                return GetOptionSetValue<Incident_FirstResponseSLAStatus>("firstresponseslastatus");
            }
            set {
                SetOptionSetValue("firstresponseslastatus", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the first response has been sent.</para>
        /// <para>Display Name: First Response Sent</para>
        /// </summary>
        [AttributeLogicalName("firstresponsesent")]
        [DisplayName("First Response Sent")]
        public bool? FirstResponseSent {
            get {
                return GetAttributeValue<bool?>("firstresponsesent");
            }
            set {
                SetAttributeValue("firstresponsesent", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Follow up Task Created</para>
        /// </summary>
        [AttributeLogicalName("followuptaskcreated")]
        [DisplayName("Follow up Task Created")]
        public bool? FollowUpTaskCreated {
            get {
                return GetAttributeValue<bool?>("followuptaskcreated");
            }
            set {
                SetAttributeValue("followuptaskcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv den dato, hvor en kundeservicemedarbejder skal følge op på kunden i denne sag.</para>
        /// <para>Display Name: Opfølgningsdato</para>
        /// </summary>
        [AttributeLogicalName("followupby")]
        [DisplayName("Opfølgningsdato")]
        public DateTime? FollowupBy {
            get {
                return GetAttributeValue<DateTime?>("followupby");
            }
            set {
                SetAttributeValue("followupby", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Select the current stage of the service process for the case to assist service team members when they review or transfer a case.</para>
        /// <para>Display Name: Case Stage</para>
        /// </summary>
        [AttributeLogicalName("incidentstagecode")]
        [DisplayName("Case Stage")]
        public Incident_IncidentStageCode? IncidentStageCode {
            get {
                return GetOptionSetValue<Incident_IncidentStageCode>("incidentstagecode");
            }
            set {
                SetOptionSetValue("incidentstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Will contain the Influencer score coming from NetBreeze.</para>
        /// <para>Display Name: Influence Score</para>
        /// </summary>
        [AttributeLogicalName("influencescore")]
        [DisplayName("Influence Score")]
        public double? InfluenceScore {
            get {
                return GetAttributeValue<double?>("influencescore");
            }
            set {
                SetAttributeValue("influencescore", value);
            }
        }
        
        /// <summary>
        /// <para>For system use only.</para>
        /// <para>Display Name: Decrementing</para>
        /// </summary>
        [AttributeLogicalName("isdecrementing")]
        [DisplayName("Decrementing")]
        public bool? IsDecrementing {
            get {
                return GetAttributeValue<bool?>("isdecrementing");
            }
            set {
                SetAttributeValue("isdecrementing", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the case has been escalated.</para>
        /// <para>Display Name: Is Escalated</para>
        /// </summary>
        [AttributeLogicalName("isescalated")]
        [DisplayName("Is Escalated")]
        public bool? IsEscalated {
            get {
                return GetAttributeValue<bool?>("isescalated");
            }
            set {
                SetAttributeValue("isescalated", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the article that contains additional information or a resolution for the case, for reference during research or follow up with the customer.</para>
        /// <para>Display Name: Knowledge Base Article</para>
        /// </summary>
        [AttributeLogicalName("kbarticleid")]
        [DisplayName("Knowledge Base Article")]
        public EntityReference KbArticleId {
            get {
                return GetAttributeValue<EntityReference>("kbarticleid");
            }
            set {
                SetAttributeValue("kbarticleid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the primary case the current case was merged into.</para>
        /// <para>Display Name: Master Case</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master Case")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
            set {
                SetAttributeValue("masterid", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the incident has been merged with another incident.</para>
        /// <para>Display Name: Internal Use Only</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Internal Use Only")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the post originated as a public or private message.</para>
        /// <para>Display Name: Received As</para>
        /// </summary>
        [AttributeLogicalName("messagetypecode")]
        [DisplayName("Received As")]
        public socialactivity_postmessagetype? MessageTypeCode {
            get {
                return GetOptionSetValue<socialactivity_postmessagetype>("messagetypecode");
            }
            set {
                SetOptionSetValue("messagetypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Number of child incidents associated with the incident.</para>
        /// <para>Display Name: Child Cases</para>
        /// </summary>
        [AttributeLogicalName("numberofchildincidents")]
        [DisplayName("Child Cases")]
        [Range(0, 2147483647)]
        public int? NumberOfChildIncidents {
            get {
                return GetAttributeValue<int?>("numberofchildincidents");
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the case was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose the parent case for a case.</para>
        /// <para>Display Name: Parent Case</para>
        /// </summary>
        [AttributeLogicalName("parentcaseid")]
        [DisplayName("Parent Case")]
        public EntityReference ParentCaseId {
            get {
                return GetAttributeValue<EntityReference>("parentcaseid");
            }
            set {
                SetAttributeValue("parentcaseid", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg en primær kontakt for denne sag.</para>
        /// <para>Display Name: Kontakt</para>
        /// </summary>
        [AttributeLogicalName("primarycontactid")]
        [DisplayName("Kontakt")]
        public EntityReference PrimaryContactId {
            get {
                return GetAttributeValue<EntityReference>("primarycontactid");
            }
            set {
                SetAttributeValue("primarycontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Indtast et emne eller beskrivende navn, f.eks. forespørgslen, problemet eller firmanavnet, for at identificere sagen i Microsoft Dynamics 365-visninger.</para>
        /// <para>Display Name: Sagstitel</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Sagstitel")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Incident_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Incident_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the product associated with the case to identify warranty, service, or other product issues and be able to report the number of incidents for each product.</para>
        /// <para>Display Name: Product</para>
        /// </summary>
        [AttributeLogicalName("productid")]
        [DisplayName("Product")]
        public EntityReference ProductId {
            get {
                return GetAttributeValue<EntityReference>("productid");
            }
            set {
                SetAttributeValue("productid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the serial number of the product that is associated with this case, so that the number of cases per product can be reported.</para>
        /// <para>Display Name: Serial Number</para>
        /// </summary>
        [AttributeLogicalName("productserialnumber")]
        [DisplayName("Serial Number")]
        [MaxLength(100)]
        public string ProductSerialNumber {
            get {
                return GetAttributeValue<string>("productserialnumber");
            }
            set {
                SetAttributeValue("productserialnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date by when the case must be resolved.</para>
        /// <para>Display Name: Resolve By</para>
        /// </summary>
        [AttributeLogicalName("resolveby")]
        [DisplayName("Resolve By")]
        public DateTime? ResolveBy {
            get {
                return GetAttributeValue<DateTime?>("resolveby");
            }
            set {
                SetAttributeValue("resolveby", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Resolve By KPI</para>
        /// </summary>
        [AttributeLogicalName("resolvebykpiid")]
        [DisplayName("Resolve By KPI")]
        public EntityReference ResolveByKPIId {
            get {
                return GetAttributeValue<EntityReference>("resolvebykpiid");
            }
            set {
                SetAttributeValue("resolvebykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the resolution time for the case according to the terms of the SLA.</para>
        /// <para>Display Name: Resolve By SLA Status</para>
        /// </summary>
        [AttributeLogicalName("resolvebyslastatus")]
        [DisplayName("Resolve By SLA Status")]
        public Incident_ResolveBySLAStatus? ResolveBySLAStatus {
            get {
                return GetOptionSetValue<Incident_ResolveBySLAStatus>("resolvebyslastatus");
            }
            set {
                SetOptionSetValue("resolvebyslastatus", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: First Response By</para>
        /// </summary>
        [AttributeLogicalName("responseby")]
        [DisplayName("First Response By")]
        public DateTime? ResponseBy {
            get {
                return GetAttributeValue<DateTime?>("responseby");
            }
            set {
                SetAttributeValue("responseby", value);
            }
        }
        
        /// <summary>
        /// <para>Choose an additional customer contact who can also help resolve the case.</para>
        /// <para>Display Name: Responsible Contact (Deprecated)</para>
        /// </summary>
        [AttributeLogicalName("responsiblecontactid")]
        [DisplayName("Responsible Contact (Deprecated)")]
        public EntityReference ResponsibleContactId {
            get {
                return GetAttributeValue<EntityReference>("responsiblecontactid");
            }
            set {
                SetAttributeValue("responsiblecontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the incident has been routed to queue or not.</para>
        /// <para>Display Name: Route Case</para>
        /// </summary>
        [AttributeLogicalName("routecase")]
        [DisplayName("Route Case")]
        public bool? RouteCase {
            get {
                return GetAttributeValue<bool?>("routecase");
            }
            set {
                SetAttributeValue("routecase", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Value derived after assessing words commonly associated with a negative, neutral, or positive sentiment that occurs in a social post. Sentiment information can also be reported as numeric values.</para>
        /// <para>Display Name: Sentiment Value</para>
        /// </summary>
        [AttributeLogicalName("sentimentvalue")]
        [DisplayName("Sentiment Value")]
        public double? SentimentValue {
            get {
                return GetAttributeValue<double?>("sentimentvalue");
            }
            set {
                SetAttributeValue("sentimentvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Select the stage, in the case resolution process, that the case is in.</para>
        /// <para>Display Name: Service Stage</para>
        /// </summary>
        [AttributeLogicalName("servicestage")]
        [DisplayName("Service Stage")]
        public servicestage? ServiceStage {
            get {
                return GetOptionSetValue<servicestage>("servicestage");
            }
            set {
                SetOptionSetValue("servicestage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the severity of this case to indicate the incident's impact on the customer's business.</para>
        /// <para>Display Name: Severity</para>
        /// </summary>
        [AttributeLogicalName("severitycode")]
        [DisplayName("Severity")]
        public Incident_SeverityCode? SeverityCode {
            get {
                return GetOptionSetValue<Incident_SeverityCode>("severitycode");
            }
            set {
                SetOptionSetValue("severitycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the social profile with which the case is associated.</para>
        /// <para>Display Name: Social Profile</para>
        /// </summary>
        [AttributeLogicalName("socialprofileid")]
        [DisplayName("Social Profile")]
        public EntityReference SocialProfileId {
            get {
                return GetAttributeValue<EntityReference>("socialprofileid");
            }
            set {
                SetAttributeValue("socialprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the case is active, resolved, or canceled. Resolved and canceled cases are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public IncidentState? StateCode {
            get {
                return GetOptionSetValue<IncidentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Årsag til statussen for {0}</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Incident_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Incident_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the subject for the case, such as catalog request or product complaint, so customer service managers can identify frequent requests or problem areas. Administrators can configure subjects under Business Management in the Settings area.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subjectid")]
        [DisplayName("Subject")]
        public EntityReference SubjectId {
            get {
                return GetAttributeValue<EntityReference>("subjectid");
            }
            set {
                SetAttributeValue("subjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the case number for customer reference and searching capabilities. This cannot be modified.</para>
        /// <para>Display Name: Sagsnummer</para>
        /// </summary>
        [AttributeLogicalName("ticketnumber")]
        [DisplayName("Sagsnummer")]
        [MaxLength(100)]
        public string TicketNumber {
            get {
                return GetAttributeValue<string>("ticketnumber");
            }
            set {
                SetAttributeValue("ticketnumber", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Indtast et emne eller beskrivende navn, f.eks. forespørgslen, problemet eller firmanavnet, for at identificere sagen i Microsoft Dynamics 365-visninger.</para>
        /// <para>Display Name: Sagstitel</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Sagstitel")]
        [MaxLength(200)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Shows the duration for which the Case has been active for Active and Resolved Cases.</para>
        /// <para>Display Name: Case Age</para>
        /// </summary>
        [AttributeLogicalName("caseage")]
        [DisplayName("Case Age")]
        [MaxLength(4000)]
        public string caseage {
            get {
                return GetAttributeValue<string>("caseage");
            }
        }
        
        /// <summary>
        /// <para>Shows the date time when the Case was resolved.</para>
        /// <para>Display Name: Deactivated On</para>
        /// </summary>
        [AttributeLogicalName("deactivatedon")]
        [DisplayName("Deactivated On")]
        public DateTime? deactivatedon {
            get {
                return GetAttributeValue<DateTime?>("deactivatedon");
            }
            set {
                SetAttributeValue("deactivatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sagsbehandler</para>
        /// </summary>
        [AttributeLogicalName("ff_casemanager")]
        [DisplayName("Sagsbehandler")]
        public EntityReference ff_casemanager {
            get {
                return GetAttributeValue<EntityReference>("ff_casemanager");
            }
            set {
                SetAttributeValue("ff_casemanager", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sagstype</para>
        /// </summary>
        [AttributeLogicalName("ff_casetype")]
        [DisplayName("Sagstype")]
        public EntityReference ff_casetype {
            get {
                return GetAttributeValue<EntityReference>("ff_casetype");
            }
            set {
                SetAttributeValue("ff_casetype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kategori</para>
        /// </summary>
        [AttributeLogicalName("ff_category")]
        [DisplayName("Kategori")]
        public EntityReference ff_category {
            get {
                return GetAttributeValue<EntityReference>("ff_category");
            }
            set {
                SetAttributeValue("ff_category", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Collective Agreement</para>
        /// </summary>
        [AttributeLogicalName("ff_collectiveagreement")]
        [DisplayName("Collective Agreement")]
        public EntityReference ff_collectiveagreement {
            get {
                return GetAttributeValue<EntityReference>("ff_collectiveagreement");
            }
            set {
                SetAttributeValue("ff_collectiveagreement", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Virksomhed</para>
        /// </summary>
        [AttributeLogicalName("ff_company")]
        [DisplayName("Virksomhed")]
        public EntityReference ff_company {
            get {
                return GetAttributeValue<EntityReference>("ff_company");
            }
            set {
                SetAttributeValue("ff_company", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Virksomhedsnavn fritekst</para>
        /// </summary>
        [AttributeLogicalName("ff_companynamefreetext")]
        [DisplayName("Virksomhedsnavn fritekst")]
        [MaxLength(100)]
        public string ff_companynamefreetext {
            get {
                return GetAttributeValue<string>("ff_companynamefreetext");
            }
            set {
                SetAttributeValue("ff_companynamefreetext", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Virksomhed inden for FF</para>
        /// </summary>
        [AttributeLogicalName("ff_companywithinff")]
        [DisplayName("Virksomhed inden for FF")]
        public bool? ff_companywithinff {
            get {
                return GetAttributeValue<bool?>("ff_companywithinff");
            }
            set {
                SetAttributeValue("ff_companywithinff", value);
            }
        }
        
        /// <summary>
        /// <para>Finansforbundets deaktiveret dato felt. Bruges til at angive hvornår en sag er blevet deaktiveret.</para>
        /// <para>Display Name: Deaktiveret</para>
        /// </summary>
        [AttributeLogicalName("ff_deactivatedon")]
        [DisplayName("Deaktiveret")]
        public DateTime? ff_deactivatedon {
            get {
                return GetAttributeValue<DateTime?>("ff_deactivatedon");
            }
            set {
                SetAttributeValue("ff_deactivatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Textname of case worker in Findus</para>
        /// <para>Display Name: Findus Sagsbehandler</para>
        /// </summary>
        [AttributeLogicalName("ff_finduscaseworker")]
        [DisplayName("Findus Sagsbehandler")]
        [MaxLength(100)]
        public string ff_finduscaseworker {
            get {
                return GetAttributeValue<string>("ff_finduscaseworker");
            }
            set {
                SetAttributeValue("ff_finduscaseworker", value);
            }
        }
        
        /// <summary>
        /// <para>Link to case in Findus.</para>
        /// <para>Display Name: Findus Link</para>
        /// </summary>
        [AttributeLogicalName("ff_finduslink")]
        [DisplayName("Findus Link")]
        [MaxLength(500)]
        public string ff_finduslink {
            get {
                return GetAttributeValue<string>("ff_finduslink");
            }
            set {
                SetAttributeValue("ff_finduslink", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ansættelsesform</para>
        /// </summary>
        [AttributeLogicalName("ff_formofemployment")]
        [DisplayName("Ansættelsesform")]
        public ff_formofemployment? ff_formofemployment {
            get {
                return GetOptionSetValue<ff_formofemployment>("ff_formofemployment");
            }
            set {
                SetOptionSetValue("ff_formofemployment", value);
            }
        }
        
        /// <summary>
        /// <para>Stamdata fra medlemmet</para>
        /// <para>Display Name: Stamdata</para>
        /// </summary>
        [AttributeLogicalName("ff_masterdata")]
        [DisplayName("Stamdata")]
        public string ff_masterdata {
            get {
                return GetAttributeValue<string>("ff_masterdata");
            }
            set {
                SetAttributeValue("ff_masterdata", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Medlem</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Medlem")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Perecated 20/1-25. Bruges ikke.</para>
        /// <para>Display Name: ZZ_Fortrukken mail</para>
        /// </summary>
        [AttributeLogicalName("ff_preferredmail")]
        [DisplayName("ZZ_Fortrukken mail")]
        [ObsoleteAttribute()]
        public bool? ff_preferredmail {
            get {
                return GetAttributeValue<bool?>("ff_preferredmail");
            }
            set {
                SetAttributeValue("ff_preferredmail", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kø</para>
        /// </summary>
        [AttributeLogicalName("ff_queue")]
        [DisplayName("Kø")]
        public EntityReference ff_queue {
            get {
                return GetAttributeValue<EntityReference>("ff_queue");
            }
            set {
                SetAttributeValue("ff_queue", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Genkør SharePoint mappeoprettelse</para>
        /// </summary>
        [AttributeLogicalName("ff_retryspfoldercreation")]
        [DisplayName("Genkør SharePoint mappeoprettelse")]
        public bool? ff_retryspfoldercreation {
            get {
                return GetAttributeValue<bool?>("ff_retryspfoldercreation");
            }
            set {
                SetAttributeValue("ff_retryspfoldercreation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fællesbakken</para>
        /// </summary>
        [AttributeLogicalName("ff_sharedcase")]
        [DisplayName("Fællesbakken")]
        public bool? ff_sharedcase {
            get {
                return GetAttributeValue<bool?>("ff_sharedcase");
            }
            set {
                SetAttributeValue("ff_sharedcase", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: SharePoint Status</para>
        /// </summary>
        [AttributeLogicalName("ff_sharepointstatus")]
        [DisplayName("SharePoint Status")]
        public string ff_sharepointstatus {
            get {
                return GetAttributeValue<string>("ff_sharepointstatus");
            }
            set {
                SetAttributeValue("ff_sharepointstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: SharePoint URL</para>
        /// </summary>
        [AttributeLogicalName("ff_sharepointurl")]
        [DisplayName("SharePoint URL")]
        [MaxLength(500)]
        public string ff_sharepointurl {
            get {
                return GetAttributeValue<string>("ff_sharepointurl");
            }
            set {
                SetAttributeValue("ff_sharepointurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Underkategori</para>
        /// </summary>
        [AttributeLogicalName("ff_subcategory")]
        [DisplayName("Underkategori")]
        public EntityReference ff_subcategory {
            get {
                return GetAttributeValue<EntityReference>("ff_subcategory");
            }
            set {
                SetAttributeValue("ff_subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Underkategori</para>
        /// </summary>
        [AttributeLogicalName("ff_substatus")]
        [DisplayName("Underkategori")]
        public ff_casesubstatus? ff_substatus {
            get {
                return GetOptionSetValue<ff_casesubstatus>("ff_substatus");
            }
            set {
                SetOptionSetValue("ff_substatus", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the latest activity associated with the Case and the action performed on that activity.</para>
        /// <para>Display Name: Last Interaction</para>
        /// </summary>
        [AttributeLogicalName("lastinteraction")]
        [DisplayName("Last Interaction")]
        [MaxLength(200)]
        public string lastinteraction {
            get {
                return GetAttributeValue<string>("lastinteraction");
            }
        }
        
        /// <summary>
        /// <para>Survey invite url for customer feedback.</para>
        /// <para>Display Name: Survey Invite</para>
        /// </summary>
        [AttributeLogicalName("msdyn_casesurveyinviteurl")]
        [DisplayName("Survey Invite")]
        [MaxLength(500)]
        public string msdyn_CaseSurveyInviteUrl {
            get {
                return GetAttributeValue<string>("msdyn_casesurveyinviteurl");
            }
            set {
                SetAttributeValue("msdyn_casesurveyinviteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sentiment</para>
        /// </summary>
        [AttributeLogicalName("msdyn_casesentiment")]
        [DisplayName("Sentiment")]
        public Incident_msdyn_casesentiment? msdyn_casesentiment {
            get {
                return GetOptionSetValue<Incident_msdyn_casesentiment>("msdyn_casesentiment");
            }
            set {
                SetOptionSetValue("msdyn_casesentiment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Copilot Engaged</para>
        /// </summary>
        [AttributeLogicalName("msdyn_copilotengaged")]
        [DisplayName("Copilot Engaged")]
        public bool? msdyn_copilotengaged {
            get {
                return GetAttributeValue<bool?>("msdyn_copilotengaged");
            }
            set {
                SetAttributeValue("msdyn_copilotengaged", value);
            }
        }
        
        /// <summary>
        /// <para>The iot alert that initiated this case</para>
        /// <para>Display Name: IoT Alert</para>
        /// </summary>
        [AttributeLogicalName("msdyn_iotalert")]
        [DisplayName("IoT Alert")]
        public EntityReference msdyn_iotalert {
            get {
                return GetAttributeValue<EntityReference>("msdyn_iotalert");
            }
            set {
                SetAttributeValue("msdyn_iotalert", value);
            }
        }
        
        /// <summary>
        /// <para>Entity Attachments Id before the case record is created</para>
        /// <para>Display Name: Pre Create Entity Attachments Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_precreateattachmentsid")]
        [DisplayName("Pre Create Entity Attachments Id")]
        [MaxLength(400)]
        public string msdyn_precreateattachmentsid {
            get {
                return GetAttributeValue<string>("msdyn_precreateattachmentsid");
            }
            set {
                SetAttributeValue("msdyn_precreateattachmentsid", value);
            }
        }
        
        /// <summary>
        /// <para>Notes Id before the case record is created</para>
        /// <para>Display Name: Pre Create Notes Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_precreatenotesid")]
        [DisplayName("Pre Create Notes Id")]
        [MaxLength(100)]
        public string msdyn_precreatenotesid {
            get {
                return GetAttributeValue<string>("msdyn_precreatenotesid");
            }
            set {
                SetAttributeValue("msdyn_precreatenotesid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the unresolved SLA KPI associated with the Case with the earliest expiry time.</para>
        /// <para>Display Name: Next Sla</para>
        /// </summary>
        [AttributeLogicalName("nextsla")]
        [DisplayName("Next Sla")]
        [MaxLength(400)]
        public string nextsla {
            get {
                return GetAttributeValue<string>("nextsla");
            }
            set {
                SetAttributeValue("nextsla", value);
            }
        }
        
        [RelationshipSchemaName("Incident_ActivityPointers")]
        public IEnumerable<ActivityPointer> Incident_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Incident_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Incident_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Annotation")]
        public IEnumerable<Annotation> Incident_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Incident_Annotation", null);
            }
            set {
                SetRelatedEntities("Incident_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Appointments")]
        public IEnumerable<Appointment> Incident_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Incident_Appointments", null);
            }
            set {
                SetRelatedEntities("Incident_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Emails")]
        public IEnumerable<Email> Incident_Emails {
            get {
                return GetRelatedEntities<Email>("Incident_Emails", null);
            }
            set {
                SetRelatedEntities("Incident_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_IncidentResolutions")]
        public IEnumerable<IncidentResolution> Incident_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("Incident_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("Incident_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Phonecalls")]
        public IEnumerable<PhoneCall> Incident_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Incident_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Incident_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_QueueItem")]
        public IEnumerable<QueueItem> Incident_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Incident_QueueItem", null);
            }
            set {
                SetRelatedEntities("Incident_QueueItem", null, value);
            }
        }
        
        [RelationshipSchemaName("Incident_Tasks")]
        public IEnumerable<Task> Incident_Tasks {
            get {
                return GetRelatedEntities<Task>("Incident_Tasks", null);
            }
            set {
                SetRelatedEntities("Incident_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("OriginatingCase_Lead")]
        public IEnumerable<Lead> OriginatingCase_Lead {
            get {
                return GetRelatedEntities<Lead>("OriginatingCase_Lead", null);
            }
            set {
                SetRelatedEntities("OriginatingCase_Lead", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_existingcase", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_existingcase {
            get {
                return GetRelatedEntities<Incident>("incident_existingcase", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_existingcase", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("incident_master_incident", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_master_incident {
            get {
                return GetRelatedEntities<Incident>("incident_master_incident", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_master_incident", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("incident_parent_incident", EntityRole.Referenced)]
        public IEnumerable<Incident> Referencedincident_parent_incident {
            get {
                return GetRelatedEntities<Incident>("incident_parent_incident", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("incident_parent_incident", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("existingcase")]
        [RelationshipSchemaName("incident_existingcase", EntityRole.Referencing)]
        public Incident Referencingincident_existingcase {
            get {
                return GetRelatedEntity<Incident>("incident_existingcase", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_existingcase", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("incident_master_incident", EntityRole.Referencing)]
        public Incident Referencingincident_master_incident {
            get {
                return GetRelatedEntity<Incident>("incident_master_incident", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_master_incident", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentcaseid")]
        [RelationshipSchemaName("incident_parent_incident", EntityRole.Referencing)]
        public Incident Referencingincident_parent_incident {
            get {
                return GetRelatedEntity<Incident>("incident_parent_incident", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("incident_parent_incident", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_incidents")]
        public BusinessUnit business_unit_incidents {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_incidents", null);
            }
            set {
                SetRelatedEntity("business_unit_incidents", null, value);
            }
        }
        
        [AttributeLogicalName("primarycontactid")]
        [RelationshipSchemaName("contact_as_primary_contact")]
        public Contact contact_as_primary_contact {
            get {
                return GetRelatedEntity<Contact>("contact_as_primary_contact", null);
            }
            set {
                SetRelatedEntity("contact_as_primary_contact", null, value);
            }
        }
        
        [AttributeLogicalName("responsiblecontactid")]
        [RelationshipSchemaName("contact_as_responsible_contact")]
        public Contact contact_as_responsible_contact {
            get {
                return GetRelatedEntity<Contact>("contact_as_responsible_contact", null);
            }
            set {
                SetRelatedEntity("contact_as_responsible_contact", null, value);
            }
        }
        
        [AttributeLogicalName("entitlementid")]
        [RelationshipSchemaName("entitlement_cases")]
        public Entitlement entitlement_cases {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_cases", null);
            }
            set {
                SetRelatedEntity("entitlement_cases", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_case_incident")]
        public IEnumerable<Email> ff_email_case_incident {
            get {
                return GetRelatedEntities<Email>("ff_email_case_incident", null);
            }
            set {
                SetRelatedEntities("ff_email_case_incident", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_closedcase_incident")]
        public IEnumerable<Email> ff_email_closedcase_incident {
            get {
                return GetRelatedEntities<Email>("ff_email_closedcase_incident", null);
            }
            set {
                SetRelatedEntities("ff_email_closedcase_incident", null, value);
            }
        }
        
        [AttributeLogicalName("ff_casemanager")]
        [RelationshipSchemaName("ff_incident_casemanager_systemuser")]
        public SystemUser ff_incident_casemanager_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("ff_incident_casemanager_systemuser", null);
            }
            set {
                SetRelatedEntity("ff_incident_casemanager_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("ff_casetype")]
        [RelationshipSchemaName("ff_incident_casetype_ff_casetype")]
        public ff_casetype ff_incident_casetype_ff_casetype {
            get {
                return GetRelatedEntity<ff_casetype>("ff_incident_casetype_ff_casetype", null);
            }
            set {
                SetRelatedEntity("ff_incident_casetype_ff_casetype", null, value);
            }
        }
        
        [AttributeLogicalName("ff_category")]
        [RelationshipSchemaName("ff_incident_category_ff_casecategory")]
        public ff_casecategory ff_incident_category_ff_casecategory {
            get {
                return GetRelatedEntity<ff_casecategory>("ff_incident_category_ff_casecategory", null);
            }
            set {
                SetRelatedEntity("ff_incident_category_ff_casecategory", null, value);
            }
        }
        
        [AttributeLogicalName("ff_collectiveagreement")]
        [RelationshipSchemaName("ff_incident_collectiveagreement_ff_collectiveagreement")]
        public ff_collectiveagreement ff_incident_collectiveagreement_ff_collectiveagreement {
            get {
                return GetRelatedEntity<ff_collectiveagreement>("ff_incident_collectiveagreement_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntity("ff_incident_collectiveagreement_ff_collectiveagreement", null, value);
            }
        }
        
        [AttributeLogicalName("ff_company")]
        [RelationshipSchemaName("ff_incident_company_account")]
        public Account ff_incident_company_account {
            get {
                return GetRelatedEntity<Account>("ff_incident_company_account", null);
            }
            set {
                SetRelatedEntity("ff_incident_company_account", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_incident_member_contact")]
        public Contact ff_incident_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_incident_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_incident_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_queue")]
        [RelationshipSchemaName("ff_incident_queue_queue")]
        public Queue ff_incident_queue_queue {
            get {
                return GetRelatedEntity<Queue>("ff_incident_queue_queue", null);
            }
            set {
                SetRelatedEntity("ff_incident_queue_queue", null, value);
            }
        }
        
        [AttributeLogicalName("ff_subcategory")]
        [RelationshipSchemaName("ff_incident_subcategory_ff_casecategory")]
        public ff_casecategory ff_incident_subcategory_ff_casecategory {
            get {
                return GetRelatedEntity<ff_casecategory>("ff_incident_subcategory_ff_casecategory", null);
            }
            set {
                SetRelatedEntity("ff_incident_subcategory_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incidentparty_incident_incident")]
        public IEnumerable<ff_incidentparty> ff_incidentparty_incident_incident {
            get {
                return GetRelatedEntities<ff_incidentparty>("ff_incidentparty_incident_incident", null);
            }
            set {
                SetRelatedEntities("ff_incidentparty_incident_incident", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_activity_parties")]
        public IEnumerable<ActivityParty> incident_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("incident_activity_parties", null);
            }
            set {
                SetRelatedEntities("incident_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("incident_customer_accounts")]
        public Account incident_customer_accounts {
            get {
                return GetRelatedEntity<Account>("incident_customer_accounts", null);
            }
            set {
                SetRelatedEntity("incident_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("incident_customer_contacts")]
        public Contact incident_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("incident_customer_contacts", null);
            }
            set {
                SetRelatedEntity("incident_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_ff_casenotes")]
        public IEnumerable<ff_casenote> incident_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("incident_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("incident_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("incident_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> incident_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("incident_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("incident_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_incidentbase_createdby")]
        public SystemUser lk_incidentbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
        public SystemUser lk_incidentbase_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_incidentbase_modifiedby")]
        public SystemUser lk_incidentbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
        public SystemUser lk_incidentbase_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonetocaseprocess_incidentid")]
        public IEnumerable<PhoneToCaseProcess> lk_phonetocaseprocess_incidentid {
            get {
                return GetRelatedEntities<PhoneToCaseProcess>("lk_phonetocaseprocess_incidentid", null);
            }
            set {
                SetRelatedEntities("lk_phonetocaseprocess_incidentid", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("system_user_incidents")]
        public SystemUser system_user_incidents {
            get {
                return GetRelatedEntity<SystemUser>("system_user_incidents", null);
            }
            set {
                SetRelatedEntity("system_user_incidents", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_incidents")]
        public Team team_incidents {
            get {
                return GetRelatedEntity<Team>("team_incidents", null);
            }
            set {
                SetRelatedEntity("team_incidents", null, value);
            }
        }
        
        public static Incident Retrieve(IOrganizationService service, Guid id, params Expression<Func<Incident,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Case Number Key'</para>
        /// </summary>
        public static Incident Retrieve_ff_casenumberkey(IOrganizationService service, string TicketNumber, params Expression<Func<Incident,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ticketnumber", TicketNumber);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Case Number Key'</para>
        /// </summary>
        public void AltKey_ff_casenumberkey(string TicketNumber) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ticketnumber", TicketNumber);
        }
    }
    
    /// <summary>
    /// <para>Special type of activity that includes description of the resolution, billing status, and the duration of the case.</para>
    /// <para>Display Name: Case Resolution</para>
    /// </summary>
    [EntityLogicalName("incidentresolution")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class IncidentResolution : ExtendedEntity<IncidentResolutionState, IncidentResolution_StatusCode> {
        
        public const string EntityLogicalName = "incidentresolution";
        
        public const int EntityTypeCode = 4206;
        
        public IncidentResolution() : 
                base(EntityLogicalName) {
        }
        
        public IncidentResolution(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the case resolution activity.</para>
        /// <para>Display Name: Case Resolution</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Case Resolution")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the case resolution activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the case resolution activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the case resolution activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Category for the case resolution activity.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the case resolution activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who created the record.</para>
        /// <para>Display Name: Created By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("createdbyexternalparty")]
        [DisplayName("Created By (External Party)")]
        public EntityReference CreatedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("createdbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the case resolution activity was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the incidentresolution.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information that describes the case resolution.</para>
        /// <para>Display Name: Remarks</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Remarks")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the case.</para>
        /// <para>Display Name: Case</para>
        /// </summary>
        [AttributeLogicalName("incidentid")]
        [DisplayName("Case")]
        public EntityReference IncidentId {
            get {
                return GetAttributeValue<EntityReference>("incidentid");
            }
            set {
                SetAttributeValue("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public IncidentResolution_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<IncidentResolution_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information about whether the case resolution activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies if the case resolution activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the case resolution activity.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the external party who modified the record.</para>
        /// <para>Display Name: Modified By (External Party)</para>
        /// </summary>
        [AttributeLogicalName("modifiedbyexternalparty")]
        [DisplayName("Modified By (External Party)")]
        public EntityReference ModifiedByExternalParty {
            get {
                return GetAttributeValue<EntityReference>("modifiedbyexternalparty");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the case resolution activity was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the incidentresolution.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the case resolution activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public IncidentResolution_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<IncidentResolution_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Resolution Type</para>
        /// </summary>
        [AttributeLogicalName("resolutiontypecode")]
        [DisplayName("Resolution Type")]
        public IncidentResolution_ResolutionTypeCode? ResolutionTypeCode {
            get {
                return GetOptionSetValue<IncidentResolution_ResolutionTypeCode>("resolutiontypecode");
            }
            set {
                SetOptionSetValue("resolutiontypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the case resolution activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the case resolution activity.</para>
        /// <para>Display Name: Scheduled End</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Scheduled End")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the case resolution activity.</para>
        /// <para>Display Name: Scheduled Start</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Scheduled Start")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the service with which the case resolution activity is associated.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the case resolution is open, completed, or canceled. By default, all case resolutions are completed and the status value can't be changed.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public IncidentResolutionState? StateCode {
            get {
                return GetOptionSetValue<IncidentResolutionState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the case resolution activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public IncidentResolution_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<IncidentResolution_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subcategory of the case resolution activity.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the case resolution activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Time spent on the case resolution activity.</para>
        /// <para>Display Name: Billable Time</para>
        /// </summary>
        [AttributeLogicalName("timespent")]
        [DisplayName("Billable Time")]
        [Range(0, 2147483647)]
        public int? TimeSpent {
            get {
                return GetAttributeValue<int?>("timespent");
            }
            set {
                SetAttributeValue("timespent", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent on the case resolution activity.</para>
        /// <para>Display Name: Total Time</para>
        /// </summary>
        [AttributeLogicalName("totaltimespent")]
        [DisplayName("Total Time")]
        [Range(0, 2147483647)]
        public int? TotalTimeSpent {
            get {
                return GetAttributeValue<int?>("totaltimespent");
            }
            set {
                SetAttributeValue("totaltimespent", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Use this setting to generate knowledge article from the case using copilot if you did not find a relevant article.</para>
        /// <para>Display Name: Propose new knowledge using this case</para>
        /// </summary>
        [AttributeLogicalName("msdyn_proposeknowledge")]
        [DisplayName("Propose new knowledge using this case")]
        public bool? msdyn_proposeknowledge {
            get {
                return GetAttributeValue<bool?>("msdyn_proposeknowledge");
            }
            set {
                SetAttributeValue("msdyn_proposeknowledge", value);
            }
        }
        
        [RelationshipSchemaName("IncidentResolution_Annotation")]
        public IEnumerable<Annotation> IncidentResolution_Annotation {
            get {
                return GetRelatedEntities<Annotation>("IncidentResolution_Annotation", null);
            }
            set {
                SetRelatedEntities("IncidentResolution_Annotation", null, value);
            }
        }
        
        [AttributeLogicalName("incidentid")]
        [RelationshipSchemaName("Incident_IncidentResolutions")]
        public Incident Incident_IncidentResolutions {
            get {
                return GetRelatedEntity<Incident>("Incident_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("Incident_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_IncidentResolutions")]
        public Account account_IncidentResolutions {
            get {
                return GetRelatedEntity<Account>("account_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("account_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_incident_resolution")]
        public ActivityPointer activity_pointer_incident_resolution {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_incident_resolution", null);
            }
            set {
                SetRelatedEntity("activity_pointer_incident_resolution", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_incident_resolution_activities")]
        public BusinessUnit business_unit_incident_resolution_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_incident_resolution_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_incident_resolution_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_IncidentResolutions")]
        public Entitlement entitlement_IncidentResolutions {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("entitlement_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_activity_parties")]
        public IEnumerable<ActivityParty> incidentresolution_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("incidentresolution_activity_parties", null);
            }
            set {
                SetRelatedEntities("incidentresolution_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("incidentresolution_mailbox_sendermailboxid")]
        public Mailbox incidentresolution_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("incidentresolution_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("incidentresolution_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_IncidentResolutions")]
        public Lead lead_IncidentResolutions {
            get {
                return GetRelatedEntity<Lead>("lead_IncidentResolutions", null);
            }
            set {
                SetRelatedEntity("lead_IncidentResolutions", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_incidentresolution_createdby")]
        public SystemUser lk_incidentresolution_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_createdby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_incidentresolution_createdonbehalfby")]
        public SystemUser lk_incidentresolution_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_incidentresolution_modifiedby")]
        public SystemUser lk_incidentresolution_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_incidentresolution_modifiedonbehalfby")]
        public SystemUser lk_incidentresolution_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_incidentresolution_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_incidentresolution_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_incidentresolution")]
        public Team team_incidentresolution {
            get {
                return GetRelatedEntity<Team>("team_incidentresolution", null);
            }
            set {
                SetRelatedEntity("team_incidentresolution", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_incidentresolution")]
        public SystemUser user_incidentresolution {
            get {
                return GetRelatedEntity<SystemUser>("user_incidentresolution", null);
            }
            set {
                SetRelatedEntity("user_incidentresolution", null, value);
            }
        }
        
        public static IncidentResolution Retrieve(IOrganizationService service, Guid id, params Expression<Func<IncidentResolution,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Prospect or potential sales opportunity. Leads are converted into accounts, contacts, or opportunities when they are qualified. Otherwise, they are deleted or archived.</para>
    /// <para>Display Name: Lead</para>
    /// </summary>
    [EntityLogicalName("lead")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Lead : ExtendedEntity<LeadState, Lead_StatusCode> {
        
        public const string EntityLogicalName = "lead";
        
        public const int EntityTypeCode = 4;
        
        public Lead() : 
                base(EntityLogicalName) {
        }
        
        public Lead(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("leadid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("leadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the lead.</para>
        /// <para>Display Name: Lead</para>
        /// </summary>
        [AttributeLogicalName("leadid")]
        [DisplayName("Lead")]
        public Guid? LeadId {
            get {
                return GetAttributeValue<Guid?>("leadid");
            }
            set {
                SetId("leadid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the account with which the lead is associated.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary address type.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public Lead_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<Lead_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the primary address.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(80)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address 1</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address 1")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the primary address.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(80)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the primary address.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(50)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(50)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the primary address.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(250)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the primary address.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(250)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the primary address.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(250)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the primary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the primary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the primary address.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(20)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the primary address.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public Lead_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<Lead_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the primary address.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(50)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Address 1: Telephone 1")]
        [MaxLength(50)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Address 1: Telephone 2")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the primary address.</para>
        /// <para>Display Name: Address 1: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Address 1: Telephone 3")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the primary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the secondary address type.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public Lead_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<Lead_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the city for the secondary address.</para>
        /// <para>Display Name: Address 2: City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Address 2: City")]
        [MaxLength(80)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Address 2</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Address 2")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Type the country or region for the secondary address.</para>
        /// <para>Display Name: Address 2: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Address 2: Country/Region")]
        [MaxLength(80)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>Type the county for the secondary address.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(50)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Type the fax number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the latitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Address 2: Street 1")]
        [MaxLength(250)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Type the second line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Address 2: Street 2")]
        [MaxLength(250)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Type the third line of the secondary address.</para>
        /// <para>Display Name: Address 2: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Address 2: Street 3")]
        [MaxLength(250)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the longitude value for the secondary address for use in mapping and other applications.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Type a descriptive name for the secondary address, such as Corporate Headquarters.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Type the post office box number of the secondary address.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(20)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>Type the ZIP Code or postal code for the secondary address.</para>
        /// <para>Display Name: Address 2: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Address 2: ZIP/Postal Code")]
        [MaxLength(20)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Select a shipping method for deliveries sent to this address.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public Lead_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<Lead_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the state or province of the secondary address.</para>
        /// <para>Display Name: Address 2: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Address 2: State/Province")]
        [MaxLength(50)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>Type the main phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Type a second phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third phone number associated with the secondary address.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Type the UPS zone of the secondary address to make sure shipping charges are calculated correctly and deliveries are made promptly, if shipped by UPS.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>Select the time zone, or UTC offset, for this address so that other people can reference it when they contact someone at this address.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Information about the budget amount of the lead's company or organization.</para>
        /// <para>Display Name: Budget Amount</para>
        /// </summary>
        [AttributeLogicalName("budgetamount")]
        [DisplayName("Budget Amount")]
        public decimal? BudgetAmount {
            get {
                return GetMoneyValue("budgetamount");
            }
            set {
                SetMoneyValue("budgetamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Budget Amount in base currency.</para>
        /// <para>Display Name: Budget Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetamount_base")]
        [DisplayName("Budget Amount (Base)")]
        public decimal? BudgetAmount_Base {
            get {
                return GetMoneyValue("budgetamount_base");
            }
        }
        
        /// <summary>
        /// <para>Information about the budget status of the lead's company or organization.</para>
        /// <para>Display Name: Budget</para>
        /// </summary>
        [AttributeLogicalName("budgetstatus")]
        [DisplayName("Budget")]
        public budgetstatus? BudgetStatus {
            get {
                return GetOptionSetValue<budgetstatus>("budgetstatus");
            }
            set {
                SetOptionSetValue("budgetstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Image of the Business Card</para>
        /// <para>Display Name: Business Card</para>
        /// </summary>
        [AttributeLogicalName("businesscard")]
        [DisplayName("Business Card")]
        public string BusinessCard {
            get {
                return GetAttributeValue<string>("businesscard");
            }
            set {
                SetAttributeValue("businesscard", value);
            }
        }
        
        /// <summary>
        /// <para>Stores Business Card Control Properties.</para>
        /// <para>Display Name: BusinessCardAttributes</para>
        /// </summary>
        [AttributeLogicalName("businesscardattributes")]
        [DisplayName("BusinessCardAttributes")]
        [MaxLength(4000)]
        public string BusinessCardAttributes {
            get {
                return GetAttributeValue<string>("businesscardattributes");
            }
            set {
                SetAttributeValue("businesscardattributes", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den kampagne, som kundeemnet er genereret ud fra, for at spore, hvor effektive marketingkampagner er, og identificere den kommunikation, der blev modtaget af kundeemnet.</para>
        /// <para>Display Name: Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv navnet på den virksomhed, der er tilknyttet kundeemnet. Dette bliver firmanavnet, når kundeemnet er kvalificeret og konverteret til en kundekonto.</para>
        /// <para>Display Name: ZZ_Firmanavn</para>
        /// </summary>
        [AttributeLogicalName("companyname")]
        [DisplayName("ZZ_Firmanavn")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string CompanyName {
            get {
                return GetAttributeValue<string>("companyname");
            }
            set {
                SetAttributeValue("companyname", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality.</para>
        /// <para>Display Name: Confirm Interest</para>
        /// </summary>
        [AttributeLogicalName("confirminterest")]
        [DisplayName("Confirm Interest")]
        public bool? ConfirmInterest {
            get {
                return GetAttributeValue<bool?>("confirminterest");
            }
            set {
                SetAttributeValue("confirminterest", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the contact with which the lead is associated.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as account information, activities, and opportunities.</para>
        /// <para>Display Name: Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
        /// <para>Display Name: Decision Maker?</para>
        /// </summary>
        [AttributeLogicalName("decisionmaker")]
        [DisplayName("Decision Maker?")]
        public bool? DecisionMaker {
            get {
                return GetAttributeValue<bool?>("decisionmaker");
            }
            set {
                SetAttributeValue("decisionmaker", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the lead, such as an excerpt from the company's website.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead accepts bulk email sent through marketing campaigns or quick campaigns. If Do Not Allow is selected, the lead can be added to marketing lists, but will be excluded from the email.</para>
        /// <para>Display Name: Do not allow Bulk Emails</para>
        /// </summary>
        [AttributeLogicalName("donotbulkemail")]
        [DisplayName("Do not allow Bulk Emails")]
        public bool? DoNotBulkEMail {
            get {
                return GetAttributeValue<bool?>("donotbulkemail");
            }
            set {
                SetAttributeValue("donotbulkemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows direct email sent from Microsoft Dynamics 365.</para>
        /// <para>Display Name: Do not allow Emails</para>
        /// </summary>
        [AttributeLogicalName("donotemail")]
        [DisplayName("Do not allow Emails")]
        public bool? DoNotEMail {
            get {
                return GetAttributeValue<bool?>("donotemail");
            }
            set {
                SetAttributeValue("donotemail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows faxes.</para>
        /// <para>Display Name: Do not allow Faxes</para>
        /// </summary>
        [AttributeLogicalName("donotfax")]
        [DisplayName("Do not allow Faxes")]
        public bool? DoNotFax {
            get {
                return GetAttributeValue<bool?>("donotfax");
            }
            set {
                SetAttributeValue("donotfax", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows phone calls.</para>
        /// <para>Display Name: Do not allow Phone Calls</para>
        /// </summary>
        [AttributeLogicalName("donotphone")]
        [DisplayName("Do not allow Phone Calls")]
        public bool? DoNotPhone {
            get {
                return GetAttributeValue<bool?>("donotphone");
            }
            set {
                SetAttributeValue("donotphone", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead allows direct mail.</para>
        /// <para>Display Name: Do not allow Mails</para>
        /// </summary>
        [AttributeLogicalName("donotpostalmail")]
        [DisplayName("Do not allow Mails")]
        public bool? DoNotPostalMail {
            get {
                return GetAttributeValue<bool?>("donotpostalmail");
            }
            set {
                SetAttributeValue("donotpostalmail", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead accepts marketing materials, such as brochures or catalogs. Leads that opt out can be excluded from marketing initiatives.</para>
        /// <para>Display Name: Marketing Material</para>
        /// </summary>
        [AttributeLogicalName("donotsendmm")]
        [DisplayName("Marketing Material")]
        public bool? DoNotSendMM {
            get {
                return GetAttributeValue<bool?>("donotsendmm");
            }
            set {
                SetAttributeValue("donotsendmm", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kundeemnets primære e-mail-adresse.</para>
        /// <para>Display Name: Private Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress1")]
        [DisplayName("Private Email")]
        [MaxLength(100)]
        public string EMailAddress1 {
            get {
                return GetAttributeValue<string>("emailaddress1");
            }
            set {
                SetAttributeValue("emailaddress1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv kundeemnets sekundære e-mail-adresse.</para>
        /// <para>Display Name: Work Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress2")]
        [DisplayName("Work Email")]
        [MaxLength(100)]
        public string EMailAddress2 {
            get {
                return GetAttributeValue<string>("emailaddress2");
            }
            set {
                SetAttributeValue("emailaddress2", value);
            }
        }
        
        /// <summary>
        /// <para>Type a third email address for the lead.</para>
        /// <para>Display Name: Email Address 3</para>
        /// </summary>
        [AttributeLogicalName("emailaddress3")]
        [DisplayName("Email Address 3")]
        [MaxLength(100)]
        public string EMailAddress3 {
            get {
                return GetAttributeValue<string>("emailaddress3");
            }
            set {
                SetAttributeValue("emailaddress3", value);
            }
        }
        
        [AttributeLogicalName("entityimageid")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Type the estimated revenue value that this lead will generate to assist in sales forecasting and planning.</para>
        /// <para>Display Name: Est. Value</para>
        /// </summary>
        [AttributeLogicalName("estimatedamount")]
        [DisplayName("Est. Value")]
        public decimal? EstimatedAmount {
            get {
                return GetMoneyValue("estimatedamount");
            }
            set {
                SetMoneyValue("estimatedamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Est. Value in base currency.</para>
        /// <para>Display Name: Est. Value (Base)</para>
        /// </summary>
        [AttributeLogicalName("estimatedamount_base")]
        [DisplayName("Est. Value (Base)")]
        public decimal? EstimatedAmount_Base {
            get {
                return GetMoneyValue("estimatedamount_base");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected close date for the lead, so that the sales team can schedule timely follow-up meetings to move the prospect to the next sales stage.</para>
        /// <para>Display Name: Est. Close Date</para>
        /// </summary>
        [AttributeLogicalName("estimatedclosedate")]
        [DisplayName("Est. Close Date")]
        public DateTime? EstimatedCloseDate {
            get {
                return GetAttributeValue<DateTime?>("estimatedclosedate");
            }
            set {
                SetAttributeValue("estimatedclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type a numeric value of the lead's estimated value, such as a product quantity, if no revenue amount can be specified in the Est. Value field. This can be used for sales forecasting and planning.</para>
        /// <para>Display Name: Est. Value (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue")]
        [DisplayName("Est. Value (deprecated)")]
        public double? EstimatedValue {
            get {
                return GetAttributeValue<double?>("estimatedvalue");
            }
            set {
                SetAttributeValue("estimatedvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
        /// <para>Display Name: Evaluate Fit</para>
        /// </summary>
        [AttributeLogicalName("evaluatefit")]
        [DisplayName("Evaluate Fit")]
        public bool? EvaluateFit {
            get {
                return GetAttributeValue<bool?>("evaluatefit");
            }
            set {
                SetAttributeValue("evaluatefit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Type the fax number for the primary contact for the lead.</para>
        /// <para>Display Name: Fax</para>
        /// </summary>
        [AttributeLogicalName("fax")]
        [DisplayName("Fax")]
        [MaxLength(50)]
        public string Fax {
            get {
                return GetAttributeValue<string>("fax");
            }
            set {
                SetAttributeValue("fax", value);
            }
        }
        
        /// <summary>
        /// <para>Type the first name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(50)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether to allow following email activity like opens, attachment views and link clicks for emails sent to the lead.</para>
        /// <para>Display Name: Follow Email Activity</para>
        /// </summary>
        [AttributeLogicalName("followemail")]
        [DisplayName("Follow Email Activity")]
        public bool? FollowEmail {
            get {
                return GetAttributeValue<bool?>("followemail");
            }
            set {
                SetAttributeValue("followemail", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's first and last names so the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den primære branche, som kundeemnets forretning fokuserer på, til brug ved marketingsegmentering og demografiske analyser.</para>
        /// <para>Display Name: Industry</para>
        /// </summary>
        [AttributeLogicalName("industrycode")]
        [DisplayName("Industry")]
        public Lead_IndustryCode? IndustryCode {
            get {
                return GetOptionSetValue<Lead_IndustryCode>("industrycode");
            }
            set {
                SetOptionSetValue("industrycode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
        /// <para>Display Name: Initial Communication</para>
        /// </summary>
        [AttributeLogicalName("initialcommunication")]
        [DisplayName("Initial Communication")]
        public initialcommunication? InitialCommunication {
            get {
                return GetOptionSetValue<initialcommunication>("initialcommunication");
            }
            set {
                SetOptionSetValue("initialcommunication", value);
            }
        }
        
        /// <summary>
        /// <para>Type the job title of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Type the last name of the primary contact for the lead to make sure the prospect is addressed correctly in sales calls, email, and marketing campaigns.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(50)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date when the lead was last included in a marketing campaign or quick campaign.</para>
        /// <para>Display Name: Last Campaign Date</para>
        /// </summary>
        [AttributeLogicalName("lastusedincampaign")]
        [DisplayName("Last Campaign Date")]
        public DateTime? LastUsedInCampaign {
            get {
                return GetAttributeValue<DateTime?>("lastusedincampaign");
            }
            set {
                SetAttributeValue("lastusedincampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Select a rating value to indicate the lead's potential to become a customer.</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("leadqualitycode")]
        [DisplayName("Rating")]
        public Lead_LeadQualityCode? LeadQualityCode {
            get {
                return GetOptionSetValue<Lead_LeadQualityCode>("leadqualitycode");
            }
            set {
                SetOptionSetValue("leadqualitycode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the primary marketing source that prompted the lead to contact you.</para>
        /// <para>Display Name: Lead Source</para>
        /// </summary>
        [AttributeLogicalName("leadsourcecode")]
        [DisplayName("Lead Source")]
        public Lead_LeadSourceCode? LeadSourceCode {
            get {
                return GetOptionSetValue<Lead_LeadSourceCode>("leadsourcecode");
            }
            set {
                SetOptionSetValue("leadsourcecode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the master lead for merge.</para>
        /// <para>Display Name: Master ID</para>
        /// </summary>
        [AttributeLogicalName("masterid")]
        [DisplayName("Master ID")]
        public EntityReference MasterId {
            get {
                return GetAttributeValue<EntityReference>("masterid");
            }
        }
        
        /// <summary>
        /// <para>Tells whether the lead has been merged with another lead.</para>
        /// <para>Display Name: Merged</para>
        /// </summary>
        [AttributeLogicalName("merged")]
        [DisplayName("Merged")]
        public bool? Merged {
            get {
                return GetAttributeValue<bool?>("merged");
            }
        }
        
        /// <summary>
        /// <para>Type the middle name or initial of the primary contact for the lead to make sure the prospect is addressed correctly.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type the mobile phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(20)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Choose how high the level of need is for the lead's company.</para>
        /// <para>Display Name: Need</para>
        /// </summary>
        [AttributeLogicalName("need")]
        [DisplayName("Need")]
        public need? Need {
            get {
                return GetOptionSetValue<need>("need");
            }
            set {
                SetOptionSetValue("need", value);
            }
        }
        
        /// <summary>
        /// <para>Type the number of employees that work at the company associated with the lead, for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: No. of Employees</para>
        /// </summary>
        [AttributeLogicalName("numberofemployees")]
        [DisplayName("No. of Employees")]
        [Range(0, 1000000)]
        public int? NumberOfEmployees {
            get {
                return GetAttributeValue<int?>("numberofemployees");
            }
            set {
                SetAttributeValue("numberofemployees", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>This attribute is used for Sample Service Business Processes.</para>
        /// <para>Display Name: Originating Case</para>
        /// </summary>
        [AttributeLogicalName("originatingcaseid")]
        [DisplayName("Originating Case")]
        public EntityReference OriginatingCaseId {
            get {
                return GetAttributeValue<EntityReference>("originatingcaseid");
            }
            set {
                SetAttributeValue("originatingcaseid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the pager number for the primary contact for the lead.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("pager")]
        [DisplayName("Pager")]
        [MaxLength(20)]
        public string Pager {
            get {
                return GetAttributeValue<string>("pager");
            }
            set {
                SetAttributeValue("pager", value);
            }
        }
        
        /// <summary>
        /// <para>Choose an account to connect this lead to, so that the relationship is visible in reports and analytics.</para>
        /// <para>Display Name: Parent Account for lead</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Parent Account for lead")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose a contact to connect this lead to, so that the relationship is visible in reports and analytics.</para>
        /// <para>Display Name: Parent Contact for lead</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Parent Contact for lead")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
            set {
                SetAttributeValue("parentcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the lead participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg den foretrukne kontaktmetode.</para>
        /// <para>Display Name: Foretrukken kontaktmetode</para>
        /// </summary>
        [AttributeLogicalName("preferredcontactmethodcode")]
        [DisplayName("Foretrukken kontaktmetode")]
        public Lead_PreferredContactMethodCode? PreferredContactMethodCode {
            get {
                return GetOptionSetValue<Lead_PreferredContactMethodCode>("preferredcontactmethodcode");
            }
            set {
                SetOptionSetValue("preferredcontactmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's first and last names so the full name can be displayed in views and reports.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Lead_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Lead_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
        /// <para>Display Name: Purchase Process</para>
        /// </summary>
        [AttributeLogicalName("purchaseprocess")]
        [DisplayName("Purchase Process")]
        public purchaseprocess? PurchaseProcess {
            get {
                return GetOptionSetValue<purchaseprocess>("purchaseprocess");
            }
            set {
                SetOptionSetValue("purchaseprocess", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how long the lead will likely take to make the purchase, so the sales team will be aware.</para>
        /// <para>Display Name: Purchase Timeframe</para>
        /// </summary>
        [AttributeLogicalName("purchasetimeframe")]
        [DisplayName("Purchase Timeframe")]
        public purchasetimeframe? PurchaseTimeFrame {
            get {
                return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
            }
            set {
                SetOptionSetValue("purchasetimeframe", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the qualification or scoring of the lead.</para>
        /// <para>Display Name: Qualification Comments</para>
        /// </summary>
        [AttributeLogicalName("qualificationcomments")]
        [DisplayName("Qualification Comments")]
        public string QualificationComments {
            get {
                return GetAttributeValue<string>("qualificationcomments");
            }
            set {
                SetAttributeValue("qualificationcomments", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the opportunity that the lead was qualified on and then converted to.</para>
        /// <para>Display Name: Existing Opportunity</para>
        /// </summary>
        [AttributeLogicalName("qualifyingopportunityid")]
        [DisplayName("Existing Opportunity")]
        public EntityReference QualifyingOpportunityId {
            get {
                return GetAttributeValue<EntityReference>("qualifyingopportunityid");
            }
            set {
                SetAttributeValue("qualifyingopportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Related Campaign Response.</para>
        /// <para>Display Name: Related Campaign Response</para>
        /// </summary>
        [AttributeLogicalName("relatedobjectid")]
        [DisplayName("Related Campaign Response")]
        public EntityReference RelatedObjectId {
            get {
                return GetAttributeValue<EntityReference>("relatedobjectid");
            }
            set {
                SetAttributeValue("relatedobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the annual revenue of the company associated with the lead to provide an understanding of the prospect's business.</para>
        /// <para>Display Name: Annual Revenue</para>
        /// </summary>
        [AttributeLogicalName("revenue")]
        [DisplayName("Annual Revenue")]
        public decimal? Revenue {
            get {
                return GetMoneyValue("revenue");
            }
            set {
                SetMoneyValue("revenue", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Annual Revenue in base currency.</para>
        /// <para>Display Name: Annual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("revenue_base")]
        [DisplayName("Annual Revenue (Base)")]
        public decimal? Revenue_Base {
            get {
                return GetMoneyValue("revenue_base");
            }
        }
        
        /// <summary>
        /// <para>Type the Standard Industrial Classification (SIC) code that indicates the lead's primary industry of business for use in marketing segmentation and demographic analysis.</para>
        /// <para>Display Name: SIC Code</para>
        /// </summary>
        [AttributeLogicalName("sic")]
        [DisplayName("SIC Code")]
        [MaxLength(20)]
        public string SIC {
            get {
                return GetAttributeValue<string>("sic");
            }
            set {
                SetAttributeValue("sic", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Lead record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Select the sales stage of this lead to aid the sales team in their efforts to convert this lead to an opportunity.</para>
        /// <para>Display Name: Sales Stage</para>
        /// </summary>
        [AttributeLogicalName("salesstage")]
        [DisplayName("Sales Stage")]
        public lead_salesstage? SalesStage {
            get {
                return GetOptionSetValue<lead_salesstage>("salesstage");
            }
            set {
                SetOptionSetValue("salesstage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the sales process stage for the lead to help determine the probability of the lead converting to an opportunity.</para>
        /// <para>Display Name: Sales Stage Code</para>
        /// </summary>
        [AttributeLogicalName("salesstagecode")]
        [DisplayName("Sales Stage Code")]
        public Lead_SalesStageCode? SalesStageCode {
            get {
                return GetOptionSetValue<Lead_SalesStageCode>("salesstagecode");
            }
            set {
                SetOptionSetValue("salesstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Type the salutation of the primary contact for this lead to make sure the prospect is addressed correctly in sales calls, email messages, and marketing campaigns.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(100)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
        /// <para>Display Name: Schedule Follow Up (Prospect)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_prospect")]
        [DisplayName("Schedule Follow Up (Prospect)")]
        public DateTime? ScheduleFollowUp_Prospect {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
            }
            set {
                SetAttributeValue("schedulefollowup_prospect", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
        /// <para>Display Name: Schedule Follow Up (Qualify)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_qualify")]
        [DisplayName("Schedule Follow Up (Qualify)")]
        public DateTime? ScheduleFollowUp_Qualify {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
            }
            set {
                SetAttributeValue("schedulefollowup_qualify", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the lead is open, qualified, or disqualified. Qualified and disqualified leads are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public LeadState? StateCode {
            get {
                return GetOptionSetValue<LeadState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg kundeemnets status.</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Lead_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Lead_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et emne eller beskrivende navn, f.eks. den forventede ordre, firmanavnet eller marketingkildelisten, for at identificere kundeemnet.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(300)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv arbejdstelefonnummeret på den primære kontakt for kundeemnet.</para>
        /// <para>Display Name: Telefon (arbejde)</para>
        /// </summary>
        [AttributeLogicalName("telephone1")]
        [DisplayName("Telefon (arbejde)")]
        [MaxLength(50)]
        public string Telephone1 {
            get {
                return GetAttributeValue<string>("telephone1");
            }
            set {
                SetAttributeValue("telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv det private telefonnummer på den primære kontakt for kundeemnet.</para>
        /// <para>Display Name: Telefon (privat)</para>
        /// </summary>
        [AttributeLogicalName("telephone2")]
        [DisplayName("Telefon (privat)")]
        [MaxLength(50)]
        public string Telephone2 {
            get {
                return GetAttributeValue<string>("telephone2");
            }
            set {
                SetAttributeValue("telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Type an alternate phone number for the primary contact for the lead.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("telephone3")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Telephone3 {
            get {
                return GetAttributeValue<string>("telephone3");
            }
            set {
                SetAttributeValue("telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the lead record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Type the website URL for the company associated with this lead.</para>
        /// <para>Display Name: Website</para>
        /// </summary>
        [AttributeLogicalName("websiteurl")]
        [DisplayName("Website")]
        [MaxLength(200)]
        public string WebSiteUrl {
            get {
                return GetAttributeValue<string>("websiteurl");
            }
            set {
                SetAttributeValue("websiteurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's company name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Company Name</para>
        /// </summary>
        [AttributeLogicalName("yomicompanyname")]
        [DisplayName("Yomi Company Name")]
        [MaxLength(100)]
        public string YomiCompanyName {
            get {
                return GetAttributeValue<string>("yomicompanyname");
            }
            set {
                SetAttributeValue("yomicompanyname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's first name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(150)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Combines and shows the lead's Yomi first and last names so the full phonetic name can be displayed in views and reports.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(450)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's last name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(150)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Type the phonetic spelling of the lead's middle name, if the name is specified in Japanese, to make sure the name is pronounced correctly in phone calls with the prospect.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(150)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fjern relation til eksisterende kontakt</para>
        /// </summary>
        [AttributeLogicalName("ff_fjernrelationtileksisterendekontakt")]
        [DisplayName("Fjern relation til eksisterende kontakt")]
        public bool? ff_Fjernrelationtileksisterendekontakt {
            get {
                return GetAttributeValue<bool?>("ff_fjernrelationtileksisterendekontakt");
            }
            set {
                SetAttributeValue("ff_fjernrelationtileksisterendekontakt", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 6/5-25: Not used anymore] Used to test if a lead has an autoamtic related opportunity, which is added with custom plugin.</para>
        /// <para>Display Name: ZZ_Added Opportunity using plugin</para>
        /// </summary>
        [AttributeLogicalName("ff_addedopportunityusingplugin")]
        [DisplayName("ZZ_Added Opportunity using plugin")]
        [ObsoleteAttribute()]
        public bool? ff_addedopportunityusingplugin {
            get {
                return GetAttributeValue<bool?>("ff_addedopportunityusingplugin");
            }
            set {
                SetAttributeValue("ff_addedopportunityusingplugin", value);
            }
        }
        
        /// <summary>
        /// <para>Skal leadet automatisk diskkvalificeres. Sættes af plugin ved oprettelse. Bruges af flow til at diskvalificere lead.</para>
        /// <para>Display Name: Automatisk Diskvalificering</para>
        /// </summary>
        [AttributeLogicalName("ff_automaticdisqualificationbool")]
        [DisplayName("Automatisk Diskvalificering")]
        public bool? ff_automaticdisqualificationbool {
            get {
                return GetAttributeValue<bool?>("ff_automaticdisqualificationbool");
            }
            set {
                SetAttributeValue("ff_automaticdisqualificationbool", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 27/3-25: Da man det ikke lykkedes at sætte den med plugin] Optionsæt til automatisk diskvalificering af et nyt lead. Da man ikke kan oprette et diskvalificeret lead.</para>
        /// <para>Display Name: ZZ_Automatisk Diskvalificeringsgrund</para>
        /// </summary>
        [AttributeLogicalName("ff_automaticdisqualificationreason")]
        [DisplayName("ZZ_Automatisk Diskvalificeringsgrund")]
        [ObsoleteAttribute()]
        public ff_disqualificationreason? ff_automaticdisqualificationreason {
            get {
                return GetOptionSetValue<ff_disqualificationreason>("ff_automaticdisqualificationreason");
            }
            set {
                SetOptionSetValue("ff_automaticdisqualificationreason", value);
            }
        }
        
        /// <summary>
        /// <para>Fritekstfelt til at beskrive hvorfor en diskvalificering bør foretages. Sættes af plugin.</para>
        /// <para>Display Name: Diskvalificeringsgrund</para>
        /// </summary>
        [AttributeLogicalName("ff_automaticdisqualificationreasontext")]
        [DisplayName("Diskvalificeringsgrund")]
        [MaxLength(2000)]
        public string ff_automaticdisqualificationreasontext {
            get {
                return GetAttributeValue<string>("ff_automaticdisqualificationreasontext");
            }
            set {
                SetAttributeValue("ff_automaticdisqualificationreasontext", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaignactivity</para>
        /// </summary>
        [AttributeLogicalName("ff_campaignactivity")]
        [DisplayName("Campaignactivity")]
        public EntityReference ff_campaignactivity {
            get {
                return GetAttributeValue<EntityReference>("ff_campaignactivity");
            }
            set {
                SetAttributeValue("ff_campaignactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company Name</para>
        /// </summary>
        [AttributeLogicalName("ff_companyname")]
        [DisplayName("Company Name")]
        [MaxLength(100)]
        public string ff_companyname {
            get {
                return GetAttributeValue<string>("ff_companyname");
            }
            set {
                SetAttributeValue("ff_companyname", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date of Disqualification</para>
        /// </summary>
        [AttributeLogicalName("ff_disqualificationdate")]
        [DisplayName("Date of Disqualification")]
        public DateTime? ff_disqualificationdate {
            get {
                return GetAttributeValue<DateTime?>("ff_disqualificationdate");
            }
            set {
                SetAttributeValue("ff_disqualificationdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: e-Boks</para>
        /// </summary>
        [AttributeLogicalName("ff_eboks")]
        [DisplayName("e-Boks")]
        public bool? ff_eboks {
            get {
                return GetAttributeValue<bool?>("ff_eboks");
            }
            set {
                SetAttributeValue("ff_eboks", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Engelsk talende</para>
        /// </summary>
        [AttributeLogicalName("ff_englishspeaking")]
        [DisplayName("ZZ_Engelsk talende")]
        [ObsoleteAttribute()]
        public bool? ff_englishspeaking {
            get {
                return GetAttributeValue<bool?>("ff_englishspeaking");
            }
            set {
                SetAttributeValue("ff_englishspeaking", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Giftcard</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcard")]
        [DisplayName("Giftcard")]
        public EntityReference ff_giftcard {
            get {
                return GetAttributeValue<EntityReference>("ff_giftcard");
            }
            set {
                SetAttributeValue("ff_giftcard", value);
            }
        }
        
        /// <summary>
        /// <para>Medlemsnummer for kontakter der har deltaget i arrangementer, men endnu ikke er medlemmer.</para>
        /// <para>Display Name: Membershipnumber</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipnumber")]
        [DisplayName("Membershipnumber")]
        [MaxLength(100)]
        public string ff_membershipnumber {
            get {
                return GetAttributeValue<string>("ff_membershipnumber");
            }
            set {
                SetAttributeValue("ff_membershipnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Place of education</para>
        /// </summary>
        [AttributeLogicalName("ff_placeofeducation")]
        [DisplayName("Place of education")]
        public EntityReference ff_placeofeducation {
            get {
                return GetAttributeValue<EntityReference>("ff_placeofeducation");
            }
            set {
                SetAttributeValue("ff_placeofeducation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Place of study</para>
        /// </summary>
        [AttributeLogicalName("ff_placeofstudy")]
        [DisplayName("Place of study")]
        [MaxLength(1000)]
        public string ff_placeofstudy {
            get {
                return GetAttributeValue<string>("ff_placeofstudy");
            }
            set {
                SetAttributeValue("ff_placeofstudy", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Preferred Language</para>
        /// </summary>
        [AttributeLogicalName("ff_preferredlanguage")]
        [DisplayName("Preferred Language")]
        public bool? ff_preferredlanguage {
            get {
                return GetAttributeValue<bool?>("ff_preferredlanguage");
            }
            set {
                SetAttributeValue("ff_preferredlanguage", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 3/6-25: Bruges ikke mere]</para>
        /// <para>Display Name: ZZ_Privat Telefon</para>
        /// </summary>
        [AttributeLogicalName("ff_primarytelephone")]
        [DisplayName("ZZ_Privat Telefon")]
        [MaxLength(20)]
        [ObsoleteAttribute()]
        public string ff_primarytelephone {
            get {
                return GetAttributeValue<string>("ff_primarytelephone");
            }
            set {
                SetAttributeValue("ff_primarytelephone", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Refererer with match</para>
        /// </summary>
        [AttributeLogicalName("ff_refererer")]
        [DisplayName("Refererer with match")]
        public EntityReference ff_refererer {
            get {
                return GetAttributeValue<EntityReference>("ff_refererer");
            }
            set {
                SetAttributeValue("ff_refererer", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Refererer without match</para>
        /// </summary>
        [AttributeLogicalName("ff_referererstring")]
        [DisplayName("Refererer without match")]
        [MaxLength(100)]
        public string ff_referererstring {
            get {
                return GetAttributeValue<string>("ff_referererstring");
            }
            set {
                SetAttributeValue("ff_referererstring", value);
            }
        }
        
        /// <summary>
        /// <para>Salgsscorens vurderes på baggrund af den relateret kampagne og udfra en scala på 1-10, hvor 10 er højest.</para>
        /// <para>Display Name: Salesscore</para>
        /// </summary>
        [AttributeLogicalName("ff_salesscore")]
        [DisplayName("Salesscore")]
        [Range(1, 10)]
        public int? ff_salesscore {
            get {
                return GetAttributeValue<int?>("ff_salesscore");
            }
            set {
                SetAttributeValue("ff_salesscore", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 6/5-25: Bruges pt ikke] Sættes af ribbonknap således logik til tjek efter eksisterende kontakt køres.</para>
        /// <para>Display Name: ZZ_Tjek for eksisterende kontakt</para>
        /// </summary>
        [AttributeLogicalName("ff_searchforexistingcontacttrigger")]
        [DisplayName("ZZ_Tjek for eksisterende kontakt")]
        [ObsoleteAttribute()]
        public bool? ff_searchforexistingcontacttrigger {
            get {
                return GetAttributeValue<bool?>("ff_searchforexistingcontacttrigger");
            }
            set {
                SetAttributeValue("ff_searchforexistingcontacttrigger", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Arbejde Email</para>
        /// </summary>
        [AttributeLogicalName("ff_secondaryemail")]
        [DisplayName("ZZ_Arbejde Email")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_secondaryemail {
            get {
                return GetAttributeValue<string>("ff_secondaryemail");
            }
            set {
                SetAttributeValue("ff_secondaryemail", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: ZZ_Work Phone</para>
        /// </summary>
        [AttributeLogicalName("ff_secondarytelephone")]
        [DisplayName("ZZ_Work Phone")]
        [MaxLength(15)]
        [ObsoleteAttribute()]
        public string ff_secondarytelephone {
            get {
                return GetAttributeValue<string>("ff_secondarytelephone");
            }
            set {
                SetAttributeValue("ff_secondarytelephone", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Specified Industry</para>
        /// </summary>
        [AttributeLogicalName("ff_specifiedindustry")]
        [DisplayName("Specified Industry")]
        [MaxLength(1000)]
        public string ff_specifiedindustry {
            get {
                return GetAttributeValue<string>("ff_specifiedindustry");
            }
            set {
                SetAttributeValue("ff_specifiedindustry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Studyprogramme</para>
        /// </summary>
        [AttributeLogicalName("ff_studyprogram")]
        [DisplayName("Studyprogramme")]
        [MaxLength(1000)]
        public string ff_studyprogram {
            get {
                return GetAttributeValue<string>("ff_studyprogram");
            }
            set {
                SetAttributeValue("ff_studyprogram", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Grade</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadgrade")]
        [DisplayName("(Deprecated) Lead Grade")]
        public msdyn_leadgradeoptset? msdyn_LeadGrade {
            get {
                return GetOptionSetValue<msdyn_leadgradeoptset>("msdyn_leadgrade");
            }
            set {
                SetOptionSetValue("msdyn_leadgrade", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadscore")]
        [DisplayName("(Deprecated) Lead Score")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_LeadScore {
            get {
                return GetAttributeValue<int?>("msdyn_leadscore");
            }
            set {
                SetAttributeValue("msdyn_leadscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Lead Score Trend</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadscoretrend")]
        [DisplayName("(Deprecated) Lead Score Trend")]
        public msdyn_leadscoretrendoptset? msdyn_LeadScoreTrend {
            get {
                return GetOptionSetValue<msdyn_leadscoretrendoptset>("msdyn_leadscoretrend");
            }
            set {
                SetOptionSetValue("msdyn_leadscoretrend", value);
            }
        }
        
        /// <summary>
        /// <para>Predictive score</para>
        /// <para>Display Name: Predictive Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_predictivescoreid")]
        [DisplayName("Predictive Score")]
        public EntityReference msdyn_PredictiveScoreId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_predictivescoreid");
            }
            set {
                SetAttributeValue("msdyn_predictivescoreid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score History</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorehistory")]
        [DisplayName("(Deprecated) Score History")]
        public string msdyn_ScoreHistory {
            get {
                return GetAttributeValue<string>("msdyn_scorehistory");
            }
            set {
                SetAttributeValue("msdyn_scorehistory", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score Reasons</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorereasons")]
        [DisplayName("(Deprecated) Score Reasons")]
        public string msdyn_ScoreReasons {
            get {
                return GetAttributeValue<string>("msdyn_scorereasons");
            }
            set {
                SetAttributeValue("msdyn_scorereasons", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether lead is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>LeadKPIId</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_leadkpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_leadkpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_leadkpiid");
            }
            set {
                SetAttributeValue("msdyn_leadkpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Result of the assignment rule process</para>
        /// <para>Display Name: Assignment Rule Result</para>
        /// </summary>
        [AttributeLogicalName("msdyn_salesassignmentresult")]
        [DisplayName("Assignment Rule Result")]
        public Lead_msdyn_salesassignmentresult? msdyn_salesassignmentresult {
            get {
                return GetOptionSetValue<Lead_msdyn_salesassignmentresult>("msdyn_salesassignmentresult");
            }
            set {
                SetOptionSetValue("msdyn_salesassignmentresult", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with Lead.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        [RelationshipSchemaName("Lead_ActivityPointers")]
        public IEnumerable<ActivityPointer> Lead_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Lead_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Lead_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Annotation")]
        public IEnumerable<Annotation> Lead_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Lead_Annotation", null);
            }
            set {
                SetRelatedEntities("Lead_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Appointments")]
        public IEnumerable<Appointment> Lead_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Lead_Appointments", null);
            }
            set {
                SetRelatedEntities("Lead_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Email_EmailSender")]
        public IEnumerable<Email> Lead_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Lead_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Lead_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Emails")]
        public IEnumerable<Email> Lead_Emails {
            get {
                return GetRelatedEntities<Email>("Lead_Emails", null);
            }
            set {
                SetRelatedEntities("Lead_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Phonecalls")]
        public IEnumerable<PhoneCall> Lead_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Lead_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Lead_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Lead_Tasks")]
        public IEnumerable<Task> Lead_Tasks {
            get {
                return GetRelatedEntities<Task>("Lead_Tasks", null);
            }
            set {
                SetRelatedEntities("Lead_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("originatingcaseid")]
        [RelationshipSchemaName("OriginatingCase_Lead")]
        public Incident OriginatingCase_Lead {
            get {
                return GetRelatedEntity<Incident>("OriginatingCase_Lead", null);
            }
            set {
                SetRelatedEntity("OriginatingCase_Lead", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_master_lead", EntityRole.Referenced)]
        public IEnumerable<Lead> Referencedlead_master_lead {
            get {
                return GetRelatedEntities<Lead>("lead_master_lead", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lead_master_lead", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("masterid")]
        [RelationshipSchemaName("lead_master_lead", EntityRole.Referencing)]
        public Lead Referencinglead_master_lead {
            get {
                return GetRelatedEntity<Lead>("lead_master_lead", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lead_master_lead", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("account_originating_lead")]
        public IEnumerable<Account> account_originating_lead {
            get {
                return GetRelatedEntities<Account>("account_originating_lead", null);
            }
            set {
                SetRelatedEntities("account_originating_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("accountleads_association")]
        public IEnumerable<Account> accountleads_association {
            get {
                return GetRelatedEntities<Account>("accountleads_association", null);
            }
            set {
                SetRelatedEntities("accountleads_association", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_leads")]
        public BusinessUnit business_unit_leads {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_leads", null);
            }
            set {
                SetRelatedEntity("business_unit_leads", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_originating_lead")]
        public IEnumerable<Contact> contact_originating_lead {
            get {
                return GetRelatedEntities<Contact>("contact_originating_lead", null);
            }
            set {
                SetRelatedEntities("contact_originating_lead", null, value);
            }
        }
        
        [RelationshipSchemaName("contactleads_association")]
        public IEnumerable<Contact> contactleads_association {
            get {
                return GetRelatedEntities<Contact>("contactleads_association", null);
            }
            set {
                SetRelatedEntities("contactleads_association", null, value);
            }
        }
        
        [AttributeLogicalName("ff_giftcard")]
        [RelationshipSchemaName("ff_lead_giftcard_ff_giftcard")]
        public ff_giftcard ff_lead_giftcard_ff_giftcard {
            get {
                return GetRelatedEntity<ff_giftcard>("ff_lead_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("ff_lead_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_refererer")]
        [RelationshipSchemaName("ff_lead_refererer_contact")]
        public Contact ff_lead_refererer_contact {
            get {
                return GetRelatedEntity<Contact>("ff_lead_refererer_contact", null);
            }
            set {
                SetRelatedEntity("ff_lead_refererer_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_IncidentResolutions")]
        public IEnumerable<IncidentResolution> lead_IncidentResolutions {
            get {
                return GetRelatedEntities<IncidentResolution>("lead_IncidentResolutions", null);
            }
            set {
                SetRelatedEntities("lead_IncidentResolutions", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_activity_parties")]
        public IEnumerable<ActivityParty> lead_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("lead_activity_parties", null);
            }
            set {
                SetRelatedEntities("lead_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("lead_customer_accounts")]
        public Account lead_customer_accounts {
            get {
                return GetRelatedEntity<Account>("lead_customer_accounts", null);
            }
            set {
                SetRelatedEntity("lead_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("lead_customer_contacts")]
        public Contact lead_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("lead_customer_contacts", null);
            }
            set {
                SetRelatedEntity("lead_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_ff_casenotes")]
        public IEnumerable<ff_casenote> lead_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("lead_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("lead_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> lead_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("lead_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("lead_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("lead_owning_team")]
        public Team lead_owning_team {
            get {
                return GetRelatedEntity<Team>("lead_owning_team", null);
            }
            set {
                SetRelatedEntity("lead_owning_team", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("lead_owning_user")]
        public SystemUser lead_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("lead_owning_user", null);
            }
            set {
                SetRelatedEntity("lead_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("lead_parent_account")]
        public Account lead_parent_account {
            get {
                return GetRelatedEntity<Account>("lead_parent_account", null);
            }
            set {
                SetRelatedEntity("lead_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("parentcontactid")]
        [RelationshipSchemaName("lead_parent_contact")]
        public Contact lead_parent_contact {
            get {
                return GetRelatedEntity<Contact>("lead_parent_contact", null);
            }
            set {
                SetRelatedEntity("lead_parent_contact", null, value);
            }
        }
        
        [AttributeLogicalName("qualifyingopportunityid")]
        [RelationshipSchemaName("lead_qualifying_opportunity")]
        public Opportunity lead_qualifying_opportunity {
            get {
                return GetRelatedEntity<Opportunity>("lead_qualifying_opportunity", null);
            }
            set {
                SetRelatedEntity("lead_qualifying_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_lead_createdonbehalfby")]
        public SystemUser lk_lead_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_lead_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_lead_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
        public SystemUser lk_lead_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_lead_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_lead_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_leadbase_createdby")]
        public SystemUser lk_leadbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_leadbase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_leadbase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_leadbase_modifiedby")]
        public SystemUser lk_leadbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_leadbase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_leadbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_originating_lead")]
        public IEnumerable<Opportunity> opportunity_originating_lead {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_originating_lead", null);
            }
            set {
                SetRelatedEntities("opportunity_originating_lead", null, value);
            }
        }
        
        public static Lead Retrieve(IOrganizationService service, Guid id, params Expression<Func<Lead,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Mailbox</para>
    /// </summary>
    [EntityLogicalName("mailbox")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Mailbox : ExtendedEntity<MailboxState, Mailbox_StatusCode> {
        
        public const string EntityLogicalName = "mailbox";
        
        public const int EntityTypeCode = 9606;
        
        public Mailbox() : 
                base(EntityLogicalName) {
        }
        
        public Mailbox(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("mailboxid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("mailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("mailboxid")]
        [DisplayName("Mailbox")]
        public Guid? MailboxId {
            get {
                return GetAttributeValue<Guid?>("mailboxid");
            }
            set {
                SetId("mailboxid", value);
            }
        }
        
        /// <summary>
        /// <para>Determines if ACS integration should be enabled for outgoing email synchronization.</para>
        /// <para>Display Name: ACS Enabled for Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("acsenabledforoutgoingemail")]
        [DisplayName("ACS Enabled for Outgoing Email")]
        public bool? ACSEnabledForOutgoingEmail {
            get {
                return GetAttributeValue<bool?>("acsenabledforoutgoingemail");
            }
            set {
                SetAttributeValue("acsenabledforoutgoingemail", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: ACS MailFrom Created</para>
        /// </summary>
        [AttributeLogicalName("acsmailfromcreated")]
        [DisplayName("ACS MailFrom Created")]
        public bool? ACSMailFromCreated {
            get {
                return GetAttributeValue<bool?>("acsmailfromcreated");
            }
            set {
                SetAttributeValue("acsmailfromcreated", value);
            }
        }
        
        /// <summary>
        /// <para>The status of ACS outgoing email synchronization.</para>
        /// <para>Display Name: ACS Outgoing Email Status</para>
        /// </summary>
        [AttributeLogicalName("acsoutgoingemailstatus")]
        [DisplayName("ACS Outgoing Email Status")]
        public Mailbox_ACSOutgoingEmailStatus? ACSOutgoingEmailStatus {
            get {
                return GetOptionSetValue<Mailbox_ACSOutgoingEmailStatus>("acsoutgoingemailstatus");
            }
            set {
                SetOptionSetValue("acsoutgoingemailstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the delivery method for the mailbox for appointments, contacts, and tasks.</para>
        /// <para>Display Name: Appointments, Contacts, and Tasks</para>
        /// </summary>
        [AttributeLogicalName("actdeliverymethod")]
        [DisplayName("Appointments, Contacts, and Tasks")]
        public Mailbox_ACTDeliveryMethod? ACTDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_ACTDeliveryMethod>("actdeliverymethod");
            }
            set {
                SetOptionSetValue("actdeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Appointments, Contacts, and Tasks.</para>
        /// <para>Display Name: Appointments, Contacts, and Tasks Status</para>
        /// </summary>
        [AttributeLogicalName("actstatus")]
        [DisplayName("Appointments, Contacts, and Tasks Status")]
        public Mailbox_ACTStatus? ACTStatus {
            get {
                return GetOptionSetValue<Mailbox_ACTStatus>("actstatus");
            }
            set {
                SetOptionSetValue("actstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether to allow the email connector to use credentials.</para>
        /// <para>Display Name: Allow to Use Credentials for Email Processing</para>
        /// </summary>
        [AttributeLogicalName("allowemailconnectortousecredentials")]
        [DisplayName("Allow to Use Credentials for Email Processing")]
        public bool? AllowEmailConnectorToUseCredentials {
            get {
                return GetAttributeValue<bool?>("allowemailconnectortousecredentials");
            }
            set {
                SetAttributeValue("allowemailconnectortousecredentials", value);
            }
        }
        
        /// <summary>
        /// <para>Mailbox Total Duration in Average</para>
        /// <para>Display Name: Monitor Total Performance</para>
        /// </summary>
        [AttributeLogicalName("averagetotalduration")]
        [DisplayName("Monitor Total Performance")]
        [Range(-1, 2147483647)]
        public int? AverageTotalDuration {
            get {
                return GetAttributeValue<int?>("averagetotalduration");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange web services endpoint URL for the mailbox.</para>
        /// <para>Display Name: Exchange Web Services URL</para>
        /// </summary>
        [AttributeLogicalName("ewsurl")]
        [DisplayName("Exchange Web Services URL")]
        [MaxLength(2084)]
        public string EWSURL {
            get {
                return GetAttributeValue<string>("ewsurl");
            }
            set {
                SetAttributeValue("ewsurl", value);
            }
        }
        
        /// <summary>
        /// <para>Type the email address of the mailbox.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>The user who approved the email address for synchronization.</para>
        /// <para>Display Name: Email Address Approved By</para>
        /// </summary>
        [AttributeLogicalName("emailaddressapprovedby")]
        [DisplayName("Email Address Approved By")]
        public EntityReference EmailAddressApprovedBy {
            get {
                return GetAttributeValue<EntityReference>("emailaddressapprovedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time the mailbox's email address was approved.</para>
        /// <para>Display Name: Email Address Approved On</para>
        /// </summary>
        [AttributeLogicalName("emailaddressapprovedon")]
        [DisplayName("Email Address Approved On")]
        public DateTime? EmailAddressApprovedOn {
            get {
                return GetAttributeValue<DateTime?>("emailaddressapprovedon");
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the email address.</para>
        /// <para>Display Name: Email Address Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Email Address Status")]
        public Mailbox_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<Mailbox_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Select the email server profile of the mailbox.</para>
        /// <para>Display Name: Server Profile</para>
        /// </summary>
        [AttributeLogicalName("emailserverprofile")]
        [DisplayName("Server Profile")]
        public EntityReference EmailServerProfile {
            get {
                return GetAttributeValue<EntityReference>("emailserverprofile");
            }
            set {
                SetAttributeValue("emailserverprofile", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates whether the mailbox is enabled for Appointments, Contacts, and Tasks.</para>
        /// <para>Display Name: Enabled For Appointments, Contacts, And Tasks</para>
        /// </summary>
        [AttributeLogicalName("enabledforact")]
        [DisplayName("Enabled For Appointments, Contacts, And Tasks")]
        public bool? EnabledForACT {
            get {
                return GetAttributeValue<bool?>("enabledforact");
            }
            set {
                SetAttributeValue("enabledforact", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the mailbox is enabled for receiving email.</para>
        /// <para>Display Name: Enabled For Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("enabledforincomingemail")]
        [DisplayName("Enabled For Incoming Email")]
        public bool? EnabledForIncomingEmail {
            get {
                return GetAttributeValue<bool?>("enabledforincomingemail");
            }
            set {
                SetAttributeValue("enabledforincomingemail", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the mailbox is enabled for sending email.</para>
        /// <para>Display Name: Enabled For Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("enabledforoutgoingemail")]
        [DisplayName("Enabled For Outgoing Email")]
        public bool? EnabledForOutgoingEmail {
            get {
                return GetAttributeValue<bool?>("enabledforoutgoingemail");
            }
            set {
                SetAttributeValue("enabledforoutgoingemail", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the exchange contacts import was last completed for a mailbox record.</para>
        /// <para>Display Name: Exchange Contacts Import Completed On</para>
        /// </summary>
        [AttributeLogicalName("exchangecontactsimportcompletedon")]
        [DisplayName("Exchange Contacts Import Completed On")]
        public DateTime? ExchangeContactsImportCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("exchangecontactsimportcompletedon");
            }
        }
        
        /// <summary>
        /// <para>Indicates the exchange contacts import status for a mailbox record.</para>
        /// <para>Display Name: Exchange Contacts Import Status</para>
        /// </summary>
        [AttributeLogicalName("exchangecontactsimportstatus")]
        [DisplayName("Exchange Contacts Import Status")]
        public Mailbox_ExchangeContactsImportStatus? ExchangeContactsImportStatus {
            get {
                return GetOptionSetValue<Mailbox_ExchangeContactsImportStatus>("exchangecontactsimportstatus");
            }
            set {
                SetOptionSetValue("exchangecontactsimportstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the exchange synchronization state in XML format.</para>
        /// <para>Display Name: Exchange Sync State</para>
        /// </summary>
        [AttributeLogicalName("exchangesyncstatexml")]
        [DisplayName("Exchange Sync State")]
        public string ExchangeSyncStateXml {
            get {
                return GetAttributeValue<string>("exchangesyncstatexml");
            }
            set {
                SetAttributeValue("exchangesyncstatexml", value);
            }
        }
        
        /// <summary>
        /// <para>Holds the hierarchy of folders under inbox in XML format.</para>
        /// <para>Display Name: Folder Hierarchy</para>
        /// </summary>
        [AttributeLogicalName("folderhierarchy")]
        [DisplayName("Folder Hierarchy")]
        public string FolderHierarchy {
            get {
                return GetAttributeValue<string>("folderhierarchy");
            }
            set {
                SetAttributeValue("folderhierarchy", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Count of the number of times a mailbox gets forced unlocked</para>
        /// </summary>
        [AttributeLogicalName("forcedunlockcount")]
        [DisplayName("Count of the number of times a mailbox gets forced unlocked")]
        [Range(0, 2147483647)]
        public int? ForcedUnlockCount {
            get {
                return GetAttributeValue<int?>("forcedunlockcount");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the async host that is processing this mailbox.</para>
        /// <para>Display Name: Host</para>
        /// </summary>
        [AttributeLogicalName("hostid")]
        [DisplayName("Host")]
        [MaxLength(256)]
        public string HostId {
            get {
                return GetAttributeValue<string>("hostid");
            }
        }
        
        /// <summary>
        /// <para>Select how incoming email will be delivered to the mailbox.</para>
        /// <para>Display Name: Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email")]
        public Mailbox_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Select the status that will be assigned to incoming email messages.</para>
        /// <para>Display Name: Incoming Email Status</para>
        /// </summary>
        [AttributeLogicalName("incomingemailstatus")]
        [DisplayName("Incoming Email Status")]
        public Mailbox_IncomingEmailStatus? IncomingEmailStatus {
            get {
                return GetOptionSetValue<Mailbox_IncomingEmailStatus>("incomingemailstatus");
            }
            set {
                SetOptionSetValue("incomingemailstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Set the current organization as the synchronization organization.</para>
        /// <para>Display Name: Set Current Organization as Synchronization Organization</para>
        /// </summary>
        [AttributeLogicalName("isactsyncorgflagset")]
        [DisplayName("Set Current Organization as Synchronization Organization")]
        public bool? IsACTSyncOrgFlagSet {
            get {
                return GetAttributeValue<bool?>("isactsyncorgflagset");
            }
            set {
                SetAttributeValue("isactsyncorgflagset", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
            set {
                SetAttributeValue("isemailaddressapprovedbyo365admin", value);
            }
        }
        
        /// <summary>
        /// <para>Is Exchange Contacts Import Scheduled.</para>
        /// <para>Display Name: Is Exchange Contacts Import Scheduled.</para>
        /// </summary>
        [AttributeLogicalName("isexchangecontactsimportscheduled")]
        [DisplayName("Is Exchange Contacts Import Scheduled.")]
        public bool? IsExchangeContactsImportScheduled {
            get {
                return GetAttributeValue<bool?>("isexchangecontactsimportscheduled");
            }
        }
        
        /// <summary>
        /// <para>Select whether the mailbox is a forward mailbox.</para>
        /// <para>Display Name: Is Forward Mailbox</para>
        /// </summary>
        [AttributeLogicalName("isforwardmailbox")]
        [DisplayName("Is Forward Mailbox")]
        public bool? IsForwardMailbox {
            get {
                return GetAttributeValue<bool?>("isforwardmailbox");
            }
        }
        
        [AttributeLogicalName("isoauthaccesstokenset")]
        public bool? IsOauthAccessTokenSet {
            get {
                return GetAttributeValue<bool?>("isoauthaccesstokenset");
            }
        }
        
        [AttributeLogicalName("isoauthrefreshtokenset")]
        public bool? IsOauthRefreshTokenSet {
            get {
                return GetAttributeValue<bool?>("isoauthrefreshtokenset");
            }
        }
        
        [AttributeLogicalName("ispasswordset")]
        public bool? IsPasswordSet {
            get {
                return GetAttributeValue<bool?>("ispasswordset");
            }
        }
        
        /// <summary>
        /// <para>Select whether the mailbox corresponds to one for the service account.</para>
        /// <para>Display Name: Is Service Account</para>
        /// </summary>
        [AttributeLogicalName("isserviceaccount")]
        [DisplayName("Is Service Account")]
        public bool? IsServiceAccount {
            get {
                return GetAttributeValue<bool?>("isserviceaccount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Items Failed For Last Sync</para>
        /// </summary>
        [AttributeLogicalName("itemsfailedforlastsync")]
        [DisplayName("Items Failed For Last Sync")]
        [Range(0, 2147483647)]
        public int? ItemsFailedForLastSync {
            get {
                return GetAttributeValue<int?>("itemsfailedforlastsync");
            }
            set {
                SetAttributeValue("itemsfailedforlastsync", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Items Processed For Last Sync</para>
        /// </summary>
        [AttributeLogicalName("itemsprocessedforlastsync")]
        [DisplayName("Items Processed For Last Sync")]
        [Range(0, 2147483647)]
        public int? ItemsProcessedForLastSync {
            get {
                return GetAttributeValue<int?>("itemsprocessedforlastsync");
            }
            set {
                SetAttributeValue("itemsprocessedforlastsync", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the Exchange web services URL was last discovered using the AutoDiscover service.</para>
        /// <para>Display Name: Last Auto Discovered On</para>
        /// </summary>
        [AttributeLogicalName("lastautodiscoveredon")]
        [DisplayName("Last Auto Discovered On")]
        public DateTime? LastAutoDiscoveredOn {
            get {
                return GetAttributeValue<DateTime?>("lastautodiscoveredon");
            }
            set {
                SetAttributeValue("lastautodiscoveredon", value);
            }
        }
        
        /// <summary>
        /// <para>Last Duration for the mailbox</para>
        /// <para>Display Name: Monitor last duration Performance</para>
        /// </summary>
        [AttributeLogicalName("lastduration")]
        [DisplayName("Monitor last duration Performance")]
        [Range(-1, 2147483647)]
        public int? LastDuration {
            get {
                return GetAttributeValue<int?>("lastduration");
            }
        }
        
        /// <summary>
        /// <para>The timestamp when last set of incoming emails were requested from external email server. For internal use only.</para>
        /// <para>Display Name: Last Incoming Emails Requested From Email Server On</para>
        /// </summary>
        [AttributeLogicalName("lastincomingemailsrequestedfromemailserveron")]
        [DisplayName("Last Incoming Emails Requested From Email Server On")]
        public DateTime? LastIncomingEmailsRequestedFromEmailServerOn {
            get {
                return GetAttributeValue<DateTime?>("lastincomingemailsrequestedfromemailserveron");
            }
            set {
                SetAttributeValue("lastincomingemailsrequestedfromemailserveron", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Date Time when a mailbox got forced unlocked</para>
        /// </summary>
        [AttributeLogicalName("lastmailboxforcedunlockoccurredon")]
        [DisplayName("Last Date Time when a mailbox got forced unlocked")]
        public DateTime? LastMailboxForcedUnlockOccurredOn {
            get {
                return GetAttributeValue<DateTime?>("lastmailboxforcedunlockoccurredon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the last message.</para>
        /// <para>Display Name: Last Message ID</para>
        /// </summary>
        [AttributeLogicalName("lastmessageid")]
        [DisplayName("Last Message ID")]
        [MaxLength(320)]
        public string LastMessageId {
            get {
                return GetAttributeValue<string>("lastmessageid");
            }
            set {
                SetAttributeValue("lastmessageid", value);
            }
        }
        
        /// <summary>
        /// <para>Last Successful Sync Time</para>
        /// <para>Display Name: Last Successful Sync Time</para>
        /// </summary>
        [AttributeLogicalName("lastsuccessfulsynccompletedon")]
        [DisplayName("Last Successful Sync Time")]
        public DateTime? LastSuccessfulSyncCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("lastsuccessfulsynccompletedon");
            }
            set {
                SetAttributeValue("lastsuccessfulsynccompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Stack</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerror")]
        [DisplayName("Last Sync Error Stack")]
        [MaxLength(2048)]
        public string LastSyncError {
            get {
                return GetAttributeValue<string>("lastsyncerror");
            }
            set {
                SetAttributeValue("lastsyncerror", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Code</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrorcode")]
        [DisplayName("Last Sync Error Code")]
        [Range(-2147483648, 2147483647)]
        public int? LastSyncErrorCode {
            get {
                return GetAttributeValue<int?>("lastsyncerrorcode");
            }
            set {
                SetAttributeValue("lastsyncerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only</para>
        /// <para>Display Name: Last Sync Error Continuous Count</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrorcount")]
        [DisplayName("Last Sync Error Continuous Count")]
        [Range(0, 2147483647)]
        public int? LastSyncErrorCount {
            get {
                return GetAttributeValue<int?>("lastsyncerrorcount");
            }
            set {
                SetAttributeValue("lastsyncerrorcount", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Machine Name</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerrormachinename")]
        [DisplayName("Last Sync Error Machine Name")]
        [MaxLength(320)]
        public string LastSyncErrorMachineName {
            get {
                return GetAttributeValue<string>("lastsyncerrormachinename");
            }
            set {
                SetAttributeValue("lastsyncerrormachinename", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Last Sync Error Time</para>
        /// </summary>
        [AttributeLogicalName("lastsyncerroroccurredon")]
        [DisplayName("Last Sync Error Time")]
        public DateTime? LastSyncErrorOccurredOn {
            get {
                return GetAttributeValue<DateTime?>("lastsyncerroroccurredon");
            }
            set {
                SetAttributeValue("lastsyncerroroccurredon", value);
            }
        }
        
        /// <summary>
        /// <para>Last Sync Start Time</para>
        /// <para>Display Name: Last Sync Start Time</para>
        /// </summary>
        [AttributeLogicalName("lastsyncstartedon")]
        [DisplayName("Last Sync Start Time")]
        public DateTime? LastSyncStartedOn {
            get {
                return GetAttributeValue<DateTime?>("lastsyncstartedon");
            }
        }
        
        /// <summary>
        /// <para>Identifies the timestamp when tagging last completed. For internal use only.</para>
        /// <para>Display Name: Last Tag Completed On</para>
        /// </summary>
        [AttributeLogicalName("lasttagcompletedon")]
        [DisplayName("Last Tag Completed On")]
        public DateTime? LastTagCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("lasttagcompletedon");
            }
            set {
                SetAttributeValue("lasttagcompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the last tagging cycle processed the maximum number of items. For internal use only.</para>
        /// <para>Display Name: Last Tag Processed Max Items</para>
        /// </summary>
        [AttributeLogicalName("lasttagprocessedmaxitems")]
        [DisplayName("Last Tag Processed Max Items")]
        public bool? LastTagProcessedMaxItems {
            get {
                return GetAttributeValue<bool?>("lasttagprocessedmaxitems");
            }
            set {
                SetAttributeValue("lasttagprocessedmaxitems", value);
            }
        }
        
        /// <summary>
        /// <para>Identifies the last MessageId that has been processed for tagging in the remote system.</para>
        /// <para>Display Name: Last Tagged MessageId</para>
        /// </summary>
        [AttributeLogicalName("lasttaggedmessageid")]
        [DisplayName("Last Tagged MessageId")]
        [MaxLength(320)]
        public string LastTaggedMessageId {
            get {
                return GetAttributeValue<string>("lasttaggedmessageid");
            }
            set {
                SetAttributeValue("lasttaggedmessageid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Processing Context of the Mailbox</para>
        /// </summary>
        [AttributeLogicalName("mailboxprocessingcontext")]
        [DisplayName("Processing Context of the Mailbox")]
        [Range(0, 2147483647)]
        public int? MailboxProcessingContext {
            get {
                return GetAttributeValue<int?>("mailboxprocessingcontext");
            }
            set {
                SetAttributeValue("mailboxprocessingcontext", value);
            }
        }
        
        /// <summary>
        /// <para>Last Sync Status for Outgoing, Incoming and ACT as a whole.</para>
        /// <para>Display Name: Mailbox Status</para>
        /// </summary>
        [AttributeLogicalName("mailboxstatus")]
        [DisplayName("Mailbox Status")]
        public Mailbox_MailboxStatus? MailboxStatus {
            get {
                return GetOptionSetValue<Mailbox_MailboxStatus>("mailboxstatus");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type the name of the mailbox.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>The next scheduled ACT sync delay, in seconds, to apply to the mailbox.</para>
        /// <para>Display Name: Next Scheduled ACT Sync Delay In Seconds</para>
        /// </summary>
        [AttributeLogicalName("nextscheduledactsyncinseconds")]
        [DisplayName("Next Scheduled ACT Sync Delay In Seconds")]
        [Range(0, 2147483647)]
        public int? NextScheduledACTSyncInSeconds {
            get {
                return GetAttributeValue<int?>("nextscheduledactsyncinseconds");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Zero appointment, contact, task count for mailbox</para>
        /// </summary>
        [AttributeLogicalName("noactcount")]
        [DisplayName("Zero appointment, contact, task count for mailbox")]
        [Range(0, 2147483647)]
        public int? NoACTCount {
            get {
                return GetAttributeValue<int?>("noactcount");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Zero email count for mailbox</para>
        /// </summary>
        [AttributeLogicalName("noemailcount")]
        [DisplayName("Zero email count for mailbox")]
        [Range(0, 2147483647)]
        public int? NoEmailCount {
            get {
                return GetAttributeValue<int?>("noemailcount");
            }
        }
        
        /// <summary>
        /// <para>Type the Oauth access token for the mailbox.</para>
        /// <para>Display Name: Oauth access token</para>
        /// </summary>
        [AttributeLogicalName("oauthaccesstoken")]
        [DisplayName("Oauth access token")]
        [MaxLength(1024)]
        public string OauthAccessToken {
            get {
                return GetAttributeValue<string>("oauthaccesstoken");
            }
            set {
                SetAttributeValue("oauthaccesstoken", value);
            }
        }
        
        /// <summary>
        /// <para>Type the Oauth refresh token for the mailbox.</para>
        /// <para>Display Name: Oauth refresh token</para>
        /// </summary>
        [AttributeLogicalName("oauthrefreshtoken")]
        [DisplayName("Oauth refresh token")]
        [MaxLength(256)]
        public string OauthRefreshToken {
            get {
                return GetAttributeValue<string>("oauthrefreshtoken");
            }
            set {
                SetAttributeValue("oauthrefreshtoken", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the Oauth token will expire</para>
        /// <para>Display Name: Oauth token expiration datetime</para>
        /// </summary>
        [AttributeLogicalName("oauthtokenexpireson")]
        [DisplayName("Oauth token expiration datetime")]
        public DateTime? OauthTokenExpiresOn {
            get {
                return GetAttributeValue<DateTime?>("oauthtokenexpireson");
            }
            set {
                SetAttributeValue("oauthtokenexpireson", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the last office apps deployment was completed for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Completed On</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentcompleteon")]
        [DisplayName("Office Apps Deployment Completed On")]
        public DateTime? OfficeAppsDeploymentCompleteOn {
            get {
                return GetAttributeValue<DateTime?>("officeappsdeploymentcompleteon");
            }
        }
        
        /// <summary>
        /// <para>The Office Apps deployment error.</para>
        /// <para>Display Name: Office Apps Deployment Error</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymenterror")]
        [DisplayName("Office Apps Deployment Error")]
        [MaxLength(2048)]
        public string OfficeAppsDeploymentError {
            get {
                return GetAttributeValue<string>("officeappsdeploymenterror");
            }
        }
        
        /// <summary>
        /// <para>Indicates if the office apps deployment has been scheduled for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Scheduled</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentscheduled")]
        [DisplayName("Office Apps Deployment Scheduled")]
        public bool? OfficeAppsDeploymentScheduled {
            get {
                return GetAttributeValue<bool?>("officeappsdeploymentscheduled");
            }
            set {
                SetAttributeValue("officeappsdeploymentscheduled", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the office apps deployment type for a mailbox record.</para>
        /// <para>Display Name: Office Apps Deployment Type</para>
        /// </summary>
        [AttributeLogicalName("officeappsdeploymentstatus")]
        [DisplayName("Office Apps Deployment Type")]
        public Mailbox_OfficeAppsDeploymentStatus? OfficeAppsDeploymentStatus {
            get {
                return GetOptionSetValue<Mailbox_OfficeAppsDeploymentStatus>("officeappsdeploymentstatus");
            }
            set {
                SetOptionSetValue("officeappsdeploymentstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the crm org is to be marked as primary syncing org for the mailbox record.</para>
        /// <para>Display Name: Crm Org Marked as Primary Org for Exchange Mailbox</para>
        /// </summary>
        [AttributeLogicalName("orgmarkedasprimaryforexchangesync")]
        [DisplayName("Crm Org Marked as Primary Org for Exchange Mailbox")]
        public bool? OrgMarkedAsPrimaryForExchangeSync {
            get {
                return GetAttributeValue<bool?>("orgmarkedasprimaryforexchangesync");
            }
            set {
                SetAttributeValue("orgmarkedasprimaryforexchangesync", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the record.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Select how outgoing email will be sent from the mailbox.</para>
        /// <para>Display Name: Outgoing Email</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email")]
        public Mailbox_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Mailbox_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Select the status of outgoing email messages.</para>
        /// <para>Display Name: Outgoing Email Status</para>
        /// </summary>
        [AttributeLogicalName("outgoingemailstatus")]
        [DisplayName("Outgoing Email Status")]
        public Mailbox_OutgoingEmailStatus? OutgoingEmailStatus {
            get {
                return GetOptionSetValue<Mailbox_OutgoingEmailStatus>("outgoingemailstatus");
            }
            set {
                SetOptionSetValue("outgoingemailstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the business unit that owns the record.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the password for the mailbox.</para>
        /// <para>Display Name: Password</para>
        /// </summary>
        [AttributeLogicalName("password")]
        [DisplayName("Password")]
        [MaxLength(200)]
        public string Password {
            get {
                return GetAttributeValue<string>("password");
            }
            set {
                SetAttributeValue("password", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when processing will begin on this mailbox.</para>
        /// <para>Display Name: Postpone Mailbox Processing Until</para>
        /// </summary>
        [AttributeLogicalName("postponemailboxprocessinguntil")]
        [DisplayName("Postpone Mailbox Processing Until")]
        public DateTime? PostponeMailboxProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponemailboxprocessinguntil");
            }
            set {
                SetAttributeValue("postponemailboxprocessinguntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the next outlook mail app install will be run for a mailbox record.</para>
        /// <para>Display Name: Postpone Outlook Mail App Install Until</para>
        /// </summary>
        [AttributeLogicalName("postponeofficeappsdeploymentuntil")]
        [DisplayName("Postpone Outlook Mail App Install Until")]
        public DateTime? PostponeOfficeAppsDeploymentUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeofficeappsdeploymentuntil");
            }
            set {
                SetAttributeValue("postponeofficeappsdeploymentuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the mailbox can start sending emails.</para>
        /// <para>Display Name: Postpone Sending Until</para>
        /// </summary>
        [AttributeLogicalName("postponesendinguntil")]
        [DisplayName("Postpone Sending Until")]
        public DateTime? PostponeSendingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponesendinguntil");
            }
            set {
                SetAttributeValue("postponesendinguntil", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the next email configuration test will be run for a mailbox record.</para>
        /// <para>Display Name: Postpone Test Email Configuration Until</para>
        /// </summary>
        [AttributeLogicalName("postponetestemailconfigurationuntil")]
        [DisplayName("Postpone Test Email Configuration Until")]
        public DateTime? PostponeTestEmailConfigurationUntil {
            get {
                return GetAttributeValue<DateTime?>("postponetestemailconfigurationuntil");
            }
            set {
                SetAttributeValue("postponetestemailconfigurationuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Type the name of the mailbox.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether to delete emails from the mailbox after processing.</para>
        /// <para>Display Name: Delete Emails after Processing</para>
        /// </summary>
        [AttributeLogicalName("processanddeleteemails")]
        [DisplayName("Delete Emails after Processing")]
        public bool? ProcessAndDeleteEmails {
            get {
                return GetAttributeValue<bool?>("processanddeleteemails");
            }
            set {
                SetAttributeValue("processanddeleteemails", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time to start processing email received by the mailbox.</para>
        /// <para>Display Name: Process Email Received After</para>
        /// </summary>
        [AttributeLogicalName("processemailreceivedafter")]
        [DisplayName("Process Email Received After")]
        public DateTime? ProcessEmailReceivedAfter {
            get {
                return GetAttributeValue<DateTime?>("processemailreceivedafter");
            }
            set {
                SetAttributeValue("processemailreceivedafter", value);
            }
        }
        
        /// <summary>
        /// <para>The number of times mailbox has processed</para>
        /// <para>Display Name: Monitor Performance</para>
        /// </summary>
        [AttributeLogicalName("processedtimes")]
        [DisplayName("Monitor Performance")]
        [Range(-1, 2147483647)]
        public int? ProcessedTimes {
            get {
                return GetAttributeValue<int?>("processedtimes");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the processing of the mailbox was last attempted.</para>
        /// <para>Display Name: Date Processing Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("processinglastattemptedon")]
        [DisplayName("Date Processing Last Attempted")]
        public DateTime? ProcessingLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("processinglastattemptedon");
            }
            set {
                SetAttributeValue("processinglastattemptedon", value);
            }
        }
        
        /// <summary>
        /// <para>Information that indicates whether email will be processed for this mailbox</para>
        /// <para>Display Name: Mailbox Processing State</para>
        /// </summary>
        [AttributeLogicalName("processingstatecode")]
        [DisplayName("Mailbox Processing State")]
        [Range(0, 2147483647)]
        public int? ProcessingStateCode {
            get {
                return GetAttributeValue<int?>("processingstatecode");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Postpone receiving emails for the mailbox until the specified data and time.</para>
        /// </summary>
        [AttributeLogicalName("receivingpostponeduntil")]
        [DisplayName("Postpone receiving emails for the mailbox until the specified data and time.")]
        public DateTime? ReceivingPostponedUntil {
            get {
                return GetAttributeValue<DateTime?>("receivingpostponeduntil");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Postpone processing Appointments, Contacts, and Tasks for the mailbox until the specified data and time.</para>
        /// </summary>
        [AttributeLogicalName("receivingpostponeduntilforact")]
        [DisplayName("Postpone processing Appointments, Contacts, and Tasks for the mailbox until the s" +
            "pecified data and time.")]
        public DateTime? ReceivingPostponedUntilForACT {
            get {
                return GetAttributeValue<DateTime?>("receivingpostponeduntilforact");
            }
        }
        
        /// <summary>
        /// <para>Choose the user associated to the mailbox.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
        }
        
        /// <summary>
        /// <para>Shows whether the mailbox is active or inactive.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public MailboxState? StateCode {
            get {
                return GetOptionSetValue<MailboxState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Mailbox_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Mailbox_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Identifies the timestamp after for which emails should be tagged in the remote system.</para>
        /// <para>Display Name: Tag Emails After</para>
        /// </summary>
        [AttributeLogicalName("tagemailsafter")]
        [DisplayName("Tag Emails After")]
        public DateTime? TagEmailsAfter {
            get {
                return GetAttributeValue<DateTime?>("tagemailsafter");
            }
            set {
                SetAttributeValue("tagemailsafter", value);
            }
        }
        
        /// <summary>
        /// <para>The user who last attempted to Test and Enable the mailbox.</para>
        /// <para>Display Name: Test and Enable Last Attempted By</para>
        /// </summary>
        [AttributeLogicalName("testandenablelastattemptedby")]
        [DisplayName("Test and Enable Last Attempted By")]
        public EntityReference TestAndEnableLastAttemptedBy {
            get {
                return GetAttributeValue<EntityReference>("testandenablelastattemptedby");
            }
        }
        
        /// <summary>
        /// <para>The date and time of the last test and enable attempt.</para>
        /// <para>Display Name: Test and Enable Last Attempted On</para>
        /// </summary>
        [AttributeLogicalName("testandenablelastattemptedon")]
        [DisplayName("Test and Enable Last Attempted On")]
        public DateTime? TestAndEnableLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("testandenablelastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Shows the number of times an email configuration test has been performed.</para>
        /// <para>Display Name: Test Email Configuration Retry Count</para>
        /// </summary>
        [AttributeLogicalName("testemailconfigurationretrycount")]
        [DisplayName("Test Email Configuration Retry Count")]
        [Range(0, 2147483647)]
        public int? TestEmailConfigurationRetryCount {
            get {
                return GetAttributeValue<int?>("testemailconfigurationretrycount");
            }
            set {
                SetAttributeValue("testemailconfigurationretrycount", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if the email configuration test has been scheduled for a mailbox record.</para>
        /// <para>Display Name: Test Email Configuration Scheduled</para>
        /// </summary>
        [AttributeLogicalName("testemailconfigurationscheduled")]
        [DisplayName("Test Email Configuration Scheduled")]
        public bool? TestEmailConfigurationScheduled {
            get {
                return GetAttributeValue<bool?>("testemailconfigurationscheduled");
            }
            set {
                SetAttributeValue("testemailconfigurationscheduled", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the last email configuration test was completed for a mailbox record.</para>
        /// <para>Display Name: Mailbox Test Completed On</para>
        /// </summary>
        [AttributeLogicalName("testmailboxaccesscompletedon")]
        [DisplayName("Mailbox Test Completed On")]
        public DateTime? TestMailboxAccessCompletedOn {
            get {
                return GetAttributeValue<DateTime?>("testmailboxaccesscompletedon");
            }
            set {
                SetAttributeValue("testmailboxaccesscompletedon", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Concatenation of transient failure counts of all mailbox operations.</para>
        /// <para>Display Name: Transient Failure Count</para>
        /// </summary>
        [AttributeLogicalName("transientfailurecount")]
        [DisplayName("Transient Failure Count")]
        [Range(0, 2147483647)]
        public int? TransientFailureCount {
            get {
                return GetAttributeValue<int?>("transientfailurecount");
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the Undeliverable folder in the mailbox managed by Microsoft Exchange.</para>
        /// <para>Display Name: Undeliverable Folder</para>
        /// </summary>
        [AttributeLogicalName("undeliverablefolder")]
        [DisplayName("Undeliverable Folder")]
        [MaxLength(256)]
        public string UndeliverableFolder {
            get {
                return GetAttributeValue<string>("undeliverablefolder");
            }
            set {
                SetAttributeValue("undeliverablefolder", value);
            }
        }
        
        /// <summary>
        /// <para>Type a user name used for mailbox authentication.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("username")]
        [DisplayName("User Name")]
        [MaxLength(200)]
        public string Username {
            get {
                return GetAttributeValue<string>("username");
            }
            set {
                SetAttributeValue("username", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates if verbose tracing needs to be enabled for this mailbox.</para>
        /// <para>Display Name: Verbose Logging</para>
        /// </summary>
        [AttributeLogicalName("verboseloggingenabled")]
        [DisplayName("Verbose Logging")]
        [Range(0, 100)]
        public int? VerboseLoggingEnabled {
            get {
                return GetAttributeValue<int?>("verboseloggingenabled");
            }
            set {
                SetAttributeValue("verboseloggingenabled", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the mailbox.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [RelationshipSchemaName("Mailbox_Annotation")]
        public IEnumerable<Annotation> Mailbox_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Mailbox_Annotation", null);
            }
            set {
                SetRelatedEntities("Mailbox_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("activitypointer_sendermailboxid_mailbox")]
        public IEnumerable<ActivityPointer> activitypointer_sendermailboxid_mailbox {
            get {
                return GetRelatedEntities<ActivityPointer>("activitypointer_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntities("activitypointer_sendermailboxid_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_mailbox")]
        public BusinessUnit business_unit_mailbox {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_mailbox", null);
            }
            set {
                SetRelatedEntity("business_unit_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("email_sendermailboxid_mailbox")]
        public IEnumerable<Email> email_sendermailboxid_mailbox {
            get {
                return GetRelatedEntities<Email>("email_sendermailboxid_mailbox", null);
            }
            set {
                SetRelatedEntities("email_sendermailboxid_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_mailbox_sendermailboxid")]
        public IEnumerable<ff_casenote> ff_casenote_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("ff_casenote_mailbox_sendermailboxid", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_receivingmailbox_mailbox")]
        public IEnumerable<Email> ff_email_receivingmailbox_mailbox {
            get {
                return GetRelatedEntities<Email>("ff_email_receivingmailbox_mailbox", null);
            }
            set {
                SetRelatedEntities("ff_email_receivingmailbox_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_mailbox_sendermailboxid")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_mailbox_sendermailboxid", null, value);
            }
        }
        
        [RelationshipSchemaName("incidentresolution_mailbox_sendermailboxid")]
        public IEnumerable<IncidentResolution> incidentresolution_mailbox_sendermailboxid {
            get {
                return GetRelatedEntities<IncidentResolution>("incidentresolution_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntities("incidentresolution_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_mailbox_createdby")]
        public SystemUser lk_mailbox_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_createdby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_mailbox_createdonbehalfby")]
        public SystemUser lk_mailbox_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_mailbox_modifiedby")]
        public SystemUser lk_mailbox_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_mailbox_modifiedonbehalfby")]
        public SystemUser lk_mailbox_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_mailbox_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_mailbox_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_email_ReceivingMailboxId")]
        public IEnumerable<Email> mailbox_email_ReceivingMailboxId {
            get {
                return GetRelatedEntities<Email>("mailbox_email_ReceivingMailboxId", null);
            }
            set {
                SetRelatedEntities("mailbox_email_ReceivingMailboxId", null, value);
            }
        }
        
        [AttributeLogicalName("emailaddressapprovedby")]
        [RelationshipSchemaName("mailbox_emailaddressapprovedby_systemuser")]
        public SystemUser mailbox_emailaddressapprovedby_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("mailbox_emailaddressapprovedby_systemuser", null);
            }
            set {
                SetRelatedEntity("mailbox_emailaddressapprovedby_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("mailbox_regarding_queue")]
        public Queue mailbox_regarding_queue {
            get {
                return GetRelatedEntity<Queue>("mailbox_regarding_queue", null);
            }
            set {
                SetRelatedEntity("mailbox_regarding_queue", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("mailbox_regarding_systemuser")]
        public SystemUser mailbox_regarding_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("mailbox_regarding_systemuser", null);
            }
            set {
                SetRelatedEntity("mailbox_regarding_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("testandenablelastattemptedby")]
        [RelationshipSchemaName("mailbox_testandenablelastattemptedby_systemuser")]
        public SystemUser mailbox_testandenablelastattemptedby_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("mailbox_testandenablelastattemptedby_systemuser", null);
            }
            set {
                SetRelatedEntity("mailbox_testandenablelastattemptedby_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_defaultmailbox_mailbox")]
        public IEnumerable<Queue> queue_defaultmailbox_mailbox {
            get {
                return GetRelatedEntities<Queue>("queue_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntities("queue_defaultmailbox_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("systemuser_defaultmailbox_mailbox")]
        public IEnumerable<SystemUser> systemuser_defaultmailbox_mailbox {
            get {
                return GetRelatedEntities<SystemUser>("systemuser_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntities("systemuser_defaultmailbox_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_mailbox")]
        public Team team_mailbox {
            get {
                return GetRelatedEntity<Team>("team_mailbox", null);
            }
            set {
                SetRelatedEntity("team_mailbox", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_mailbox")]
        public SystemUser user_mailbox {
            get {
                return GetRelatedEntity<SystemUser>("user_mailbox", null);
            }
            set {
                SetRelatedEntity("user_mailbox", null, value);
            }
        }
        
        public static Mailbox Retrieve(IOrganizationService service, Guid id, params Expression<Func<Mailbox,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Potential revenue-generating event, or sale to an account, which needs to be tracked through a sales process to completion.</para>
    /// <para>Display Name: Opportunity</para>
    /// </summary>
    [EntityLogicalName("opportunity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Opportunity : ExtendedEntity<OpportunityState, Opportunity_StatusCode> {
        
        public const string EntityLogicalName = "opportunity";
        
        public const int EntityTypeCode = 3;
        
        public Opportunity() : 
                base(EntityLogicalName) {
        }
        
        public Opportunity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("opportunityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the opportunity.</para>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("opportunityid")]
        [DisplayName("Opportunity")]
        public Guid? OpportunityId {
            get {
                return GetAttributeValue<Guid?>("opportunityid");
            }
            set {
                SetId("opportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Internal attribute for storing customerid. Do not use this attribute directly; use parentaccountid instead.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("accountid")]
        [DisplayName("Account")]
        public EntityReference AccountId {
            get {
                return GetAttributeValue<EntityReference>("accountid");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the opportunity was closed or canceled.</para>
        /// <para>Display Name: Actual Close Date</para>
        /// </summary>
        [AttributeLogicalName("actualclosedate")]
        [DisplayName("Actual Close Date")]
        public DateTime? ActualCloseDate {
            get {
                return GetAttributeValue<DateTime?>("actualclosedate");
            }
            set {
                SetAttributeValue("actualclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the actual revenue amount for the opportunity for reporting and analysis of estimated versus actual sales. Field defaults to the Est. Revenue value when an opportunity is won.</para>
        /// <para>Display Name: Actual Revenue</para>
        /// </summary>
        [AttributeLogicalName("actualvalue")]
        [DisplayName("Actual Revenue")]
        public decimal? ActualValue {
            get {
                return GetMoneyValue("actualvalue");
            }
            set {
                SetMoneyValue("actualvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Actual Revenue in base currency.</para>
        /// <para>Display Name: Actual Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("actualvalue_base")]
        [DisplayName("Actual Revenue (Base)")]
        public decimal? ActualValue_Base {
            get {
                return GetMoneyValue("actualvalue_base");
            }
        }
        
        /// <summary>
        /// <para>Type a value between 0 and 1,000,000,000,000 to indicate the lead's potential available budget.</para>
        /// <para>Display Name: Budget amount</para>
        /// </summary>
        [AttributeLogicalName("budgetamount")]
        [DisplayName("Budget amount")]
        public decimal? BudgetAmount {
            get {
                return GetMoneyValue("budgetamount");
            }
            set {
                SetMoneyValue("budgetamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Budget Amount in base currency.</para>
        /// <para>Display Name: Budget Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("budgetamount_base")]
        [DisplayName("Budget Amount (Base)")]
        public decimal? BudgetAmount_Base {
            get {
                return GetMoneyValue("budgetamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select the likely budget status for the lead's company. This may help determine the lead rating or your sales approach.</para>
        /// <para>Display Name: Budget</para>
        /// </summary>
        [AttributeLogicalName("budgetstatus")]
        [DisplayName("Budget")]
        public budgetstatus? BudgetStatus {
            get {
                return GetOptionSetValue<budgetstatus>("budgetstatus");
            }
            set {
                SetOptionSetValue("budgetstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Viser den kampagne, som salgsmuligheden er oprettet ud fra. Id'et bruges til at spore kampagnens succes.</para>
        /// <para>Display Name: Campaign</para>
        /// </summary>
        [AttributeLogicalName("campaignid")]
        [DisplayName("Campaign")]
        public EntityReference CampaignId {
            get {
                return GetAttributeValue<EntityReference>("campaignid");
            }
            set {
                SetAttributeValue("campaignid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the proposal feedback has been captured for the opportunity.</para>
        /// <para>Display Name: Proposal Feedback Captured</para>
        /// </summary>
        [AttributeLogicalName("captureproposalfeedback")]
        [DisplayName("Proposal Feedback Captured")]
        public bool? CaptureProposalFeedback {
            get {
                return GetAttributeValue<bool?>("captureproposalfeedback");
            }
            set {
                SetAttributeValue("captureproposalfeedback", value);
            }
        }
        
        /// <summary>
        /// <para>Type a number from 0 to 100 that represents the likelihood of closing the opportunity. This can aid the sales team in their efforts to convert the opportunity in a sale.</para>
        /// <para>Display Name: Probability</para>
        /// </summary>
        [AttributeLogicalName("closeprobability")]
        [DisplayName("Probability")]
        [Range(0, 100)]
        public int? CloseProbability {
            get {
                return GetAttributeValue<int?>("closeprobability");
            }
            set {
                SetAttributeValue("closeprobability", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a final proposal has been completed for the opportunity.</para>
        /// <para>Display Name: Final Proposal Ready</para>
        /// </summary>
        [AttributeLogicalName("completefinalproposal")]
        [DisplayName("Final Proposal Ready")]
        public bool? CompleteFinalProposal {
            get {
                return GetAttributeValue<bool?>("completefinalproposal");
            }
            set {
                SetAttributeValue("completefinalproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether an internal review has been completed for this opportunity.</para>
        /// <para>Display Name: Complete Internal Review</para>
        /// </summary>
        [AttributeLogicalName("completeinternalreview")]
        [DisplayName("Complete Internal Review")]
        public bool? CompleteInternalReview {
            get {
                return GetAttributeValue<bool?>("completeinternalreview");
            }
            set {
                SetAttributeValue("completeinternalreview", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the lead confirmed interest in your offerings. This helps in determining the lead quality and the probability of it turning into an opportunity.</para>
        /// <para>Display Name: Confirm Interest</para>
        /// </summary>
        [AttributeLogicalName("confirminterest")]
        [DisplayName("Confirm Interest")]
        public bool? ConfirmInterest {
            get {
                return GetAttributeValue<bool?>("confirminterest");
            }
            set {
                SetAttributeValue("confirminterest", value);
            }
        }
        
        /// <summary>
        /// <para>Internal attribute for storing customerid. Do not use this attribute directly; use parentcontactid instead.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("contactid")]
        [DisplayName("Contact")]
        public EntityReference ContactId {
            get {
                return GetAttributeValue<EntityReference>("contactid");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type notes about the company or organization associated with the opportunity.</para>
        /// <para>Display Name: Current Situation</para>
        /// </summary>
        [AttributeLogicalName("currentsituation")]
        [DisplayName("Current Situation")]
        public string CurrentSituation {
            get {
                return GetAttributeValue<string>("currentsituation");
            }
            set {
                SetAttributeValue("currentsituation", value);
            }
        }
        
        /// <summary>
        /// <para>Select the customer account or contact to provide a quick link to additional customer details, such as address, phone number, activities, and orders.</para>
        /// <para>Display Name: Potential Customer</para>
        /// </summary>
        [AttributeLogicalName("customerid")]
        [DisplayName("Potential Customer")]
        public EntityReference CustomerId {
            get {
                return GetAttributeValue<EntityReference>("customerid");
            }
            set {
                SetAttributeValue("customerid", value);
            }
        }
        
        /// <summary>
        /// <para>Type some notes about the customer's requirements, to help the sales team identify products and services that could meet their requirements.</para>
        /// <para>Display Name: Customer Need</para>
        /// </summary>
        [AttributeLogicalName("customerneed")]
        [DisplayName("Customer Need")]
        public string CustomerNeed {
            get {
                return GetAttributeValue<string>("customerneed");
            }
            set {
                SetAttributeValue("customerneed", value);
            }
        }
        
        /// <summary>
        /// <para>Type notes about the customer's pain points to help the sales team identify products and services that could address these pain points.</para>
        /// <para>Display Name: Customer Pain Points</para>
        /// </summary>
        [AttributeLogicalName("customerpainpoints")]
        [DisplayName("Customer Pain Points")]
        public string CustomerPainPoints {
            get {
                return GetAttributeValue<string>("customerpainpoints");
            }
            set {
                SetAttributeValue("customerpainpoints", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether your notes include information about who makes the purchase decisions at the lead's company.</para>
        /// <para>Display Name: Decision Maker?</para>
        /// </summary>
        [AttributeLogicalName("decisionmaker")]
        [DisplayName("Decision Maker?")]
        public bool? DecisionMaker {
            get {
                return GetAttributeValue<bool?>("decisionmaker");
            }
            set {
                SetAttributeValue("decisionmaker", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the opportunity, such as possible products to sell or past purchases from the customer.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a proposal has been developed for the opportunity.</para>
        /// <para>Display Name: Develop Proposal</para>
        /// </summary>
        [AttributeLogicalName("developproposal")]
        [DisplayName("Develop Proposal")]
        public bool? DevelopProposal {
            get {
                return GetAttributeValue<bool?>("developproposal");
            }
            set {
                SetAttributeValue("developproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Type the discount amount for the opportunity if the customer is eligible for special savings.</para>
        /// <para>Display Name: Opportunity Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("discountamount")]
        [DisplayName("Opportunity Discount Amount")]
        public decimal? DiscountAmount {
            get {
                return GetMoneyValue("discountamount");
            }
            set {
                SetMoneyValue("discountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Opportunity Discount Amount in base currency.</para>
        /// <para>Display Name: Opportunity Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("discountamount_base")]
        [DisplayName("Opportunity Discount Amount (Base)")]
        public decimal? DiscountAmount_Base {
            get {
                return GetMoneyValue("discountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Type the discount rate that should be applied to the Product Totals field to include additional savings for the customer in the opportunity.</para>
        /// <para>Display Name: Opportunity Discount (%)</para>
        /// </summary>
        [AttributeLogicalName("discountpercentage")]
        [DisplayName("Opportunity Discount (%)")]
        public decimal? DiscountPercentage {
            get {
                return GetAttributeValue<decimal?>("discountpercentage");
            }
            set {
                SetAttributeValue("discountpercentage", value);
            }
        }
        
        /// <summary>
        /// <para>The primary email address for the entity.</para>
        /// <para>Display Name: Email Address</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email Address")]
        [MaxLength(100)]
        public string EmailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected closing date of the opportunity to help make accurate revenue forecasts.</para>
        /// <para>Display Name: Est. close date</para>
        /// </summary>
        [AttributeLogicalName("estimatedclosedate")]
        [DisplayName("Est. close date")]
        public DateTime? EstimatedCloseDate {
            get {
                return GetAttributeValue<DateTime?>("estimatedclosedate");
            }
            set {
                SetAttributeValue("estimatedclosedate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the estimated revenue amount to indicate the potential sale or value of the opportunity for revenue forecasting. This field can be either system-populated or editable based on the selection in the Revenue field.</para>
        /// <para>Display Name: Est. revenue</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue")]
        [DisplayName("Est. revenue")]
        public decimal? EstimatedValue {
            get {
                return GetMoneyValue("estimatedvalue");
            }
            set {
                SetMoneyValue("estimatedvalue", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Est. Revenue in base currency.</para>
        /// <para>Display Name: Est. Revenue (Base)</para>
        /// </summary>
        [AttributeLogicalName("estimatedvalue_base")]
        [DisplayName("Est. Revenue (Base)")]
        public decimal? EstimatedValue_Base {
            get {
                return GetMoneyValue("estimatedvalue_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether the fit between the lead's requirements and your offerings was evaluated.</para>
        /// <para>Display Name: Evaluate Fit</para>
        /// </summary>
        [AttributeLogicalName("evaluatefit")]
        [DisplayName("Evaluate Fit")]
        public bool? EvaluateFit {
            get {
                return GetAttributeValue<bool?>("evaluatefit");
            }
            set {
                SetAttributeValue("evaluatefit", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Choose whether the sales team has recorded detailed notes on the proposals and the account's responses.</para>
        /// <para>Display Name: File Debrief</para>
        /// </summary>
        [AttributeLogicalName("filedebrief")]
        [DisplayName("File Debrief")]
        public bool? FileDebrief {
            get {
                return GetAttributeValue<bool?>("filedebrief");
            }
            set {
                SetAttributeValue("filedebrief", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time when the final decision of the opportunity was made.</para>
        /// <para>Display Name: Final Decision Date</para>
        /// </summary>
        [AttributeLogicalName("finaldecisiondate")]
        [DisplayName("Final Decision Date")]
        public DateTime? FinalDecisionDate {
            get {
                return GetAttributeValue<DateTime?>("finaldecisiondate");
            }
            set {
                SetAttributeValue("finaldecisiondate", value);
            }
        }
        
        /// <summary>
        /// <para>Type the cost of freight or shipping for the products included in the opportunity for use in calculating the Total Amount field.</para>
        /// <para>Display Name: Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("freightamount")]
        [DisplayName("Freight Amount")]
        public decimal? FreightAmount {
            get {
                return GetMoneyValue("freightamount");
            }
            set {
                SetMoneyValue("freightamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Freight Amount in base currency.</para>
        /// <para>Display Name: Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("freightamount_base")]
        [DisplayName("Freight Amount (Base)")]
        public decimal? FreightAmount_Base {
            get {
                return GetMoneyValue("freightamount_base");
            }
        }
        
        /// <summary>
        /// <para>Select whether information about competitors is included.</para>
        /// <para>Display Name: Identify Competitors</para>
        /// </summary>
        [AttributeLogicalName("identifycompetitors")]
        [DisplayName("Identify Competitors")]
        public bool? IdentifyCompetitors {
            get {
                return GetAttributeValue<bool?>("identifycompetitors");
            }
            set {
                SetAttributeValue("identifycompetitors", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the customer contacts for this opportunity have been identified.</para>
        /// <para>Display Name: Identify Customer Contacts</para>
        /// </summary>
        [AttributeLogicalName("identifycustomercontacts")]
        [DisplayName("Identify Customer Contacts")]
        public bool? IdentifyCustomerContacts {
            get {
                return GetAttributeValue<bool?>("identifycustomercontacts");
            }
            set {
                SetAttributeValue("identifycustomercontacts", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether you have recorded who will pursue the opportunity.</para>
        /// <para>Display Name: Identify Sales Team</para>
        /// </summary>
        [AttributeLogicalName("identifypursuitteam")]
        [DisplayName("Identify Sales Team")]
        public bool? IdentifyPursuitTeam {
            get {
                return GetAttributeValue<bool?>("identifypursuitteam");
            }
            set {
                SetAttributeValue("identifypursuitteam", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether someone from the sales team contacted this lead earlier.</para>
        /// <para>Display Name: Initial Communication</para>
        /// </summary>
        [AttributeLogicalName("initialcommunication")]
        [DisplayName("Initial Communication")]
        public initialcommunication? InitialCommunication {
            get {
                return GetOptionSetValue<initialcommunication>("initialcommunication");
            }
            set {
                SetOptionSetValue("initialcommunication", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the estimated revenue for the opportunity is calculated automatically based on the products entered or entered manually by a user.</para>
        /// <para>Display Name: Revenue</para>
        /// </summary>
        [AttributeLogicalName("isrevenuesystemcalculated")]
        [DisplayName("Revenue")]
        public bool? IsRevenueSystemCalculated {
            get {
                return GetAttributeValue<bool?>("isrevenuesystemcalculated");
            }
            set {
                SetAttributeValue("isrevenuesystemcalculated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv et emne eller beskrivende navn, f.eks. den forventede ordre eller firmanavnet, for salgsmuligheden.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Subject")]
        [MaxLength(300)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how high the level of need is for the lead's company.</para>
        /// <para>Display Name: Need</para>
        /// </summary>
        [AttributeLogicalName("need")]
        [DisplayName("Need")]
        public need? Need {
            get {
                return GetOptionSetValue<need>("need");
            }
            set {
                SetOptionSetValue("need", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the duration in minutes for which the opportunity was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Select the expected value or priority of the opportunity based on revenue, customer status, or closing probability.</para>
        /// <para>Display Name: Rating</para>
        /// </summary>
        [AttributeLogicalName("opportunityratingcode")]
        [DisplayName("Rating")]
        public Opportunity_OpportunityRatingCode? OpportunityRatingCode {
            get {
                return GetOptionSetValue<Opportunity_OpportunityRatingCode>("opportunityratingcode");
            }
            set {
                SetOptionSetValue("opportunityratingcode", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the lead that the opportunity was created from for reporting and analytics. The field is read-only after the opportunity is created and defaults to the correct lead when an opportunity is created from a converted lead.</para>
        /// <para>Display Name: Originating Lead</para>
        /// </summary>
        [AttributeLogicalName("originatingleadid")]
        [DisplayName("Originating Lead")]
        public EntityReference OriginatingLeadId {
            get {
                return GetAttributeValue<EntityReference>("originatingleadid");
            }
            set {
                SetAttributeValue("originatingleadid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Choose an account to connect this opportunity to, so that the relationship is visible in reports and analytics, and to provide a quick link to additional details, such as financial information and activities.</para>
        /// <para>Display Name: Account</para>
        /// </summary>
        [AttributeLogicalName("parentaccountid")]
        [DisplayName("Account")]
        public EntityReference ParentAccountId {
            get {
                return GetAttributeValue<EntityReference>("parentaccountid");
            }
            set {
                SetAttributeValue("parentaccountid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose a contact to connect this opportunity to, so that the relationship is visible in reports and analytics.</para>
        /// <para>Display Name: Contact</para>
        /// </summary>
        [AttributeLogicalName("parentcontactid")]
        [DisplayName("Contact")]
        public EntityReference ParentContactId {
            get {
                return GetAttributeValue<EntityReference>("parentcontactid");
            }
            set {
                SetAttributeValue("parentcontactid", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the opportunity participates in workflow rules.</para>
        /// <para>Display Name: Participates in Workflow</para>
        /// </summary>
        [AttributeLogicalName("participatesinworkflow")]
        [DisplayName("Participates in Workflow")]
        public bool? ParticipatesInWorkflow {
            get {
                return GetAttributeValue<bool?>("participatesinworkflow");
            }
            set {
                SetAttributeValue("participatesinworkflow", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the final proposal has been presented to the account.</para>
        /// <para>Display Name: Present Final Proposal</para>
        /// </summary>
        [AttributeLogicalName("presentfinalproposal")]
        [DisplayName("Present Final Proposal")]
        public bool? PresentFinalProposal {
            get {
                return GetAttributeValue<bool?>("presentfinalproposal");
            }
            set {
                SetAttributeValue("presentfinalproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a proposal for the opportunity has been presented to the account.</para>
        /// <para>Display Name: Presented Proposal</para>
        /// </summary>
        [AttributeLogicalName("presentproposal")]
        [DisplayName("Presented Proposal")]
        public bool? PresentProposal {
            get {
                return GetAttributeValue<bool?>("presentproposal");
            }
            set {
                SetAttributeValue("presentproposal", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the price list associated with this record to make sure the products associated with the campaign are offered at the correct prices.</para>
        /// <para>Display Name: Price List</para>
        /// </summary>
        [AttributeLogicalName("pricelevelid")]
        [DisplayName("Price List")]
        public EntityReference PriceLevelId {
            get {
                return GetAttributeValue<EntityReference>("pricelevelid");
            }
            set {
                SetAttributeValue("pricelevelid", value);
            }
        }
        
        /// <summary>
        /// <para>Pricing error for the opportunity.</para>
        /// <para>Display Name: Pricing Error </para>
        /// </summary>
        [AttributeLogicalName("pricingerrorcode")]
        [DisplayName("Pricing Error ")]
        public qooi_pricingerrorcode? PricingErrorCode {
            get {
                return GetOptionSetValue<qooi_pricingerrorcode>("pricingerrorcode");
            }
            set {
                SetOptionSetValue("pricingerrorcode", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv et emne eller beskrivende navn, f.eks. den forventede ordre eller firmanavnet, for salgsmuligheden.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Subject")]
        [MaxLength(300)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Opportunity_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Opportunity_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the process associated with the entity.</para>
        /// <para>Display Name: Process Id</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process Id")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Type notes about the proposed solution for the opportunity.</para>
        /// <para>Display Name: Proposed Solution</para>
        /// </summary>
        [AttributeLogicalName("proposedsolution")]
        [DisplayName("Proposed Solution")]
        public string ProposedSolution {
            get {
                return GetAttributeValue<string>("proposedsolution");
            }
            set {
                SetAttributeValue("proposedsolution", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether an individual or a committee will be involved in the  purchase process for the lead.</para>
        /// <para>Display Name: Purchase Process</para>
        /// </summary>
        [AttributeLogicalName("purchaseprocess")]
        [DisplayName("Purchase Process")]
        public purchaseprocess? PurchaseProcess {
            get {
                return GetOptionSetValue<purchaseprocess>("purchaseprocess");
            }
            set {
                SetOptionSetValue("purchaseprocess", value);
            }
        }
        
        /// <summary>
        /// <para>Choose how long the lead will likely take to make the purchase.</para>
        /// <para>Display Name: Purchase Timeframe</para>
        /// </summary>
        [AttributeLogicalName("purchasetimeframe")]
        [DisplayName("Purchase Timeframe")]
        public purchasetimeframe? PurchaseTimeframe {
            get {
                return GetOptionSetValue<purchasetimeframe>("purchasetimeframe");
            }
            set {
                SetOptionSetValue("purchasetimeframe", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the decision about pursuing the opportunity has been made.</para>
        /// <para>Display Name: Decide Go/No-Go</para>
        /// </summary>
        [AttributeLogicalName("pursuitdecision")]
        [DisplayName("Decide Go/No-Go")]
        public bool? PursuitDecision {
            get {
                return GetAttributeValue<bool?>("pursuitdecision");
            }
            set {
                SetAttributeValue("pursuitdecision", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the qualification or scoring of the lead.</para>
        /// <para>Display Name: Qualification Comments</para>
        /// </summary>
        [AttributeLogicalName("qualificationcomments")]
        [DisplayName("Qualification Comments")]
        public string QualificationComments {
            get {
                return GetAttributeValue<string>("qualificationcomments");
            }
            set {
                SetAttributeValue("qualificationcomments", value);
            }
        }
        
        /// <summary>
        /// <para>Type comments about the quotes associated with the opportunity.</para>
        /// <para>Display Name: Quote Comments</para>
        /// </summary>
        [AttributeLogicalName("quotecomments")]
        [DisplayName("Quote Comments")]
        public string QuoteComments {
            get {
                return GetAttributeValue<string>("quotecomments");
            }
            set {
                SetAttributeValue("quotecomments", value);
            }
        }
        
        /// <summary>
        /// <para>Choose whether the proposal feedback has been captured and resolved for the opportunity.</para>
        /// <para>Display Name: Feedback Resolved</para>
        /// </summary>
        [AttributeLogicalName("resolvefeedback")]
        [DisplayName("Feedback Resolved")]
        public bool? ResolveFeedback {
            get {
                return GetAttributeValue<bool?>("resolvefeedback");
            }
            set {
                SetAttributeValue("resolvefeedback", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the opportunity record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this opportunity. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Select the sales stage of this opportunity to aid the sales team in their efforts to win this opportunity.</para>
        /// <para>Display Name: Sales Stage</para>
        /// </summary>
        [AttributeLogicalName("salesstage")]
        [DisplayName("Sales Stage")]
        public opportunity_salesstage? SalesStage {
            get {
                return GetOptionSetValue<opportunity_salesstage>("salesstage");
            }
            set {
                SetOptionSetValue("salesstage", value);
            }
        }
        
        /// <summary>
        /// <para>Select the sales process stage for the opportunity to indicate the probability of closing the opportunity.</para>
        /// <para>Display Name: Process Code</para>
        /// </summary>
        [AttributeLogicalName("salesstagecode")]
        [DisplayName("Process Code")]
        public Opportunity_SalesStageCode? SalesStageCode {
            get {
                return GetOptionSetValue<Opportunity_SalesStageCode>("salesstagecode");
            }
            set {
                SetOptionSetValue("salesstagecode", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the prospecting follow-up meeting with the lead.</para>
        /// <para>Display Name: Scheduled Follow up (Prospect)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_prospect")]
        [DisplayName("Scheduled Follow up (Prospect)")]
        public DateTime? ScheduleFollowup_Prospect {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_prospect");
            }
            set {
                SetAttributeValue("schedulefollowup_prospect", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the qualifying follow-up meeting with the lead.</para>
        /// <para>Display Name: Scheduled Follow up (Qualify)</para>
        /// </summary>
        [AttributeLogicalName("schedulefollowup_qualify")]
        [DisplayName("Scheduled Follow up (Qualify)")]
        public DateTime? ScheduleFollowup_Qualify {
            get {
                return GetAttributeValue<DateTime?>("schedulefollowup_qualify");
            }
            set {
                SetAttributeValue("schedulefollowup_qualify", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the date and time of the proposal meeting for the opportunity.</para>
        /// <para>Display Name: Schedule Proposal Meeting</para>
        /// </summary>
        [AttributeLogicalName("scheduleproposalmeeting")]
        [DisplayName("Schedule Proposal Meeting")]
        public DateTime? ScheduleProposalMeeting {
            get {
                return GetAttributeValue<DateTime?>("scheduleproposalmeeting");
            }
            set {
                SetAttributeValue("scheduleproposalmeeting", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a thank you note has been sent to the account for considering the proposal.</para>
        /// <para>Display Name: Send Thank You Note</para>
        /// </summary>
        [AttributeLogicalName("sendthankyounote")]
        [DisplayName("Send Thank You Note")]
        public bool? SendThankYouNote {
            get {
                return GetAttributeValue<bool?>("sendthankyounote");
            }
            set {
                SetAttributeValue("sendthankyounote", value);
            }
        }
        
        /// <summary>
        /// <para>Skip Price Calculation (For Internal Use)</para>
        /// <para>Display Name: Skip Price Calculation</para>
        /// </summary>
        [AttributeLogicalName("skippricecalculation")]
        [DisplayName("Skip Price Calculation")]
        public qooi_skippricecalculation? SkipPriceCalculation {
            get {
                return GetOptionSetValue<qooi_skippricecalculation>("skippricecalculation");
            }
            set {
                SetOptionSetValue("skippricecalculation", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the id of the stage where the entity is located.</para>
        /// <para>Display Name: (Deprecated) Stage Id</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Stage Id")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the opportunity is open, won, or lost. Won and lost opportunities are read-only and can't be edited until they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public OpportunityState? StateCode {
            get {
                return GetOptionSetValue<OpportunityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Årsag til statussen for {0}</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public Opportunity_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Opportunity_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the workflow step.</para>
        /// <para>Display Name: Step</para>
        /// </summary>
        [AttributeLogicalName("stepid")]
        [DisplayName("Step")]
        public Guid? StepId {
            get {
                return GetAttributeValue<Guid?>("stepid");
            }
            set {
                SetAttributeValue("stepid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the current phase in the sales pipeline for the opportunity. </para>
        /// <para>Display Name: Pipeline Phase</para>
        /// </summary>
        [AttributeLogicalName("stepname")]
        [DisplayName("Pipeline Phase")]
        [MaxLength(200)]
        public string StepName {
            get {
                return GetAttributeValue<string>("stepname");
            }
            set {
                SetAttributeValue("stepname", value);
            }
        }
        
        /// <summary>
        /// <para>Number of users or conversations followed the record</para>
        /// <para>Display Name: TeamsFollowed</para>
        /// </summary>
        [AttributeLogicalName("teamsfollowed")]
        [DisplayName("TeamsFollowed")]
        [Range(-2147483648, 2147483647)]
        public int? TeamsFollowed {
            get {
                return GetAttributeValue<int?>("teamsfollowed");
            }
            set {
                SetAttributeValue("teamsfollowed", value);
            }
        }
        
        /// <summary>
        /// <para>Select when the opportunity is likely to be closed.</para>
        /// <para>Display Name: Timeline</para>
        /// </summary>
        [AttributeLogicalName("timeline")]
        [DisplayName("Timeline")]
        public Opportunity_TimeLine? TimeLine {
            get {
                return GetOptionSetValue<Opportunity_TimeLine>("timeline");
            }
            set {
                SetOptionSetValue("timeline", value);
            }
        }
        
        /// <summary>
        /// <para>Total time spent for emails (read and write) and meetings by me in relation to the opportunity record.</para>
        /// <para>Display Name: Time Spent by me</para>
        /// </summary>
        [AttributeLogicalName("timespentbymeonemailandmeetings")]
        [DisplayName("Time Spent by me")]
        [MaxLength(1250)]
        public string TimeSpentByMeOnEmailAndMeetings {
            get {
                return GetAttributeValue<string>("timespentbymeonemailandmeetings");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total amount due, calculated as the sum of the products, discounts, freight, and taxes for the opportunity.</para>
        /// <para>Display Name: Total Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamount")]
        [DisplayName("Total Amount")]
        public decimal? TotalAmount {
            get {
                return GetMoneyValue("totalamount");
            }
            set {
                SetMoneyValue("totalamount", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the total product amount for the opportunity, minus any discounts. This value is added to freight and tax amounts in the calculation for the total amount of the opportunity.</para>
        /// <para>Display Name: Total Pre-Freight Amount</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight")]
        [DisplayName("Total Pre-Freight Amount")]
        public decimal? TotalAmountLessFreight {
            get {
                return GetMoneyValue("totalamountlessfreight");
            }
            set {
                SetMoneyValue("totalamountlessfreight", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Pre-Freight Amount in base currency.</para>
        /// <para>Display Name: Total Pre-Freight Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamountlessfreight_base")]
        [DisplayName("Total Pre-Freight Amount (Base)")]
        public decimal? TotalAmountLessFreight_Base {
            get {
                return GetMoneyValue("totalamountlessfreight_base");
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Amount in base currency.</para>
        /// <para>Display Name: Total Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totalamount_base")]
        [DisplayName("Total Amount (Base)")]
        public decimal? TotalAmount_Base {
            get {
                return GetMoneyValue("totalamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total discount amount, based on the discount price and rate entered on the opportunity.</para>
        /// <para>Display Name: Total Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount")]
        [DisplayName("Total Discount Amount")]
        public decimal? TotalDiscountAmount {
            get {
                return GetMoneyValue("totaldiscountamount");
            }
            set {
                SetMoneyValue("totaldiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Discount Amount in base currency.</para>
        /// <para>Display Name: Total Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaldiscountamount_base")]
        [DisplayName("Total Discount Amount (Base)")]
        public decimal? TotalDiscountAmount_Base {
            get {
                return GetMoneyValue("totaldiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the sum of all existing and write-in products included on the opportunity, based on the specified price list and quantities.</para>
        /// <para>Display Name: Total Detail Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount")]
        [DisplayName("Total Detail Amount")]
        public decimal? TotalLineItemAmount {
            get {
                return GetMoneyValue("totallineitemamount");
            }
            set {
                SetMoneyValue("totallineitemamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Detail Amount in base currency.</para>
        /// <para>Display Name: Total Detail Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemamount_base")]
        [DisplayName("Total Detail Amount (Base)")]
        public decimal? TotalLineItemAmount_Base {
            get {
                return GetMoneyValue("totallineitemamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Manual Discount amounts specified on all products included in the opportunity. This value is reflected in the Total Detail Amount field on the opportunity and is added to any discount amount or rate specified on the opportunity.</para>
        /// <para>Display Name: Total Line Item Discount Amount</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount")]
        [DisplayName("Total Line Item Discount Amount")]
        public decimal? TotalLineItemDiscountAmount {
            get {
                return GetMoneyValue("totallineitemdiscountamount");
            }
            set {
                SetMoneyValue("totallineitemdiscountamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Line Item Discount Amount in base currency.</para>
        /// <para>Display Name: Total Line Item Discount Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("totallineitemdiscountamount_base")]
        [DisplayName("Total Line Item Discount Amount (Base)")]
        public decimal? TotalLineItemDiscountAmount_Base {
            get {
                return GetMoneyValue("totallineitemdiscountamount_base");
            }
        }
        
        /// <summary>
        /// <para>Shows the total of the Tax amounts specified on all products included in the opportunity, included in the Total Amount field calculation for the opportunity.</para>
        /// <para>Display Name: Total Tax</para>
        /// </summary>
        [AttributeLogicalName("totaltax")]
        [DisplayName("Total Tax")]
        public decimal? TotalTax {
            get {
                return GetMoneyValue("totaltax");
            }
            set {
                SetMoneyValue("totaltax", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Total Tax in base currency.</para>
        /// <para>Display Name: Total Tax (Base)</para>
        /// </summary>
        [AttributeLogicalName("totaltax_base")]
        [DisplayName("Total Tax (Base)")]
        public decimal? TotalTax_Base {
            get {
                return GetMoneyValue("totaltax_base");
            }
        }
        
        /// <summary>
        /// <para>Entydigt id for den valuta, der er tilknyttet objektet.</para>
        /// <para>Display Name: Valuta</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Valuta")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>[Deprecated -  28/4-25 - bruges ikke mere] Denne URL er sat på baggrund af det potentielle medlemsparamenter og anvendes dertil at prefill felter på Indmeldelsesblanketten på FF's hjemmeside</para>
        /// <para>Display Name: ZZ_URL for enrollment</para>
        /// </summary>
        [AttributeLogicalName("ff_urlforenrollment")]
        [DisplayName("ZZ_URL for enrollment")]
        [MaxLength(2000)]
        [ObsoleteAttribute()]
        public string ff_URLforenrollment {
            get {
                return GetAttributeValue<string>("ff_urlforenrollment");
            }
            set {
                SetAttributeValue("ff_urlforenrollment", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaignactivity</para>
        /// </summary>
        [AttributeLogicalName("ff_campaignactivity")]
        [DisplayName("Campaignactivity")]
        public EntityReference ff_campaignactivity {
            get {
                return GetAttributeValue<EntityReference>("ff_campaignactivity");
            }
            set {
                SetAttributeValue("ff_campaignactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Company</para>
        /// </summary>
        [AttributeLogicalName("ff_company")]
        [DisplayName("Company")]
        [MaxLength(200)]
        public string ff_company {
            get {
                return GetAttributeValue<string>("ff_company");
            }
            set {
                SetAttributeValue("ff_company", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 24/4-25. Bruges ikke af iframe mere. Dette er et skyggefelt</para>
        /// <para>Display Name: ZZ_Complete Enrollment</para>
        /// </summary>
        [AttributeLogicalName("ff_completeenrollment")]
        [DisplayName("ZZ_Complete Enrollment")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_completeenrollment {
            get {
                return GetAttributeValue<string>("ff_completeenrollment");
            }
            set {
                SetAttributeValue("ff_completeenrollment", value);
            }
        }
        
        /// <summary>
        /// <para>Vælg type for at få den rigtige blanket ved indmeldelse. Hvis tom vises knap til indmeldelse ikke. Lokalt optionsæt da globalt ikke virkede.</para>
        /// <para>Display Name: Jobsituation</para>
        /// </summary>
        [AttributeLogicalName("ff_enrollmenttype")]
        [DisplayName("Jobsituation")]
        public Opportunity_ff_enrollmenttype? ff_enrollmenttype {
            get {
                return GetOptionSetValue<Opportunity_ff_enrollmenttype>("ff_enrollmenttype");
            }
            set {
                SetOptionSetValue("ff_enrollmenttype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Follow-up Date</para>
        /// </summary>
        [AttributeLogicalName("ff_followupdate")]
        [DisplayName("Follow-up Date")]
        public DateTime? ff_followupdate {
            get {
                return GetAttributeValue<DateTime?>("ff_followupdate");
            }
            set {
                SetAttributeValue("ff_followupdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gavekort</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcard")]
        [DisplayName("Gavekort")]
        public EntityReference ff_giftcard {
            get {
                return GetAttributeValue<EntityReference>("ff_giftcard");
            }
            set {
                SetAttributeValue("ff_giftcard", value);
            }
        }
        
        /// <summary>
        /// <para>Dato udfyldes eller opdateres afhænging af et Lead's Kildekampagne hvor salgscoren er højere</para>
        /// <para>Display Name: Interaction Date</para>
        /// </summary>
        [AttributeLogicalName("ff_interactiondate")]
        [DisplayName("Interaction Date")]
        public DateTime? ff_interactiondate {
            get {
                return GetAttributeValue<DateTime?>("ff_interactiondate");
            }
            set {
                SetAttributeValue("ff_interactiondate", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 6/5-25 - brug lokalt da vi ikke syncer værdi over på kontakt] Vælg jobsituation for det potentielle medlem. værdien styrer visning af Meld in knap og blanket der hentes.</para>
        /// <para>Display Name: ZZ_Jobsituation</para>
        /// </summary>
        [AttributeLogicalName("ff_jobsituation")]
        [DisplayName("ZZ_Jobsituation")]
        [ObsoleteAttribute()]
        public ff_jobsituation? ff_jobsituation {
            get {
                return GetOptionSetValue<ff_jobsituation>("ff_jobsituation");
            }
            set {
                SetOptionSetValue("ff_jobsituation", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Jobtitle</para>
        /// </summary>
        [AttributeLogicalName("ff_jobtitle")]
        [DisplayName("Jobtitle")]
        [MaxLength(1000)]
        public string ff_jobtitle {
            get {
                return GetAttributeValue<string>("ff_jobtitle");
            }
            set {
                SetAttributeValue("ff_jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Deprecated 24/4-25. Bruges ikke af iframe mere. Anvendes til at melde et potentiel medlem ind</para>
        /// <para>Display Name: ZZ_Membership Type</para>
        /// </summary>
        [AttributeLogicalName("ff_membershiptype")]
        [DisplayName("ZZ_Membership Type")]
        [ObsoleteAttribute()]
        public Opportunity_ff_membershiptype? ff_membershiptype {
            get {
                return GetOptionSetValue<Opportunity_ff_membershiptype>("ff_membershiptype");
            }
            set {
                SetOptionSetValue("ff_membershiptype", value);
            }
        }
        
        /// <summary>
        /// <para>CPR nummer fra kontaktpersonen. Autoudfyldes.</para>
        /// <para>Display Name: CPR</para>
        /// </summary>
        [AttributeLogicalName("ff_personalidentificationnumber")]
        [DisplayName("CPR")]
        [MaxLength(4000)]
        public string ff_personalidentificationnumber {
            get {
                return GetAttributeValue<string>("ff_personalidentificationnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Studiested</para>
        /// </summary>
        [AttributeLogicalName("ff_placeofstudy")]
        [DisplayName("Studiested")]
        [MaxLength(1000)]
        public string ff_placeofstudy {
            get {
                return GetAttributeValue<string>("ff_placeofstudy");
            }
            set {
                SetAttributeValue("ff_placeofstudy", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fortrukken Sprog</para>
        /// </summary>
        [AttributeLogicalName("ff_preferredlanguage")]
        [DisplayName("Fortrukken Sprog")]
        public bool? ff_preferredlanguage {
            get {
                return GetAttributeValue<bool?>("ff_preferredlanguage");
            }
            set {
                SetAttributeValue("ff_preferredlanguage", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Referrer</para>
        /// </summary>
        [AttributeLogicalName("ff_referrer")]
        [DisplayName("Referrer")]
        public EntityReference ff_referrer {
            get {
                return GetAttributeValue<EntityReference>("ff_referrer");
            }
            set {
                SetAttributeValue("ff_referrer", value);
            }
        }
        
        /// <summary>
        /// <para>Salgsscorens vurderes på baggrund af den relateret kampagne og udfra en scala på 1-10, hvor 10 er højest.</para>
        /// <para>Display Name: Salesscore</para>
        /// </summary>
        [AttributeLogicalName("ff_salesscore")]
        [DisplayName("Salesscore")]
        [Range(1, 10)]
        public int? ff_salesscore {
            get {
                return GetAttributeValue<int?>("ff_salesscore");
            }
            set {
                SetAttributeValue("ff_salesscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Specified Industry</para>
        /// </summary>
        [AttributeLogicalName("ff_specifiedindustry")]
        [DisplayName("Specified Industry")]
        [MaxLength(1000)]
        public string ff_specifiedindustry {
            get {
                return GetAttributeValue<string>("ff_specifiedindustry");
            }
            set {
                SetAttributeValue("ff_specifiedindustry", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Studieretning</para>
        /// </summary>
        [AttributeLogicalName("ff_studyprogram")]
        [DisplayName("Studieretning")]
        [MaxLength(1000)]
        public string ff_studyprogram {
            get {
                return GetAttributeValue<string>("ff_studyprogram");
            }
            set {
                SetAttributeValue("ff_studyprogram", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 30/5-25: Bruges ikke mere]</para>
        /// <para>Display Name: ZZ_Business Phone</para>
        /// </summary>
        [AttributeLogicalName("ff_telephone1")]
        [DisplayName("ZZ_Business Phone")]
        [MaxLength(50)]
        [ObsoleteAttribute()]
        public string ff_telephone1 {
            get {
                return GetAttributeValue<string>("ff_telephone1");
            }
            set {
                SetAttributeValue("ff_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Grade</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunitygrade")]
        [DisplayName("(Deprecated) Opportunity Grade")]
        public msdyn_opportunitygradeoptset? msdyn_OpportunityGrade {
            get {
                return GetOptionSetValue<msdyn_opportunitygradeoptset>("msdyn_opportunitygrade");
            }
            set {
                SetOptionSetValue("msdyn_opportunitygrade", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunityscore")]
        [DisplayName("(Deprecated) Opportunity Score")]
        [Range(-2147483648, 2147483647)]
        public int? msdyn_OpportunityScore {
            get {
                return GetAttributeValue<int?>("msdyn_opportunityscore");
            }
            set {
                SetAttributeValue("msdyn_opportunityscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Opportunity Score Trend</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunityscoretrend")]
        [DisplayName("(Deprecated) Opportunity Score Trend")]
        public msdyn_opportunityscoretrendoptset? msdyn_OpportunityScoreTrend {
            get {
                return GetOptionSetValue<msdyn_opportunityscoretrendoptset>("msdyn_opportunityscoretrend");
            }
            set {
                SetOptionSetValue("msdyn_opportunityscoretrend", value);
            }
        }
        
        /// <summary>
        /// <para>Predictive score</para>
        /// <para>Display Name: Predictive Score</para>
        /// </summary>
        [AttributeLogicalName("msdyn_predictivescoreid")]
        [DisplayName("Predictive Score")]
        public EntityReference msdyn_PredictiveScoreId {
            get {
                return GetAttributeValue<EntityReference>("msdyn_predictivescoreid");
            }
            set {
                SetAttributeValue("msdyn_predictivescoreid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score History</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorehistory")]
        [DisplayName("(Deprecated) Score History")]
        public string msdyn_ScoreHistory {
            get {
                return GetAttributeValue<string>("msdyn_scorehistory");
            }
            set {
                SetAttributeValue("msdyn_scorehistory", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: (Deprecated) Score Reasons</para>
        /// </summary>
        [AttributeLogicalName("msdyn_scorereasons")]
        [DisplayName("(Deprecated) Score Reasons")]
        public string msdyn_ScoreReasons {
            get {
                return GetAttributeValue<string>("msdyn_scorereasons");
            }
            set {
                SetAttributeValue("msdyn_scorereasons", value);
            }
        }
        
        /// <summary>
        /// <para>Categories used for forecasting.</para>
        /// <para>Display Name: Forecast category</para>
        /// </summary>
        [AttributeLogicalName("msdyn_forecastcategory")]
        [DisplayName("Forecast category")]
        public Opportunity_msdyn_forecastcategory? msdyn_forecastcategory {
            get {
                return GetOptionSetValue<Opportunity_msdyn_forecastcategory>("msdyn_forecastcategory");
            }
            set {
                SetOptionSetValue("msdyn_forecastcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether opportunity is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Maps to opportunity KPI records</para>
        /// <para>Display Name: KPI</para>
        /// </summary>
        [AttributeLogicalName("msdyn_opportunitykpiid")]
        [DisplayName("KPI")]
        public EntityReference msdyn_opportunitykpiid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_opportunitykpiid");
            }
            set {
                SetAttributeValue("msdyn_opportunitykpiid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Segment associated with Opportunity.</para>
        /// <para>Display Name: Segment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_segmentid")]
        [DisplayName("Segment Id")]
        public EntityReference msdyn_segmentid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_segmentid");
            }
            set {
                SetAttributeValue("msdyn_segmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: msdyn_similaropportunities</para>
        /// </summary>
        [AttributeLogicalName("msdyn_similaropportunities")]
        [DisplayName("msdyn_similaropportunities")]
        public string msdyn_similaropportunities {
            get {
                return GetAttributeValue<string>("msdyn_similaropportunities");
            }
            set {
                SetAttributeValue("msdyn_similaropportunities", value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_ActivityPointers")]
        public IEnumerable<ActivityPointer> Opportunity_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("Opportunity_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("Opportunity_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Annotation")]
        public IEnumerable<Annotation> Opportunity_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Opportunity_Annotation", null);
            }
            set {
                SetRelatedEntities("Opportunity_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Appointments")]
        public IEnumerable<Appointment> Opportunity_Appointments {
            get {
                return GetRelatedEntities<Appointment>("Opportunity_Appointments", null);
            }
            set {
                SetRelatedEntities("Opportunity_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Emails")]
        public IEnumerable<Email> Opportunity_Emails {
            get {
                return GetRelatedEntities<Email>("Opportunity_Emails", null);
            }
            set {
                SetRelatedEntities("Opportunity_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Phonecalls")]
        public IEnumerable<PhoneCall> Opportunity_Phonecalls {
            get {
                return GetRelatedEntities<PhoneCall>("Opportunity_Phonecalls", null);
            }
            set {
                SetRelatedEntities("Opportunity_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("Opportunity_Tasks")]
        public IEnumerable<Task> Opportunity_Tasks {
            get {
                return GetRelatedEntities<Task>("Opportunity_Tasks", null);
            }
            set {
                SetRelatedEntities("Opportunity_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_opportunities")]
        public BusinessUnit business_unit_opportunities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_opportunities", null);
            }
            set {
                SetRelatedEntity("business_unit_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_awardgiftcard_opportunity_opportunity")]
        public IEnumerable<ff_awardgiftcard> ff_awardgiftcard_opportunity_opportunity {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("ff_awardgiftcard_opportunity_opportunity", null);
            }
            set {
                SetRelatedEntities("ff_awardgiftcard_opportunity_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_closedopportunity_opportunity")]
        public IEnumerable<Email> ff_email_closedopportunity_opportunity {
            get {
                return GetRelatedEntities<Email>("ff_email_closedopportunity_opportunity", null);
            }
            set {
                SetRelatedEntities("ff_email_closedopportunity_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("ff_giftcard")]
        [RelationshipSchemaName("ff_opportunity_giftcard_ff_giftcard")]
        public ff_giftcard ff_opportunity_giftcard_ff_giftcard {
            get {
                return GetRelatedEntity<ff_giftcard>("ff_opportunity_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("ff_opportunity_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_referrer")]
        [RelationshipSchemaName("ff_opportunity_referrer_contact")]
        public Contact ff_opportunity_referrer_contact {
            get {
                return GetRelatedEntity<Contact>("ff_opportunity_referrer_contact", null);
            }
            set {
                SetRelatedEntity("ff_opportunity_referrer_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_reportingofopportunity_opportunity_opportunity")]
        public IEnumerable<ff_reportingofopportunity> ff_reportingofopportunity_opportunity_opportunity {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("ff_reportingofopportunity_opportunity_opportunity", null);
            }
            set {
                SetRelatedEntities("ff_reportingofopportunity_opportunity_opportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_qualifying_opportunity")]
        public IEnumerable<Lead> lead_qualifying_opportunity {
            get {
                return GetRelatedEntities<Lead>("lead_qualifying_opportunity", null);
            }
            set {
                SetRelatedEntities("lead_qualifying_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
        public SystemUser lk_opportunity_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunity_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
        public SystemUser lk_opportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_opportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_opportunitybase_createdby")]
        public SystemUser lk_opportunitybase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitybase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitybase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
        public SystemUser lk_opportunitybase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_opportunitybase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_opportunitybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_Teams")]
        public IEnumerable<Team> opportunity_Teams {
            get {
                return GetRelatedEntities<Team>("opportunity_Teams", null);
            }
            set {
                SetRelatedEntities("opportunity_Teams", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_activity_parties")]
        public IEnumerable<ActivityParty> opportunity_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("opportunity_activity_parties", null);
            }
            set {
                SetRelatedEntities("opportunity_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("opportunity_customer_accounts")]
        public Account opportunity_customer_accounts {
            get {
                return GetRelatedEntity<Account>("opportunity_customer_accounts", null);
            }
            set {
                SetRelatedEntity("opportunity_customer_accounts", null, value);
            }
        }
        
        [AttributeLogicalName("customerid")]
        [RelationshipSchemaName("opportunity_customer_contacts")]
        public Contact opportunity_customer_contacts {
            get {
                return GetRelatedEntity<Contact>("opportunity_customer_contacts", null);
            }
            set {
                SetRelatedEntity("opportunity_customer_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_ff_casenotes")]
        public IEnumerable<ff_casenote> opportunity_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("opportunity_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("opportunity_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> opportunity_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("opportunity_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("opportunity_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("originatingleadid")]
        [RelationshipSchemaName("opportunity_originating_lead")]
        public Lead opportunity_originating_lead {
            get {
                return GetRelatedEntity<Lead>("opportunity_originating_lead", null);
            }
            set {
                SetRelatedEntity("opportunity_originating_lead", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("opportunity_owning_user")]
        public SystemUser opportunity_owning_user {
            get {
                return GetRelatedEntity<SystemUser>("opportunity_owning_user", null);
            }
            set {
                SetRelatedEntity("opportunity_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("parentaccountid")]
        [RelationshipSchemaName("opportunity_parent_account")]
        public Account opportunity_parent_account {
            get {
                return GetRelatedEntity<Account>("opportunity_parent_account", null);
            }
            set {
                SetRelatedEntity("opportunity_parent_account", null, value);
            }
        }
        
        [AttributeLogicalName("parentcontactid")]
        [RelationshipSchemaName("opportunity_parent_contact")]
        public Contact opportunity_parent_contact {
            get {
                return GetRelatedEntity<Contact>("opportunity_parent_contact", null);
            }
            set {
                SetRelatedEntity("opportunity_parent_contact", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_opportunities")]
        public Team team_opportunities {
            get {
                return GetRelatedEntity<Team>("team_opportunities", null);
            }
            set {
                SetRelatedEntity("team_opportunities", null, value);
            }
        }
        
        public static Opportunity Retrieve(IOrganizationService service, Guid id, params Expression<Func<Opportunity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Activity to track a telephone call.</para>
    /// <para>Display Name: Telefonopkald</para>
    /// </summary>
    [EntityLogicalName("phonecall")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class PhoneCall : ExtendedEntity<PhoneCallState, PhoneCall_StatusCode> {
        
        public const string EntityLogicalName = "phonecall";
        
        public const int EntityTypeCode = 4210;
        
        public PhoneCall() : 
                base(EntityLogicalName) {
        }
        
        public PhoneCall(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the phone call activity.</para>
        /// <para>Display Name: Phone Call</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Phone Call")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on the phone call. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the phone call. By default, it displays the date and time when the activity was completed or canceled, but can be edited to capture the actual duration of the phone call.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the phone call. By default, it displays the date and time when the activity was created, but can be edited to capture the actual duration of the phone call.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the phone call type, such as lead gathering or customer follow-up, to tie the phone call to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Angiv flere oplysninger for at beskrive telefonopkaldet, f.eks. den primære meddelelse eller de diskuterede produkter og servicer.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Select the direction of the phone call as incoming or outbound.</para>
        /// <para>Display Name: Direction</para>
        /// </summary>
        [AttributeLogicalName("directioncode")]
        [DisplayName("Direction")]
        public bool? DirectionCode {
            get {
                return GetAttributeValue<bool?>("directioncode");
            }
            set {
                SetAttributeValue("directioncode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user who made the phone call.</para>
        /// <para>Display Name: Call From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("Call From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the phone call activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Indication which specifies if the phone call activity was created by a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether a voice mail was left for the person.</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the phone call activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the phone call activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the phone call activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the phone number.</para>
        /// <para>Display Name: Phone Number</para>
        /// </summary>
        [AttributeLogicalName("phonenumber")]
        [DisplayName("Phone Number")]
        [MaxLength(200)]
        public string PhoneNumber {
            get {
                return GetAttributeValue<string>("phonenumber");
            }
            set {
                SetAttributeValue("phonenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv en kort beskrivelse af målet med eller det primære emne for telefonopkaldet.</para>
        /// <para>Display Name: Emne</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Emne")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public PhoneCall_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<PhoneCall_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the phone call relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Phone Call record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Phone Call. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the phone call activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for an associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the phone call is open, completed, or canceled. Completed and canceled phone calls are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public PhoneCallState? StateCode {
            get {
                return GetOptionSetValue<PhoneCallState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the phone call's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public PhoneCall_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<PhoneCall_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the phone call type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Angiv en kort beskrivelse af målet med eller det primære emne for telefonopkaldet.</para>
        /// <para>Display Name: Emne</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Emne")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the account, contact, lead, or user recipients of the phone call.</para>
        /// <para>Display Name: Call To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("Call To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the phone call activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Phonecalls")]
        public Account Account_Phonecalls {
            get {
                return GetRelatedEntity<Account>("Account_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Account_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Phonecalls")]
        public Contact Contact_Phonecalls {
            get {
                return GetRelatedEntity<Contact>("Contact_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Contact_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Phonecalls")]
        public Incident Incident_Phonecalls {
            get {
                return GetRelatedEntity<Incident>("Incident_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Incident_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Phonecalls")]
        public Lead Lead_Phonecalls {
            get {
                return GetRelatedEntity<Lead>("Lead_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Lead_Phonecalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Phonecalls")]
        public Opportunity Opportunity_Phonecalls {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Phonecalls", null);
            }
            set {
                SetRelatedEntity("Opportunity_Phonecalls", null, value);
            }
        }
        
        [RelationshipSchemaName("PhoneCall_Annotation")]
        public IEnumerable<Annotation> PhoneCall_Annotation {
            get {
                return GetRelatedEntities<Annotation>("PhoneCall_Annotation", null);
            }
            set {
                SetRelatedEntities("PhoneCall_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("PhoneCall_QueueItem")]
        public IEnumerable<QueueItem> PhoneCall_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("PhoneCall_QueueItem", null);
            }
            set {
                SetRelatedEntities("PhoneCall_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_phonecall")]
        public ActivityPointer activity_pointer_phonecall {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_phonecall", null);
            }
            set {
                SetRelatedEntity("activity_pointer_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_phone_call_activities")]
        public BusinessUnit business_unit_phone_call_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_phone_call_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_phone_call_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_PhoneCalls")]
        public Entitlement entitlement_PhoneCalls {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("entitlement_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_PhoneCalls")]
        public ff_activities ff_activities_PhoneCalls {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_PhoneCalls", null);
            }
            set {
                SetRelatedEntity("ff_activities_PhoneCalls", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_phonecall_createdby")]
        public SystemUser lk_phonecall_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_createdby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
        public SystemUser lk_phonecall_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_phonecall_modifiedby")]
        public SystemUser lk_phonecall_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
        public SystemUser lk_phonecall_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonecall_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonecall_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("phonecall_activity_parties")]
        public IEnumerable<ActivityParty> phonecall_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("phonecall_activity_parties", null);
            }
            set {
                SetRelatedEntities("phonecall_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_phonecall")]
        public Team team_phonecall {
            get {
                return GetRelatedEntity<Team>("team_phonecall", null);
            }
            set {
                SetRelatedEntity("team_phonecall", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_phonecall")]
        public SystemUser user_phonecall {
            get {
                return GetRelatedEntity<SystemUser>("user_phonecall", null);
            }
            set {
                SetRelatedEntity("user_phonecall", null, value);
            }
        }
        
        public static PhoneCall Retrieve(IOrganizationService service, Guid id, params Expression<Func<PhoneCall,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Phone To Case Process Business Process Flow</para>
    /// <para>Display Name: Phone To Case Process</para>
    /// </summary>
    [EntityLogicalName("phonetocaseprocess")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class PhoneToCaseProcess : ExtendedEntity<PhoneToCaseProcessState, PhoneToCaseProcess_StatusCode> {
        
        public const string EntityLogicalName = "phonetocaseprocess";
        
        public const int EntityTypeCode = 952;
        
        public PhoneToCaseProcess() : 
                base(EntityLogicalName) {
        }
        
        public PhoneToCaseProcess(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("businessprocessflowinstanceid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Phone To Case Process bpf entity instances</para>
        /// <para>Display Name: Phone To Case Process Instance Id</para>
        /// </summary>
        [AttributeLogicalName("businessprocessflowinstanceid")]
        [DisplayName("Phone To Case Process Instance Id")]
        public Guid? BusinessProcessFlowInstanceId {
            get {
                return GetAttributeValue<Guid?>("businessprocessflowinstanceid");
            }
            set {
                SetId("businessprocessflowinstanceid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the active stage for the Business Process Flow instance.</para>
        /// <para>Display Name: Active Stage</para>
        /// </summary>
        [AttributeLogicalName("activestageid")]
        [DisplayName("Active Stage")]
        public EntityReference ActiveStageId {
            get {
                return GetAttributeValue<EntityReference>("activestageid");
            }
            set {
                SetAttributeValue("activestageid", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when current active stage is started.</para>
        /// <para>Display Name: Active Stage Started On</para>
        /// </summary>
        [AttributeLogicalName("activestagestartedon")]
        [DisplayName("Active Stage Started On")]
        public DateTime? ActiveStageStartedOn {
            get {
                return GetAttributeValue<DateTime?>("activestagestartedon");
            }
            set {
                SetAttributeValue("activestagestartedon", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when Business Process Flow instance is completed.</para>
        /// <para>Display Name: Completed On</para>
        /// </summary>
        [AttributeLogicalName("completedon")]
        [DisplayName("Completed On")]
        public DateTime? CompletedOn {
            get {
                return GetAttributeValue<DateTime?>("completedon");
            }
            set {
                SetAttributeValue("completedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Duration between completed on and started on, used by business process flow.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("duration")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? Duration {
            get {
                return GetAttributeValue<int?>("duration");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Incident</para>
        /// </summary>
        [AttributeLogicalName("incidentid")]
        [DisplayName("Incident")]
        public EntityReference IncidentId {
            get {
                return GetAttributeValue<EntityReference>("incidentid");
            }
            set {
                SetAttributeValue("incidentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Process Name.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Process Name.</para>
        /// <para>Display Name: Process Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Process Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the workflow associated to the Business Process Flow instance.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public EntityReference ProcessId {
            get {
                return GetAttributeValue<EntityReference>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the Delve action record is pending, completed, or tracking.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public PhoneToCaseProcessState? StateCode {
            get {
                return GetOptionSetValue<PhoneToCaseProcessState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the delve action record status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public PhoneToCaseProcess_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<PhoneToCaseProcess_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Comma delimited string of process stage ids that represent visited stages of the Business Process Flow instance.</para>
        /// <para>Display Name: Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_phonetocaseprocess_createdby")]
        public SystemUser lk_phonetocaseprocess_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonetocaseprocess_createdby", null);
            }
            set {
                SetRelatedEntity("lk_phonetocaseprocess_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_phonetocaseprocess_createdonbehalfby")]
        public SystemUser lk_phonetocaseprocess_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonetocaseprocess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonetocaseprocess_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("incidentid")]
        [RelationshipSchemaName("lk_phonetocaseprocess_incidentid")]
        public Incident lk_phonetocaseprocess_incidentid {
            get {
                return GetRelatedEntity<Incident>("lk_phonetocaseprocess_incidentid", null);
            }
            set {
                SetRelatedEntity("lk_phonetocaseprocess_incidentid", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_phonetocaseprocess_modifiedby")]
        public SystemUser lk_phonetocaseprocess_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonetocaseprocess_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_phonetocaseprocess_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_phonetocaseprocess_modifiedonbehalfby")]
        public SystemUser lk_phonetocaseprocess_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_phonetocaseprocess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_phonetocaseprocess_modifiedonbehalfby", null, value);
            }
        }
        
        public static PhoneToCaseProcess Retrieve(IOrganizationService service, Guid id, params Expression<Func<PhoneToCaseProcess,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A list of records that require action, such as accounts, activities, and cases.</para>
    /// <para>Display Name: Queue</para>
    /// </summary>
    [EntityLogicalName("queue")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Queue : ExtendedEntity<QueueState, Queue_StatusCode> {
        
        public const string EntityLogicalName = "queue";
        
        public const int EntityTypeCode = 2020;
        
        public Queue() : 
                base(EntityLogicalName) {
        }
        
        public Queue(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("queueid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the queue.</para>
        /// <para>Display Name: Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Queue")]
        public Guid? QueueId {
            get {
                return GetAttributeValue<Guid?>("queueid");
            }
            set {
                SetId("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.AllowEmailConnectorToUseCredentials attribute.</para>
        /// <para>Display Name: Allow to Use Credentials for Email Processing (Obsolete)</para>
        /// </summary>
        [AttributeLogicalName("allowemailcredentials")]
        [DisplayName("Allow to Use Credentials for Email Processing (Obsolete)")]
        public bool? AllowEmailCredentials {
            get {
                return GetAttributeValue<bool?>("allowemailcredentials");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the queue is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the queue record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the queue was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the queue.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this queue.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Description of the queue.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email address that is associated with the queue.</para>
        /// <para>Display Name: Incoming Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Incoming Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.Password attribute.</para>
        /// <para>Display Name: Password (Obsolete)</para>
        /// </summary>
        [AttributeLogicalName("emailpassword")]
        [DisplayName("Password (Obsolete)")]
        [MaxLength(200)]
        public string EmailPassword {
            get {
                return GetAttributeValue<string>("emailpassword");
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public Queue_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<Queue_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Email Signature</para>
        /// </summary>
        [AttributeLogicalName("emailsignature")]
        [DisplayName("Email Signature")]
        public EntityReference EmailSignature {
            get {
                return GetAttributeValue<EntityReference>("emailsignature");
            }
            set {
                SetAttributeValue("emailsignature", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is no longer used. The data is now in the Mailbox.UserName attribute.</para>
        /// <para>Display Name: User Name (Obsolete)</para>
        /// </summary>
        [AttributeLogicalName("emailusername")]
        [DisplayName("User Name (Obsolete)")]
        [MaxLength(200)]
        public string EmailUsername {
            get {
                return GetAttributeValue<string>("emailusername");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the queue with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Information that specifies whether a queue is to ignore unsolicited email (deprecated).</para>
        /// <para>Display Name: Convert To Email Activities</para>
        /// </summary>
        [AttributeLogicalName("ignoreunsolicitedemail")]
        [DisplayName("Convert To Email Activities")]
        public bool? IgnoreUnsolicitedEmail {
            get {
                return GetAttributeValue<bool?>("ignoreunsolicitedemail");
            }
            set {
                SetAttributeValue("ignoreunsolicitedemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the queue.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public Queue_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Queue_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Convert Incoming Email To Activities</para>
        /// <para>Display Name: Convert Incoming Email To Activities</para>
        /// </summary>
        [AttributeLogicalName("incomingemailfilteringmethod")]
        [DisplayName("Convert Incoming Email To Activities")]
        public Queue_IncomingEmailFilteringMethod? IncomingEmailFilteringMethod {
            get {
                return GetOptionSetValue<Queue_IncomingEmailFilteringMethod>("incomingemailfilteringmethod");
            }
            set {
                SetOptionSetValue("incomingemailfilteringmethod", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Indication of whether a queue is the fax delivery queue.</para>
        /// <para>Display Name: Fax Queue</para>
        /// </summary>
        [AttributeLogicalName("isfaxqueue")]
        [DisplayName("Fax Queue")]
        public bool? IsFaxQueue {
            get {
                return GetAttributeValue<bool?>("isfaxqueue");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the queue.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the queue was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the queue.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the queue.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Number of Queue items associated with the queue.</para>
        /// <para>Display Name: Queue Items</para>
        /// </summary>
        [AttributeLogicalName("numberofitems")]
        [DisplayName("Queue Items")]
        [Range(-2147483648, 2147483647)]
        public int? NumberOfItems {
            get {
                return GetAttributeValue<int?>("numberofitems");
            }
        }
        
        /// <summary>
        /// <para>Number of Members associated with the queue.</para>
        /// <para>Display Name: No. of Members</para>
        /// </summary>
        [AttributeLogicalName("numberofmembers")]
        [DisplayName("No. of Members")]
        [Range(-2147483648, 2147483647)]
        public int? NumberOfMembers {
            get {
                return GetAttributeValue<int?>("numberofmembers");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the queue.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the queue.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public Queue_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<Queue_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the queue.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the queue.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team who owns the queue.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the queue.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Name of the queue.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the owner of the queue.</para>
        /// <para>Display Name: Owner (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("primaryuserid")]
        [DisplayName("Owner (deprecated)")]
        public EntityReference PrimaryUserId {
            get {
                return GetAttributeValue<EntityReference>("primaryuserid");
            }
            set {
                SetAttributeValue("primaryuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of queue that is automatically assigned when a user or queue is created. The type can be public, private, or work in process.</para>
        /// <para>Display Name: Queue Type</para>
        /// </summary>
        [AttributeLogicalName("queuetypecode")]
        [DisplayName("Queue Type")]
        public Queue_QueueTypeCode? QueueTypeCode {
            get {
                return GetOptionSetValue<Queue_QueueTypeCode>("queuetypecode");
            }
        }
        
        /// <summary>
        /// <para>Select whether the queue is public or private. A public queue can be viewed by all. A private queue can be viewed only by the members added to the queue.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("queueviewtype")]
        [DisplayName("Type")]
        public Queue_QueueViewType? QueueViewType {
            get {
                return GetOptionSetValue<Queue_QueueViewType>("queueviewtype");
            }
            set {
                SetOptionSetValue("queueviewtype", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the queue.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public QueueState? StateCode {
            get {
                return GetOptionSetValue<QueueState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the queue.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Queue_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Queue_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the queue.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the queue.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sagsoprettelse</para>
        /// </summary>
        [AttributeLogicalName("ff_casecreation")]
        [DisplayName("Sagsoprettelse")]
        public bool? ff_casecreation {
            get {
                return GetAttributeValue<bool?>("ff_casecreation");
            }
            set {
                SetAttributeValue("ff_casecreation", value);
            }
        }
        
        /// <summary>
        /// <para>Link assignment input contract with queue.</para>
        /// <para>Display Name: Assignment Input Contract Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_assignmentinputcontractid")]
        [DisplayName("Assignment Input Contract Id")]
        public EntityReference msdyn_assignmentinputcontractid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_assignmentinputcontractid");
            }
            set {
                SetAttributeValue("msdyn_assignmentinputcontractid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Assignment Strategy</para>
        /// </summary>
        [AttributeLogicalName("msdyn_assignmentstrategy")]
        [DisplayName("Assignment Strategy")]
        public msdyn_queueassignmentstrategy? msdyn_assignmentstrategy {
            get {
                return GetOptionSetValue<msdyn_queueassignmentstrategy>("msdyn_assignmentstrategy");
            }
            set {
                SetOptionSetValue("msdyn_assignmentstrategy", value);
            }
        }
        
        /// <summary>
        /// <para>Define overflow rules for work items after it enters queue</para>
        /// <para>Display Name: Inqueue Overflow Ruleset</para>
        /// </summary>
        [AttributeLogicalName("msdyn_inqueueoverflowrulesetid")]
        [DisplayName("Inqueue Overflow Ruleset")]
        public EntityReference msdyn_inqueueoverflowrulesetid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_inqueueoverflowrulesetid");
            }
            set {
                SetAttributeValue("msdyn_inqueueoverflowrulesetid", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: intentfamilyid</para>
        /// </summary>
        [AttributeLogicalName("msdyn_intentfamilyid")]
        [DisplayName("intentfamilyid")]
        public EntityReference msdyn_intentfamilyid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_intentfamilyid");
            }
            set {
                SetAttributeValue("msdyn_intentfamilyid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the queue is set as default or not.</para>
        /// <para>Display Name: Is Default Queue</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isdefaultqueue")]
        [DisplayName("Is Default Queue")]
        public bool? msdyn_isdefaultqueue {
            get {
                return GetAttributeValue<bool?>("msdyn_isdefaultqueue");
            }
            set {
                SetAttributeValue("msdyn_isdefaultqueue", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the queue is used as Omnichannel queue for work distribution.</para>
        /// <para>Display Name: Is Omnichannel queue</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isomnichannelqueue")]
        [DisplayName("Is Omnichannel queue")]
        public bool? msdyn_isomnichannelqueue {
            get {
                return GetAttributeValue<bool?>("msdyn_isomnichannelqueue");
            }
            set {
                SetAttributeValue("msdyn_isomnichannelqueue", value);
            }
        }
        
        /// <summary>
        /// <para>Maximum queue size</para>
        /// <para>Display Name: Maximum queue size</para>
        /// </summary>
        [AttributeLogicalName("msdyn_maxqueuesize")]
        [DisplayName("Maximum queue size")]
        [Range(0, 2147483647)]
        public int? msdyn_maxqueuesize {
            get {
                return GetAttributeValue<int?>("msdyn_maxqueuesize");
            }
            set {
                SetAttributeValue("msdyn_maxqueuesize", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Operating hour associated with Queue</para>
        /// <para>Display Name: Operating Hours</para>
        /// </summary>
        [AttributeLogicalName("msdyn_operatinghourid")]
        [DisplayName("Operating Hours")]
        public EntityReference msdyn_operatinghourid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_operatinghourid");
            }
            set {
                SetAttributeValue("msdyn_operatinghourid", value);
            }
        }
        
        /// <summary>
        /// <para>Setting to enable/disable periodic processing of a queue</para>
        /// <para>Display Name: Enable Operating Hours Based Assignment for Queue</para>
        /// </summary>
        [AttributeLogicalName("msdyn_operatinghoursbasedassignment")]
        [DisplayName("Enable Operating Hours Based Assignment for Queue")]
        public bool? msdyn_operatinghoursbasedassignment {
            get {
                return GetAttributeValue<bool?>("msdyn_operatinghoursbasedassignment");
            }
            set {
                SetAttributeValue("msdyn_operatinghoursbasedassignment", value);
            }
        }
        
        /// <summary>
        /// <para>Define overflow rules for work items before it enters queue</para>
        /// <para>Display Name: Prequeue Overflow Ruleset</para>
        /// </summary>
        [AttributeLogicalName("msdyn_prequeueoverflowrulesetid")]
        [DisplayName("Prequeue Overflow Ruleset")]
        public EntityReference msdyn_prequeueoverflowrulesetid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_prequeueoverflowrulesetid");
            }
            set {
                SetAttributeValue("msdyn_prequeueoverflowrulesetid", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the queue to indicate conversation assignment order to the agent.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("msdyn_priority")]
        [DisplayName("Priority")]
        [Range(1, 2147483647)]
        public int? msdyn_priority {
            get {
                return GetAttributeValue<int?>("msdyn_priority");
            }
            set {
                SetAttributeValue("msdyn_priority", value);
            }
        }
        
        /// <summary>
        /// <para>Setting to enable/disable periodic processing of a queue</para>
        /// <para>Display Name: Enable Periodic Processing of Queue</para>
        /// </summary>
        [AttributeLogicalName("msdyn_processqueueperiodically")]
        [DisplayName("Enable Periodic Processing of Queue")]
        public bool? msdyn_processqueueperiodically {
            get {
                return GetAttributeValue<bool?>("msdyn_processqueueperiodically");
            }
            set {
                SetAttributeValue("msdyn_processqueueperiodically", value);
            }
        }
        
        /// <summary>
        /// <para>Defines the type of channels handled by this queue</para>
        /// <para>Display Name: Queue type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_queuetype")]
        [DisplayName("Queue type")]
        public msdyn_queuetype? msdyn_queuetype {
            get {
                return GetOptionSetValue<msdyn_queuetype>("msdyn_queuetype");
            }
            set {
                SetOptionSetValue("msdyn_queuetype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique Name for the entity.</para>
        /// <para>Display Name: Unique Name</para>
        /// </summary>
        [AttributeLogicalName("msdyn_uniquename")]
        [DisplayName("Unique Name")]
        [MaxLength(128)]
        public string msdyn_uniquename {
            get {
                return GetAttributeValue<string>("msdyn_uniquename");
            }
            set {
                SetAttributeValue("msdyn_uniquename", value);
            }
        }
        
        [RelationshipSchemaName("Queue_Email_EmailSender")]
        public IEnumerable<Email> Queue_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("Queue_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("Queue_Email_EmailSender", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_queues")]
        public BusinessUnit business_unit_queues {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_queues", null);
            }
            set {
                SetRelatedEntity("business_unit_queues", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_queues2")]
        public BusinessUnit business_unit_queues2 {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_queues2", null);
            }
            set {
                SetRelatedEntity("business_unit_queues2", null, value);
            }
        }
        
        [RelationshipSchemaName("email_acceptingentity_queue")]
        public IEnumerable<Email> email_acceptingentity_queue {
            get {
                return GetRelatedEntities<Email>("email_acceptingentity_queue", null);
            }
            set {
                SetRelatedEntities("email_acceptingentity_queue", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_configuration_queue_queue")]
        public IEnumerable<ff_configuration> ff_configuration_queue_queue {
            get {
                return GetRelatedEntities<ff_configuration>("ff_configuration_queue_queue", null);
            }
            set {
                SetRelatedEntities("ff_configuration_queue_queue", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_queue_queue")]
        public IEnumerable<Incident> ff_incident_queue_queue {
            get {
                return GetRelatedEntities<Incident>("ff_incident_queue_queue", null);
            }
            set {
                SetRelatedEntities("ff_incident_queue_queue", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_queue_createdonbehalfby")]
        public SystemUser lk_queue_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queue_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_queue_modifiedonbehalfby")]
        public SystemUser lk_queue_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queue_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_queuebase_createdby")]
        public SystemUser lk_queuebase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queuebase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_queuebase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_queuebase_modifiedby")]
        public SystemUser lk_queuebase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queuebase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_queuebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_regarding_queue")]
        public IEnumerable<Mailbox> mailbox_regarding_queue {
            get {
                return GetRelatedEntities<Mailbox>("mailbox_regarding_queue", null);
            }
            set {
                SetRelatedEntities("mailbox_regarding_queue", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_activity_parties")]
        public IEnumerable<ActivityParty> queue_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("queue_activity_parties", null);
            }
            set {
                SetRelatedEntities("queue_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("defaultmailbox")]
        [RelationshipSchemaName("queue_defaultmailbox_mailbox")]
        public Mailbox queue_defaultmailbox_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("queue_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntity("queue_defaultmailbox_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_entries")]
        public IEnumerable<QueueItem> queue_entries {
            get {
                return GetRelatedEntities<QueueItem>("queue_entries", null);
            }
            set {
                SetRelatedEntities("queue_entries", null, value);
            }
        }
        
        [AttributeLogicalName("primaryuserid")]
        [RelationshipSchemaName("queue_primary_user")]
        public SystemUser queue_primary_user {
            get {
                return GetRelatedEntity<SystemUser>("queue_primary_user", null);
            }
            set {
                SetRelatedEntity("queue_primary_user", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_system_user")]
        public IEnumerable<SystemUser> queue_system_user {
            get {
                return GetRelatedEntities<SystemUser>("queue_system_user", null);
            }
            set {
                SetRelatedEntities("queue_system_user", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_team")]
        public IEnumerable<Team> queue_team {
            get {
                return GetRelatedEntities<Team>("queue_team", null);
            }
            set {
                SetRelatedEntities("queue_team", null, value);
            }
        }
        
        [RelationshipSchemaName("queuemembership_association")]
        public IEnumerable<SystemUser> queuemembership_association {
            get {
                return GetRelatedEntities<SystemUser>("queuemembership_association", null);
            }
            set {
                SetRelatedEntities("queuemembership_association", null, value);
            }
        }
        
        public static Queue Retrieve(IOrganizationService service, Guid id, params Expression<Func<Queue,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A specific item in a queue, such as a case record or an activity record.</para>
    /// <para>Display Name: Queue Item</para>
    /// </summary>
    [EntityLogicalName("queueitem")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class QueueItem : ExtendedEntity<QueueItemState, QueueItem_StatusCode> {
        
        public const string EntityLogicalName = "queueitem";
        
        public const int EntityTypeCode = 2029;
        
        public QueueItem() : 
                base(EntityLogicalName) {
        }
        
        public QueueItem(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("title");
            }
        }
        
        [AttributeLogicalName("queueitemid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("queueitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the queue item.</para>
        /// <para>Display Name: Queue Item</para>
        /// </summary>
        [AttributeLogicalName("queueitemid")]
        [DisplayName("Queue Item")]
        public Guid? QueueItemId {
            get {
                return GetAttributeValue<Guid?>("queueitemid");
            }
            set {
                SetId("queueitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date the record was assigned to the queue.</para>
        /// <para>Display Name: Entered Queue</para>
        /// </summary>
        [AttributeLogicalName("enteredon")]
        [DisplayName("Entered Queue")]
        public DateTime? EnteredOn {
            get {
                return GetAttributeValue<DateTime?>("enteredon");
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the queueitem.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Choose the activity, case, or article assigned to the queue.</para>
        /// <para>Display Name: Object</para>
        /// </summary>
        [AttributeLogicalName("objectid")]
        [DisplayName("Object")]
        public EntityReference ObjectId {
            get {
                return GetAttributeValue<EntityReference>("objectid");
            }
            set {
                SetAttributeValue("objectid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the type of the queue item, such as activity, case, or appointment.</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("objecttypecode")]
        [DisplayName("Type")]
        public QueueItem_ObjectTypeCode? ObjectTypeCode {
            get {
                return GetOptionSetValue<QueueItem_ObjectTypeCode>("objecttypecode");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization with which the queue item is associated.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the queue item.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the queue item.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who owns the queue item.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Shows the title or name that describes the queue record. This value is copied from the record that was assigned to the queue.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(850)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the queue item.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("priority")]
        [DisplayName("Priority")]
        [Range(0, 1000000000)]
        public int? Priority {
            get {
                return GetAttributeValue<int?>("priority");
            }
            set {
                SetAttributeValue("priority", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the queue that the item is assigned to.</para>
        /// <para>Display Name: Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Sender who created the queue item.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("sender")]
        [DisplayName("From")]
        [MaxLength(250)]
        public string Sender {
            get {
                return GetAttributeValue<string>("sender");
            }
            set {
                SetAttributeValue("sender", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the queue item.</para>
        /// <para>Display Name: Status (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("state")]
        [DisplayName("Status (deprecated)")]
        [Range(0, 1000000000)]
        public int? State {
            get {
                return GetAttributeValue<int?>("state");
            }
            set {
                SetAttributeValue("state", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the queue record is active or inactive. Inactive queue records are read-only and can't be edited unless they are reactivated.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public QueueItemState? StateCode {
            get {
                return GetOptionSetValue<QueueItemState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the queue item.</para>
        /// <para>Display Name: Status Reason (deprecated)</para>
        /// </summary>
        [AttributeLogicalName("status")]
        [DisplayName("Status Reason (deprecated)")]
        [Range(0, 1000000000)]
        public int? Status {
            get {
                return GetAttributeValue<int?>("status");
            }
            set {
                SetAttributeValue("status", value);
            }
        }
        
        /// <summary>
        /// <para>Select the item's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public QueueItem_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<QueueItem_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the title or name that describes the queue record. This value is copied from the record that was assigned to the queue.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(850)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Recipients listed on the To line of the message for email queue items.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("torecipients")]
        [DisplayName("To")]
        [MaxLength(500)]
        public string ToRecipients {
            get {
                return GetAttributeValue<string>("torecipients");
            }
            set {
                SetAttributeValue("torecipients", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the queue item.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Shows who is working on the queue item.</para>
        /// <para>Display Name: Worked By</para>
        /// </summary>
        [AttributeLogicalName("workerid")]
        [DisplayName("Worked By")]
        public EntityReference WorkerId {
            get {
                return GetAttributeValue<EntityReference>("workerid");
            }
            set {
                SetAttributeValue("workerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the queue item was last assigned to a user.</para>
        /// <para>Display Name: Worked On</para>
        /// </summary>
        [AttributeLogicalName("workeridmodifiedon")]
        [DisplayName("Worked On")]
        public DateTime? WorkerIdModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("workeridmodifiedon");
            }
        }
        
        /// <summary>
        /// <para>Liveworkstream this queue item belongs to</para>
        /// <para>Display Name: Live workstream</para>
        /// </summary>
        [AttributeLogicalName("msdyn_liveworkstreamid")]
        [DisplayName("Live workstream")]
        public EntityReference msdyn_liveworkstreamid {
            get {
                return GetAttributeValue<EntityReference>("msdyn_liveworkstreamid");
            }
            set {
                SetAttributeValue("msdyn_liveworkstreamid", value);
            }
        }
        
        /// <summary>
        /// <para>This attribute is used by Unified Routing system to decide whether to Skip Sync Call to Omnichannel Service or not.</para>
        /// <para>Display Name: msdyn_skipursync</para>
        /// </summary>
        [AttributeLogicalName("msdyn_skipursync")]
        [DisplayName("msdyn_skipursync")]
        public bool? msdyn_skipursync {
            get {
                return GetAttributeValue<bool?>("msdyn_skipursync");
            }
            set {
                SetAttributeValue("msdyn_skipursync", value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ActivityPointer_QueueItem")]
        public ActivityPointer ActivityPointer_QueueItem {
            get {
                return GetRelatedEntity<ActivityPointer>("ActivityPointer_QueueItem", null);
            }
            set {
                SetRelatedEntity("ActivityPointer_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Appointment_QueueItem")]
        public Appointment Appointment_QueueItem {
            get {
                return GetRelatedEntity<Appointment>("Appointment_QueueItem", null);
            }
            set {
                SetRelatedEntity("Appointment_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Email_QueueItem")]
        public Email Email_QueueItem {
            get {
                return GetRelatedEntity<Email>("Email_QueueItem", null);
            }
            set {
                SetRelatedEntity("Email_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Incident_QueueItem")]
        public Incident Incident_QueueItem {
            get {
                return GetRelatedEntity<Incident>("Incident_QueueItem", null);
            }
            set {
                SetRelatedEntity("Incident_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("PhoneCall_QueueItem")]
        public PhoneCall PhoneCall_QueueItem {
            get {
                return GetRelatedEntity<PhoneCall>("PhoneCall_QueueItem", null);
            }
            set {
                SetRelatedEntity("PhoneCall_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("Task_QueueItem")]
        public Task Task_QueueItem {
            get {
                return GetRelatedEntity<Task>("Task_QueueItem", null);
            }
            set {
                SetRelatedEntity("Task_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ff_casenote_QueueItems")]
        public ff_casenote ff_casenote_QueueItems {
            get {
                return GetRelatedEntity<ff_casenote>("ff_casenote_QueueItems", null);
            }
            set {
                SetRelatedEntity("ff_casenote_QueueItems", null, value);
            }
        }
        
        [AttributeLogicalName("objectid")]
        [RelationshipSchemaName("ff_medlemsnote_QueueItems")]
        public ff_medlemsnote ff_medlemsnote_QueueItems {
            get {
                return GetRelatedEntity<ff_medlemsnote>("ff_medlemsnote_QueueItems", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_QueueItems", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_queueitem_createdonbehalfby")]
        public SystemUser lk_queueitem_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitem_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queueitem_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_queueitem_modifiedonbehalfby")]
        public SystemUser lk_queueitem_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitem_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_queueitem_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_queueitembase_createdby")]
        public SystemUser lk_queueitembase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_queueitembase_modifiedby")]
        public SystemUser lk_queueitembase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("workerid")]
        [RelationshipSchemaName("lk_queueitembase_workerid")]
        public SystemUser lk_queueitembase_workerid {
            get {
                return GetRelatedEntity<SystemUser>("lk_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntity("lk_queueitembase_workerid", null, value);
            }
        }
        
        [AttributeLogicalName("queueid")]
        [RelationshipSchemaName("queue_entries")]
        public Queue queue_entries {
            get {
                return GetRelatedEntity<Queue>("queue_entries", null);
            }
            set {
                SetRelatedEntity("queue_entries", null, value);
            }
        }
        
        [AttributeLogicalName("workerid")]
        [RelationshipSchemaName("team_queueitembase_workerid")]
        public Team team_queueitembase_workerid {
            get {
                return GetRelatedEntity<Team>("team_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntity("team_queueitembase_workerid", null, value);
            }
        }
        
        public static QueueItem Retrieve(IOrganizationService service, Guid id, params Expression<Func<QueueItem,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("queuemembership")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class QueueMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "queuemembership";
        
        public const string RelationshipSchemaName = "QueueMembership";
        
        public const int EntityTypeCode = 1213;
        
        public QueueMembership() : 
                base(EntityLogicalName) {
        }
        
        public QueueMembership(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("queuemembershipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("queuemembershipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the queue membership.</para>
        /// </summary>
        [AttributeLogicalName("queuemembershipid")]
        public Guid? QueueMembershipId {
            get {
                return GetAttributeValue<Guid?>("queuemembershipid");
            }
            set {
                SetId("queuemembershipid", value);
            }
        }
        
        [AttributeLogicalName("queueid")]
        public Guid? QueueId {
            get {
                return GetAttributeValue<Guid?>("queueid");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static QueueMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<QueueMembership,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Saved query against the database.</para>
    /// <para>Display Name: View</para>
    /// </summary>
    [EntityLogicalName("savedquery")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SavedQuery : ExtendedEntity<SavedQueryState, SavedQuery_StatusCode> {
        
        public const string EntityLogicalName = "savedquery";
        
        public const int EntityTypeCode = 1039;
        
        public SavedQuery() : 
                base(EntityLogicalName) {
        }
        
        public SavedQuery(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("savedqueryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("savedqueryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the view.</para>
        /// <para>Display Name: View</para>
        /// </summary>
        [AttributeLogicalName("savedqueryid")]
        [DisplayName("View")]
        public Guid? SavedQueryId {
            get {
                return GetAttributeValue<Guid?>("savedqueryid");
            }
            set {
                SetId("savedqueryid", value);
            }
        }
        
        /// <summary>
        /// <para>Type the column name that will be used to group the results from the data collected across multiple records from a system view.</para>
        /// <para>Display Name: Advanced Group By</para>
        /// </summary>
        [AttributeLogicalName("advancedgroupby")]
        [DisplayName("Advanced Group By")]
        [MaxLength(2000)]
        public string AdvancedGroupBy {
            get {
                return GetAttributeValue<string>("advancedgroupby");
            }
            set {
                SetAttributeValue("advancedgroupby", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view can be deleted.</para>
        /// <para>Display Name: Can Be Deleted</para>
        /// </summary>
        [AttributeLogicalName("canbedeleted")]
        [DisplayName("Can Be Deleted")]
        public BooleanManagedProperty CanBeDeleted {
            get {
                return GetAttributeValue<BooleanManagedProperty>("canbedeleted");
            }
            set {
                SetAttributeValue("canbedeleted", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the columns and sorting criteria for the view, stored in XML format.</para>
        /// <para>Display Name: Column Set XML</para>
        /// </summary>
        [AttributeLogicalName("columnsetxml")]
        [DisplayName("Column Set XML")]
        public string ColumnSetXml {
            get {
                return GetAttributeValue<string>("columnsetxml");
            }
            set {
                SetAttributeValue("columnsetxml", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Component State</para>
        /// </summary>
        [AttributeLogicalName("componentstate")]
        [DisplayName("Component State")]
        public componentstate? ComponentState {
            get {
                return GetOptionSetValue<componentstate>("componentstate");
            }
        }
        
        /// <summary>
        /// <para>Type information about how the items in the system view are formatted.</para>
        /// <para>Display Name: Conditional formatting</para>
        /// </summary>
        [AttributeLogicalName("conditionalformatting")]
        [DisplayName("Conditional formatting")]
        public string ConditionalFormatting {
            get {
                return GetAttributeValue<string>("conditionalformatting");
            }
            set {
                SetAttributeValue("conditionalformatting", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the view, such as the filter criteria or intended results set.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view can retrieve data from all cluster partitions.</para>
        /// <para>Display Name: Default</para>
        /// </summary>
        [AttributeLogicalName("enablecrosspartition")]
        [DisplayName("Default")]
        public bool? EnableCrossPartition {
            get {
                return GetAttributeValue<bool?>("enablecrosspartition");
            }
            set {
                SetAttributeValue("enablecrosspartition", value);
            }
        }
        
        /// <summary>
        /// <para>String specifying the query in Fetch XML language.</para>
        /// <para>Display Name: Fetch XML</para>
        /// </summary>
        [AttributeLogicalName("fetchxml")]
        [DisplayName("Fetch XML")]
        public string FetchXml {
            get {
                return GetAttributeValue<string>("fetchxml");
            }
            set {
                SetAttributeValue("fetchxml", value);
            }
        }
        
        /// <summary>
        /// <para>Version in which the form is introduced.</para>
        /// <para>Display Name: Introduced Version</para>
        /// </summary>
        [AttributeLogicalName("introducedversion")]
        [DisplayName("Introduced Version")]
        [MaxLength(48)]
        public string IntroducedVersion {
            get {
                return GetAttributeValue<string>("introducedversion");
            }
            set {
                SetAttributeValue("introducedversion", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether a user created the view.</para>
        /// <para>Display Name: Is Custom</para>
        /// </summary>
        [AttributeLogicalName("iscustom")]
        [DisplayName("Is Custom")]
        public bool? IsCustom {
            get {
                return GetAttributeValue<bool?>("iscustom");
            }
        }
        
        /// <summary>
        /// <para>Tells whether the component can be customized.</para>
        /// <para>Display Name: Customizable</para>
        /// </summary>
        [AttributeLogicalName("iscustomizable")]
        [DisplayName("Customizable")]
        public BooleanManagedProperty IsCustomizable {
            get {
                return GetAttributeValue<BooleanManagedProperty>("iscustomizable");
            }
            set {
                SetAttributeValue("iscustomizable", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view is the default view for the specified record type (entity).</para>
        /// <para>Display Name: Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
            set {
                SetAttributeValue("isdefault", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the record is part of a managed solution.</para>
        /// <para>Display Name: State</para>
        /// </summary>
        [AttributeLogicalName("ismanaged")]
        [DisplayName("State")]
        public bool? IsManaged {
            get {
                return GetAttributeValue<bool?>("ismanaged");
            }
        }
        
        /// <summary>
        /// <para>Indicates whether or not this is viewable by the entire organization.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("isprivate")]
        [DisplayName("Is Private")]
        public bool? IsPrivate {
            get {
                return GetAttributeValue<bool?>("isprivate");
            }
        }
        
        /// <summary>
        /// <para>Choose whether the view is compatible with Quick Find. When users search for specific items, you define the fields that are searched in.</para>
        /// <para>Display Name: Quick Find Compatible</para>
        /// </summary>
        [AttributeLogicalName("isquickfindquery")]
        [DisplayName("Quick Find Compatible")]
        public bool? IsQuickFindQuery {
            get {
                return GetAttributeValue<bool?>("isquickfindquery");
            }
            set {
                SetAttributeValue("isquickfindquery", value);
            }
        }
        
        /// <summary>
        /// <para>Tells whether the view was created by a user.</para>
        /// <para>Display Name: User Defined</para>
        /// </summary>
        [AttributeLogicalName("isuserdefined")]
        [DisplayName("User Defined")]
        public bool? IsUserDefined {
            get {
                return GetAttributeValue<bool?>("isuserdefined");
            }
        }
        
        /// <summary>
        /// <para>Layout data in JSON format.</para>
        /// <para>Display Name: Layout data in JSON format.</para>
        /// </summary>
        [AttributeLogicalName("layoutjson")]
        [DisplayName("Layout data in JSON format.")]
        public string LayoutJson {
            get {
                return GetAttributeValue<string>("layoutjson");
            }
            set {
                SetAttributeValue("layoutjson", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Layout XML</para>
        /// </summary>
        [AttributeLogicalName("layoutxml")]
        [DisplayName("Layout XML")]
        public string LayoutXml {
            get {
                return GetAttributeValue<string>("layoutxml");
            }
            set {
                SetAttributeValue("layoutxml", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the view to describe what results the view will contain. This name is visible to users in the View list.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>String specifying the corresponding sql query for the fetch xml specified for offline use.</para>
        /// <para>Display Name: Offline SQL Query</para>
        /// </summary>
        [AttributeLogicalName("offlinesqlquery")]
        [DisplayName("Offline SQL Query")]
        public string OfflineSqlQuery {
            get {
                return GetAttributeValue<string>("offlinesqlquery");
            }
            set {
                SetAttributeValue("offlinesqlquery", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the ID of the organization that the record is associated with.</para>
        /// <para>Display Name: Organization</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>For the organization, type the tab order to determine how users navigate through the screen using only the Tab key.</para>
        /// <para>Display Name: Default Organization tab order</para>
        /// </summary>
        [AttributeLogicalName("organizationtaborder")]
        [DisplayName("Default Organization tab order")]
        [Range(0, 2147483647)]
        public int? OrganizationTabOrder {
            get {
                return GetAttributeValue<int?>("organizationtaborder");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Record Overwrite Time</para>
        /// </summary>
        [AttributeLogicalName("overwritetime")]
        [DisplayName("Record Overwrite Time")]
        public DateTime? OverwriteTime {
            get {
                return GetAttributeValue<DateTime?>("overwritetime");
            }
        }
        
        /// <summary>
        /// <para>Type a name for the view to describe what results the view will contain. This name is visible to users in the View list.</para>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Query API</para>
        /// </summary>
        [AttributeLogicalName("queryapi")]
        [DisplayName("Query API")]
        [MaxLength(100)]
        public string QueryAPI {
            get {
                return GetAttributeValue<string>("queryapi");
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Query Application Usage</para>
        /// </summary>
        [AttributeLogicalName("queryappusage")]
        [DisplayName("Query Application Usage")]
        [Range(0, 1000000000)]
        public int? QueryAppUsage {
            get {
                return GetAttributeValue<int?>("queryappusage");
            }
            set {
                SetAttributeValue("queryappusage", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of the query.</para>
        /// <para>Display Name: Query Type</para>
        /// </summary>
        [AttributeLogicalName("querytype")]
        [DisplayName("Query Type")]
        [Range(0, 1000000000)]
        public int? QueryType {
            get {
                return GetAttributeValue<int?>("querytype");
            }
            set {
                SetAttributeValue("querytype", value);
            }
        }
        
        /// <summary>
        /// <para>Type of entity displayed in the view.</para>
        /// <para>Display Name: Entity Name</para>
        /// </summary>
        [AttributeLogicalName("returnedtypecode")]
        [DisplayName("Entity Name")]
        public string ReturnedTypeCode {
            get {
                return GetAttributeValue<string>("returnedtypecode");
            }
            set {
                SetAttributeValue("returnedtypecode", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the role display conditions for the SavedQuery.</para>
        /// <para>Display Name: Role display conditions for the SavedQuery</para>
        /// </summary>
        [AttributeLogicalName("roledisplayconditionsxml")]
        [DisplayName("Role display conditions for the SavedQuery")]
        public string RoleDisplayConditionsXml {
            get {
                return GetAttributeValue<string>("roledisplayconditionsxml");
            }
            set {
                SetAttributeValue("roledisplayconditionsxml", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// </summary>
        [AttributeLogicalName("savedqueryidunique")]
        public Guid? SavedQueryIdUnique {
            get {
                return GetAttributeValue<Guid?>("savedqueryidunique");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the associated solution.</para>
        /// <para>Display Name: Solution</para>
        /// </summary>
        [AttributeLogicalName("solutionid")]
        [DisplayName("Solution")]
        public Guid? SolutionId {
            get {
                return GetAttributeValue<Guid?>("solutionid");
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the view.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public SavedQueryState? StateCode {
            get {
                return GetOptionSetValue<SavedQueryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the reason code that explains the status of the record.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public SavedQuery_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<SavedQuery_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the view.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_savedquery_createdonbehalfby")]
        public SystemUser lk_savedquery_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquery_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_savedquery_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_savedquery_modifiedonbehalfby")]
        public SystemUser lk_savedquery_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquery_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_savedquery_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_savedquerybase_createdby")]
        public SystemUser lk_savedquerybase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquerybase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_savedquerybase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_savedquerybase_modifiedby")]
        public SystemUser lk_savedquerybase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_savedquerybase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_savedquerybase_modifiedby", null, value);
            }
        }
        
        public static SavedQuery Retrieve(IOrganizationService service, Guid id, params Expression<Func<SavedQuery,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Person with access to the Microsoft CRM system and who owns objects in the Microsoft CRM database.</para>
    /// <para>Display Name: Bruger</para>
    /// </summary>
    [EntityLogicalName("systemuser")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class SystemUser : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "systemuser";
        
        public const int EntityTypeCode = 8;
        
        public SystemUser() : 
                base(EntityLogicalName) {
        }
        
        public SystemUser(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("fullname");
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user.</para>
        /// <para>Display Name: User</para>
        /// </summary>
        [AttributeLogicalName("systemuserid")]
        [DisplayName("User")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
            set {
                SetId("systemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user.</para>
        /// <para>Display Name: Access Mode</para>
        /// </summary>
        [AttributeLogicalName("accessmode")]
        [DisplayName("Access Mode")]
        public SystemUser_AccessMode? AccessMode {
            get {
                return GetOptionSetValue<SystemUser_AccessMode>("accessmode");
            }
            set {
                SetOptionSetValue("accessmode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 1.</para>
        /// <para>Display Name: Address 1: ID</para>
        /// </summary>
        [AttributeLogicalName("address1_addressid")]
        [DisplayName("Address 1: ID")]
        public Guid? Address1_AddressId {
            get {
                return GetAttributeValue<Guid?>("address1_addressid");
            }
            set {
                SetAttributeValue("address1_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 1, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 1: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address1_addresstypecode")]
        [DisplayName("Address 1: Address Type")]
        public SystemUser_Address1_AddressTypeCode? Address1_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_AddressTypeCode>("address1_addresstypecode");
            }
            set {
                SetOptionSetValue("address1_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 1.</para>
        /// <para>Display Name: City</para>
        /// </summary>
        [AttributeLogicalName("address1_city")]
        [DisplayName("City")]
        [MaxLength(128)]
        public string Address1_City {
            get {
                return GetAttributeValue<string>("address1_city");
            }
            set {
                SetAttributeValue("address1_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete primary address.</para>
        /// <para>Display Name: Address</para>
        /// </summary>
        [AttributeLogicalName("address1_composite")]
        [DisplayName("Address")]
        public string Address1_Composite {
            get {
                return GetAttributeValue<string>("address1_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 1.</para>
        /// <para>Display Name: Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address1_country")]
        [DisplayName("Country/Region")]
        [MaxLength(128)]
        public string Address1_Country {
            get {
                return GetAttributeValue<string>("address1_country");
            }
            set {
                SetAttributeValue("address1_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 1.</para>
        /// <para>Display Name: Address 1: County</para>
        /// </summary>
        [AttributeLogicalName("address1_county")]
        [DisplayName("Address 1: County")]
        [MaxLength(128)]
        public string Address1_County {
            get {
                return GetAttributeValue<string>("address1_county");
            }
            set {
                SetAttributeValue("address1_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 1.</para>
        /// <para>Display Name: Address 1: Fax</para>
        /// </summary>
        [AttributeLogicalName("address1_fax")]
        [DisplayName("Address 1: Fax")]
        [MaxLength(64)]
        public string Address1_Fax {
            get {
                return GetAttributeValue<string>("address1_fax");
            }
            set {
                SetAttributeValue("address1_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 1.</para>
        /// <para>Display Name: Address 1: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address1_latitude")]
        [DisplayName("Address 1: Latitude")]
        public double? Address1_Latitude {
            get {
                return GetAttributeValue<double?>("address1_latitude");
            }
            set {
                SetAttributeValue("address1_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 1 information.</para>
        /// <para>Display Name: Street 1</para>
        /// </summary>
        [AttributeLogicalName("address1_line1")]
        [DisplayName("Street 1")]
        [MaxLength(1024)]
        public string Address1_Line1 {
            get {
                return GetAttributeValue<string>("address1_line1");
            }
            set {
                SetAttributeValue("address1_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 1 information.</para>
        /// <para>Display Name: Street 2</para>
        /// </summary>
        [AttributeLogicalName("address1_line2")]
        [DisplayName("Street 2")]
        [MaxLength(1024)]
        public string Address1_Line2 {
            get {
                return GetAttributeValue<string>("address1_line2");
            }
            set {
                SetAttributeValue("address1_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 1 information.</para>
        /// <para>Display Name: Street 3</para>
        /// </summary>
        [AttributeLogicalName("address1_line3")]
        [DisplayName("Street 3")]
        [MaxLength(1024)]
        public string Address1_Line3 {
            get {
                return GetAttributeValue<string>("address1_line3");
            }
            set {
                SetAttributeValue("address1_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 1.</para>
        /// <para>Display Name: Address 1: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address1_longitude")]
        [DisplayName("Address 1: Longitude")]
        public double? Address1_Longitude {
            get {
                return GetAttributeValue<double?>("address1_longitude");
            }
            set {
                SetAttributeValue("address1_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 1.</para>
        /// <para>Display Name: Address 1: Name</para>
        /// </summary>
        [AttributeLogicalName("address1_name")]
        [DisplayName("Address 1: Name")]
        [MaxLength(100)]
        public string Address1_Name {
            get {
                return GetAttributeValue<string>("address1_name");
            }
            set {
                SetAttributeValue("address1_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 1.</para>
        /// <para>Display Name: Address 1: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address1_postofficebox")]
        [DisplayName("Address 1: Post Office Box")]
        [MaxLength(40)]
        public string Address1_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address1_postofficebox");
            }
            set {
                SetAttributeValue("address1_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 1.</para>
        /// <para>Display Name: ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address1_postalcode")]
        [DisplayName("ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address1_PostalCode {
            get {
                return GetAttributeValue<string>("address1_postalcode");
            }
            set {
                SetAttributeValue("address1_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 1.</para>
        /// <para>Display Name: Address 1: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address1_shippingmethodcode")]
        [DisplayName("Address 1: Shipping Method")]
        public SystemUser_Address1_ShippingMethodCode? Address1_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address1_ShippingMethodCode>("address1_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address1_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 1.</para>
        /// <para>Display Name: State/Province</para>
        /// </summary>
        [AttributeLogicalName("address1_stateorprovince")]
        [DisplayName("State/Province")]
        [MaxLength(128)]
        public string Address1_StateOrProvince {
            get {
                return GetAttributeValue<string>("address1_stateorprovince");
            }
            set {
                SetAttributeValue("address1_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 1.</para>
        /// <para>Display Name: Main Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone1")]
        [DisplayName("Main Phone")]
        [MaxLength(64)]
        public string Address1_Telephone1 {
            get {
                return GetAttributeValue<string>("address1_telephone1");
            }
            set {
                SetAttributeValue("address1_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 1.</para>
        /// <para>Display Name: Other Phone</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone2")]
        [DisplayName("Other Phone")]
        [MaxLength(50)]
        public string Address1_Telephone2 {
            get {
                return GetAttributeValue<string>("address1_telephone2");
            }
            set {
                SetAttributeValue("address1_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 1.</para>
        /// <para>Display Name: Pager</para>
        /// </summary>
        [AttributeLogicalName("address1_telephone3")]
        [DisplayName("Pager")]
        [MaxLength(50)]
        public string Address1_Telephone3 {
            get {
                return GetAttributeValue<string>("address1_telephone3");
            }
            set {
                SetAttributeValue("address1_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 1.</para>
        /// <para>Display Name: Address 1: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address1_upszone")]
        [DisplayName("Address 1: UPS Zone")]
        [MaxLength(4)]
        public string Address1_UPSZone {
            get {
                return GetAttributeValue<string>("address1_upszone");
            }
            set {
                SetAttributeValue("address1_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 1. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 1: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address1_utcoffset")]
        [DisplayName("Address 1: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address1_UTCOffset {
            get {
                return GetAttributeValue<int?>("address1_utcoffset");
            }
            set {
                SetAttributeValue("address1_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for address 2.</para>
        /// <para>Display Name: Address 2: ID</para>
        /// </summary>
        [AttributeLogicalName("address2_addressid")]
        [DisplayName("Address 2: ID")]
        public Guid? Address2_AddressId {
            get {
                return GetAttributeValue<Guid?>("address2_addressid");
            }
            set {
                SetAttributeValue("address2_addressid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of address for address 2, such as billing, shipping, or primary address.</para>
        /// <para>Display Name: Address 2: Address Type</para>
        /// </summary>
        [AttributeLogicalName("address2_addresstypecode")]
        [DisplayName("Address 2: Address Type")]
        public SystemUser_Address2_AddressTypeCode? Address2_AddressTypeCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_AddressTypeCode>("address2_addresstypecode");
            }
            set {
                SetOptionSetValue("address2_addresstypecode", value);
            }
        }
        
        /// <summary>
        /// <para>City name for address 2.</para>
        /// <para>Display Name: Other City</para>
        /// </summary>
        [AttributeLogicalName("address2_city")]
        [DisplayName("Other City")]
        [MaxLength(128)]
        public string Address2_City {
            get {
                return GetAttributeValue<string>("address2_city");
            }
            set {
                SetAttributeValue("address2_city", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the complete secondary address.</para>
        /// <para>Display Name: Other Address</para>
        /// </summary>
        [AttributeLogicalName("address2_composite")]
        [DisplayName("Other Address")]
        public string Address2_Composite {
            get {
                return GetAttributeValue<string>("address2_composite");
            }
        }
        
        /// <summary>
        /// <para>Country/region name in address 2.</para>
        /// <para>Display Name: Other Country/Region</para>
        /// </summary>
        [AttributeLogicalName("address2_country")]
        [DisplayName("Other Country/Region")]
        [MaxLength(128)]
        public string Address2_Country {
            get {
                return GetAttributeValue<string>("address2_country");
            }
            set {
                SetAttributeValue("address2_country", value);
            }
        }
        
        /// <summary>
        /// <para>County name for address 2.</para>
        /// <para>Display Name: Address 2: County</para>
        /// </summary>
        [AttributeLogicalName("address2_county")]
        [DisplayName("Address 2: County")]
        [MaxLength(128)]
        public string Address2_County {
            get {
                return GetAttributeValue<string>("address2_county");
            }
            set {
                SetAttributeValue("address2_county", value);
            }
        }
        
        /// <summary>
        /// <para>Fax number for address 2.</para>
        /// <para>Display Name: Address 2: Fax</para>
        /// </summary>
        [AttributeLogicalName("address2_fax")]
        [DisplayName("Address 2: Fax")]
        [MaxLength(50)]
        public string Address2_Fax {
            get {
                return GetAttributeValue<string>("address2_fax");
            }
            set {
                SetAttributeValue("address2_fax", value);
            }
        }
        
        /// <summary>
        /// <para>Latitude for address 2.</para>
        /// <para>Display Name: Address 2: Latitude</para>
        /// </summary>
        [AttributeLogicalName("address2_latitude")]
        [DisplayName("Address 2: Latitude")]
        public double? Address2_Latitude {
            get {
                return GetAttributeValue<double?>("address2_latitude");
            }
            set {
                SetAttributeValue("address2_latitude", value);
            }
        }
        
        /// <summary>
        /// <para>First line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 1</para>
        /// </summary>
        [AttributeLogicalName("address2_line1")]
        [DisplayName("Other Street 1")]
        [MaxLength(1024)]
        public string Address2_Line1 {
            get {
                return GetAttributeValue<string>("address2_line1");
            }
            set {
                SetAttributeValue("address2_line1", value);
            }
        }
        
        /// <summary>
        /// <para>Second line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 2</para>
        /// </summary>
        [AttributeLogicalName("address2_line2")]
        [DisplayName("Other Street 2")]
        [MaxLength(1024)]
        public string Address2_Line2 {
            get {
                return GetAttributeValue<string>("address2_line2");
            }
            set {
                SetAttributeValue("address2_line2", value);
            }
        }
        
        /// <summary>
        /// <para>Third line for entering address 2 information.</para>
        /// <para>Display Name: Other Street 3</para>
        /// </summary>
        [AttributeLogicalName("address2_line3")]
        [DisplayName("Other Street 3")]
        [MaxLength(1024)]
        public string Address2_Line3 {
            get {
                return GetAttributeValue<string>("address2_line3");
            }
            set {
                SetAttributeValue("address2_line3", value);
            }
        }
        
        /// <summary>
        /// <para>Longitude for address 2.</para>
        /// <para>Display Name: Address 2: Longitude</para>
        /// </summary>
        [AttributeLogicalName("address2_longitude")]
        [DisplayName("Address 2: Longitude")]
        public double? Address2_Longitude {
            get {
                return GetAttributeValue<double?>("address2_longitude");
            }
            set {
                SetAttributeValue("address2_longitude", value);
            }
        }
        
        /// <summary>
        /// <para>Name to enter for address 2.</para>
        /// <para>Display Name: Address 2: Name</para>
        /// </summary>
        [AttributeLogicalName("address2_name")]
        [DisplayName("Address 2: Name")]
        [MaxLength(100)]
        public string Address2_Name {
            get {
                return GetAttributeValue<string>("address2_name");
            }
            set {
                SetAttributeValue("address2_name", value);
            }
        }
        
        /// <summary>
        /// <para>Post office box number for address 2.</para>
        /// <para>Display Name: Address 2: Post Office Box</para>
        /// </summary>
        [AttributeLogicalName("address2_postofficebox")]
        [DisplayName("Address 2: Post Office Box")]
        [MaxLength(40)]
        public string Address2_PostOfficeBox {
            get {
                return GetAttributeValue<string>("address2_postofficebox");
            }
            set {
                SetAttributeValue("address2_postofficebox", value);
            }
        }
        
        /// <summary>
        /// <para>ZIP Code or postal code for address 2.</para>
        /// <para>Display Name: Other ZIP/Postal Code</para>
        /// </summary>
        [AttributeLogicalName("address2_postalcode")]
        [DisplayName("Other ZIP/Postal Code")]
        [MaxLength(40)]
        public string Address2_PostalCode {
            get {
                return GetAttributeValue<string>("address2_postalcode");
            }
            set {
                SetAttributeValue("address2_postalcode", value);
            }
        }
        
        /// <summary>
        /// <para>Method of shipment for address 2.</para>
        /// <para>Display Name: Address 2: Shipping Method</para>
        /// </summary>
        [AttributeLogicalName("address2_shippingmethodcode")]
        [DisplayName("Address 2: Shipping Method")]
        public SystemUser_Address2_ShippingMethodCode? Address2_ShippingMethodCode {
            get {
                return GetOptionSetValue<SystemUser_Address2_ShippingMethodCode>("address2_shippingmethodcode");
            }
            set {
                SetOptionSetValue("address2_shippingmethodcode", value);
            }
        }
        
        /// <summary>
        /// <para>State or province for address 2.</para>
        /// <para>Display Name: Other State/Province</para>
        /// </summary>
        [AttributeLogicalName("address2_stateorprovince")]
        [DisplayName("Other State/Province")]
        [MaxLength(128)]
        public string Address2_StateOrProvince {
            get {
                return GetAttributeValue<string>("address2_stateorprovince");
            }
            set {
                SetAttributeValue("address2_stateorprovince", value);
            }
        }
        
        /// <summary>
        /// <para>First telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 1</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone1")]
        [DisplayName("Address 2: Telephone 1")]
        [MaxLength(50)]
        public string Address2_Telephone1 {
            get {
                return GetAttributeValue<string>("address2_telephone1");
            }
            set {
                SetAttributeValue("address2_telephone1", value);
            }
        }
        
        /// <summary>
        /// <para>Second telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 2</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone2")]
        [DisplayName("Address 2: Telephone 2")]
        [MaxLength(50)]
        public string Address2_Telephone2 {
            get {
                return GetAttributeValue<string>("address2_telephone2");
            }
            set {
                SetAttributeValue("address2_telephone2", value);
            }
        }
        
        /// <summary>
        /// <para>Third telephone number associated with address 2.</para>
        /// <para>Display Name: Address 2: Telephone 3</para>
        /// </summary>
        [AttributeLogicalName("address2_telephone3")]
        [DisplayName("Address 2: Telephone 3")]
        [MaxLength(50)]
        public string Address2_Telephone3 {
            get {
                return GetAttributeValue<string>("address2_telephone3");
            }
            set {
                SetAttributeValue("address2_telephone3", value);
            }
        }
        
        /// <summary>
        /// <para>United Parcel Service (UPS) zone for address 2.</para>
        /// <para>Display Name: Address 2: UPS Zone</para>
        /// </summary>
        [AttributeLogicalName("address2_upszone")]
        [DisplayName("Address 2: UPS Zone")]
        [MaxLength(4)]
        public string Address2_UPSZone {
            get {
                return GetAttributeValue<string>("address2_upszone");
            }
            set {
                SetAttributeValue("address2_upszone", value);
            }
        }
        
        /// <summary>
        /// <para>UTC offset for address 2. This is the difference between local time and standard Coordinated Universal Time.</para>
        /// <para>Display Name: Address 2: UTC Offset</para>
        /// </summary>
        [AttributeLogicalName("address2_utcoffset")]
        [DisplayName("Address 2: UTC Offset")]
        [Range(-1500, 1500)]
        public int? Address2_UTCOffset {
            get {
                return GetAttributeValue<int?>("address2_utcoffset");
            }
            set {
                SetAttributeValue("address2_utcoffset", value);
            }
        }
        
        /// <summary>
        /// <para>The identifier for the application. This is used to access data in another application.</para>
        /// <para>Display Name: Application ID</para>
        /// </summary>
        [AttributeLogicalName("applicationid")]
        [DisplayName("Application ID")]
        public Guid? ApplicationId {
            get {
                return GetAttributeValue<Guid?>("applicationid");
            }
            set {
                SetAttributeValue("applicationid", value);
            }
        }
        
        /// <summary>
        /// <para>The URI used as a unique logical identifier for the external app. This can be used to validate the application.</para>
        /// <para>Display Name: Application ID URI</para>
        /// </summary>
        [AttributeLogicalName("applicationiduri")]
        [DisplayName("Application ID URI")]
        [MaxLength(1024)]
        public string ApplicationIdUri {
            get {
                return GetAttributeValue<string>("applicationiduri");
            }
        }
        
        /// <summary>
        /// <para>This is the application directory object Id.</para>
        /// <para>Display Name: Azure AD Object ID</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Azure AD Object ID")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was set as soft deleted in Azure.</para>
        /// <para>Display Name: Azure Deleted On</para>
        /// </summary>
        [AttributeLogicalName("azuredeletedon")]
        [DisplayName("Azure Deleted On")]
        public DateTime? AzureDeletedOn {
            get {
                return GetAttributeValue<DateTime?>("azuredeletedon");
            }
        }
        
        /// <summary>
        /// <para>Azure state of user</para>
        /// <para>Display Name: Azure State</para>
        /// </summary>
        [AttributeLogicalName("azurestate")]
        [DisplayName("Azure State")]
        public SystemUser_AzureState? AzureState {
            get {
                return GetOptionSetValue<SystemUser_AzureState>("azurestate");
            }
            set {
                SetOptionSetValue("azurestate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the user is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>License type of user. This is used only in the on-premises version of the product. Online licenses are managed through Microsoft 365 Office Portal</para>
        /// <para>Display Name: License Type</para>
        /// </summary>
        [AttributeLogicalName("caltype")]
        [DisplayName("License Type")]
        public SystemUser_CALType? CALType {
            get {
                return GetOptionSetValue<SystemUser_CALType>("caltype");
            }
            set {
                SetOptionSetValue("caltype", value);
            }
        }
        
        /// <summary>
        /// <para>Fiscal calendar associated with the user.</para>
        /// <para>Display Name: Calendar</para>
        /// </summary>
        [AttributeLogicalName("calendarid")]
        [DisplayName("Calendar")]
        public EntityReference CalendarId {
            get {
                return GetAttributeValue<EntityReference>("calendarid");
            }
            set {
                SetAttributeValue("calendarid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the user.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the systemuser.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Indicates if default outlook filters have been populated.</para>
        /// <para>Display Name: Default Filters Populated</para>
        /// </summary>
        [AttributeLogicalName("defaultfilterspopulated")]
        [DisplayName("Default Filters Populated")]
        public bool? DefaultFiltersPopulated {
            get {
                return GetAttributeValue<bool?>("defaultfilterspopulated");
            }
        }
        
        /// <summary>
        /// <para>Select the mailbox associated with this user.</para>
        /// <para>Display Name: Mailbox</para>
        /// </summary>
        [AttributeLogicalName("defaultmailbox")]
        [DisplayName("Mailbox")]
        public EntityReference DefaultMailbox {
            get {
                return GetAttributeValue<EntityReference>("defaultmailbox");
            }
        }
        
        /// <summary>
        /// <para>Type a default folder name for the user's OneDrive For Business location.</para>
        /// <para>Display Name: Default OneDrive for Business Folder Name</para>
        /// </summary>
        [AttributeLogicalName("defaultodbfoldername")]
        [DisplayName("Default OneDrive for Business Folder Name")]
        [MaxLength(200)]
        public string DefaultOdbFolderName {
            get {
                return GetAttributeValue<string>("defaultodbfoldername");
            }
        }
        
        /// <summary>
        /// <para>User delete state</para>
        /// <para>Display Name: Deleted State</para>
        /// </summary>
        [AttributeLogicalName("deletedstate")]
        [DisplayName("Deleted State")]
        public SystemUser_DeletedState? DeletedState {
            get {
                return GetOptionSetValue<SystemUser_DeletedState>("deletedstate");
            }
        }
        
        /// <summary>
        /// <para>Reason for disabling the user.</para>
        /// <para>Display Name: Disabled Reason</para>
        /// </summary>
        [AttributeLogicalName("disabledreason")]
        [DisplayName("Disabled Reason")]
        [MaxLength(500)]
        public string DisabledReason {
            get {
                return GetAttributeValue<string>("disabledreason");
            }
        }
        
        /// <summary>
        /// <para>Whether to display the user in service views.</para>
        /// <para>Display Name: Display in Service Views</para>
        /// </summary>
        [AttributeLogicalName("displayinserviceviews")]
        [DisplayName("Display in Service Views")]
        public bool? DisplayInServiceViews {
            get {
                return GetAttributeValue<bool?>("displayinserviceviews");
            }
            set {
                SetAttributeValue("displayinserviceviews", value);
            }
        }
        
        /// <summary>
        /// <para>Active Directory domain of which the user is a member.</para>
        /// <para>Display Name: User Name</para>
        /// </summary>
        [AttributeLogicalName("domainname")]
        [DisplayName("User Name")]
        [MaxLength(1024)]
        public string DomainName {
            get {
                return GetAttributeValue<string>("domainname");
            }
            set {
                SetAttributeValue("domainname", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of the primary email address.</para>
        /// <para>Display Name: Primary Email Status</para>
        /// </summary>
        [AttributeLogicalName("emailrouteraccessapproval")]
        [DisplayName("Primary Email Status")]
        public SystemUser_EmailRouterAccessApproval? EmailRouterAccessApproval {
            get {
                return GetOptionSetValue<SystemUser_EmailRouterAccessApproval>("emailrouteraccessapproval");
            }
            set {
                SetOptionSetValue("emailrouteraccessapproval", value);
            }
        }
        
        /// <summary>
        /// <para>Employee identifier for the user.</para>
        /// <para>Display Name: Employee</para>
        /// </summary>
        [AttributeLogicalName("employeeid")]
        [DisplayName("Employee")]
        [MaxLength(100)]
        public string EmployeeId {
            get {
                return GetAttributeValue<string>("employeeid");
            }
            set {
                SetAttributeValue("employeeid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Entity Image Id</para>
        /// </summary>
        [AttributeLogicalName("entityimageid")]
        [DisplayName("Entity Image Id")]
        public Guid? EntityImageId {
            get {
                return GetAttributeValue<Guid?>("entityimageid");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the systemuser with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>First name of the user.</para>
        /// <para>Display Name: First Name</para>
        /// </summary>
        [AttributeLogicalName("firstname")]
        [DisplayName("First Name")]
        [MaxLength(256)]
        public string FirstName {
            get {
                return GetAttributeValue<string>("firstname");
            }
            set {
                SetAttributeValue("firstname", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string FullName {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Government identifier for the user.</para>
        /// <para>Display Name: Government</para>
        /// </summary>
        [AttributeLogicalName("governmentid")]
        [DisplayName("Government")]
        [MaxLength(100)]
        public string GovernmentId {
            get {
                return GetAttributeValue<string>("governmentid");
            }
            set {
                SetAttributeValue("governmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Home phone number for the user.</para>
        /// <para>Display Name: Home Phone</para>
        /// </summary>
        [AttributeLogicalName("homephone")]
        [DisplayName("Home Phone")]
        [MaxLength(50)]
        public string HomePhone {
            get {
                return GetAttributeValue<string>("homephone");
            }
            set {
                SetAttributeValue("homephone", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Unique user identity id</para>
        /// </summary>
        [AttributeLogicalName("identityid")]
        [DisplayName("Unique user identity id")]
        [Range(-2147483648, 2147483647)]
        public int? IdentityId {
            get {
                return GetAttributeValue<int?>("identityid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Incoming email delivery method for the user.</para>
        /// <para>Display Name: Incoming Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("incomingemaildeliverymethod")]
        [DisplayName("Incoming Email Delivery Method")]
        public SystemUser_IncomingEmailDeliveryMethod? IncomingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_IncomingEmailDeliveryMethod>("incomingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("incomingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Internal email address for the user.</para>
        /// <para>Display Name: Primary Email</para>
        /// </summary>
        [AttributeLogicalName("internalemailaddress")]
        [DisplayName("Primary Email")]
        [MaxLength(100)]
        public string InternalEMailAddress {
            get {
                return GetAttributeValue<string>("internalemailaddress");
            }
            set {
                SetAttributeValue("internalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User invitation status.</para>
        /// <para>Display Name: Invitation Status</para>
        /// </summary>
        [AttributeLogicalName("invitestatuscode")]
        [DisplayName("Invitation Status")]
        public SystemUser_InviteStatusCode? InviteStatusCode {
            get {
                return GetOptionSetValue<SystemUser_InviteStatusCode>("invitestatuscode");
            }
            set {
                SetOptionSetValue("invitestatuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Bypasses the selected user from IP firewall restriction</para>
        /// <para>Display Name: To bypass IP firewall restriction on the user</para>
        /// </summary>
        [AttributeLogicalName("isallowedbyipfirewall")]
        [DisplayName("To bypass IP firewall restriction on the user")]
        public bool? IsAllowedByIpFirewall {
            get {
                return GetAttributeValue<bool?>("isallowedbyipfirewall");
            }
            set {
                SetAttributeValue("isallowedbyipfirewall", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is enabled.</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("isdisabled")]
        [DisplayName("Status")]
        public bool? IsDisabled {
            get {
                return GetAttributeValue<bool?>("isdisabled");
            }
            set {
                SetAttributeValue("isdisabled", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the status of approval of the email address by O365 Admin.</para>
        /// <para>Display Name: Email Address O365 Admin Approval Status</para>
        /// </summary>
        [AttributeLogicalName("isemailaddressapprovedbyo365admin")]
        [DisplayName("Email Address O365 Admin Approval Status")]
        public bool? IsEmailAddressApprovedByO365Admin {
            get {
                return GetAttributeValue<bool?>("isemailaddressapprovedbyo365admin");
            }
        }
        
        /// <summary>
        /// <para>Check if user is an integration user.</para>
        /// <para>Display Name: Integration user mode</para>
        /// </summary>
        [AttributeLogicalName("isintegrationuser")]
        [DisplayName("Integration user mode")]
        public bool? IsIntegrationUser {
            get {
                return GetAttributeValue<bool?>("isintegrationuser");
            }
            set {
                SetAttributeValue("isintegrationuser", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is licensed.</para>
        /// <para>Display Name: User Licensed</para>
        /// </summary>
        [AttributeLogicalName("islicensed")]
        [DisplayName("User Licensed")]
        public bool? IsLicensed {
            get {
                return GetAttributeValue<bool?>("islicensed");
            }
            set {
                SetAttributeValue("islicensed", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the user is synced with the directory.</para>
        /// <para>Display Name: User Synced</para>
        /// </summary>
        [AttributeLogicalName("issyncwithdirectory")]
        [DisplayName("User Synced")]
        public bool? IsSyncWithDirectory {
            get {
                return GetAttributeValue<bool?>("issyncwithdirectory");
            }
            set {
                SetAttributeValue("issyncwithdirectory", value);
            }
        }
        
        /// <summary>
        /// <para>Job title of the user.</para>
        /// <para>Display Name: Job Title</para>
        /// </summary>
        [AttributeLogicalName("jobtitle")]
        [DisplayName("Job Title")]
        [MaxLength(100)]
        public string JobTitle {
            get {
                return GetAttributeValue<string>("jobtitle");
            }
            set {
                SetAttributeValue("jobtitle", value);
            }
        }
        
        /// <summary>
        /// <para>Last name of the user.</para>
        /// <para>Display Name: Last Name</para>
        /// </summary>
        [AttributeLogicalName("lastname")]
        [DisplayName("Last Name")]
        [MaxLength(256)]
        public string LastName {
            get {
                return GetAttributeValue<string>("lastname");
            }
            set {
                SetAttributeValue("lastname", value);
            }
        }
        
        /// <summary>
        /// <para>Middle name of the user.</para>
        /// <para>Display Name: Middle Name</para>
        /// </summary>
        [AttributeLogicalName("middlename")]
        [DisplayName("Middle Name")]
        [MaxLength(50)]
        public string MiddleName {
            get {
                return GetAttributeValue<string>("middlename");
            }
            set {
                SetAttributeValue("middlename", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile alert email address for the user.</para>
        /// <para>Display Name: Mobile Alert Email</para>
        /// </summary>
        [AttributeLogicalName("mobilealertemail")]
        [DisplayName("Mobile Alert Email")]
        [MaxLength(100)]
        public string MobileAlertEMail {
            get {
                return GetAttributeValue<string>("mobilealertemail");
            }
            set {
                SetAttributeValue("mobilealertemail", value);
            }
        }
        
        /// <summary>
        /// <para>Items contained with a particular SystemUser.</para>
        /// <para>Display Name: Mobile Offline Profile</para>
        /// </summary>
        [AttributeLogicalName("mobileofflineprofileid")]
        [DisplayName("Mobile Offline Profile")]
        public EntityReference MobileOfflineProfileId {
            get {
                return GetAttributeValue<EntityReference>("mobileofflineprofileid");
            }
            set {
                SetAttributeValue("mobileofflineprofileid", value);
            }
        }
        
        /// <summary>
        /// <para>Mobile phone number for the user.</para>
        /// <para>Display Name: Mobile Phone</para>
        /// </summary>
        [AttributeLogicalName("mobilephone")]
        [DisplayName("Mobile Phone")]
        [MaxLength(64)]
        public string MobilePhone {
            get {
                return GetAttributeValue<string>("mobilephone");
            }
            set {
                SetAttributeValue("mobilephone", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the user.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the user was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the systemuser.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Nickname of the user.</para>
        /// <para>Display Name: Nickname</para>
        /// </summary>
        [AttributeLogicalName("nickname")]
        [DisplayName("Nickname")]
        [MaxLength(50)]
        public string NickName {
            get {
                return GetAttributeValue<string>("nickname");
            }
            set {
                SetAttributeValue("nickname", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the user.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Outgoing email delivery method for the user.</para>
        /// <para>Display Name: Outgoing Email Delivery Method</para>
        /// </summary>
        [AttributeLogicalName("outgoingemaildeliverymethod")]
        [DisplayName("Outgoing Email Delivery Method")]
        public SystemUser_OutgoingEmailDeliveryMethod? OutgoingEmailDeliveryMethod {
            get {
                return GetOptionSetValue<SystemUser_OutgoingEmailDeliveryMethod>("outgoingemaildeliverymethod");
            }
            set {
                SetOptionSetValue("outgoingemaildeliverymethod", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the manager of the user.</para>
        /// <para>Display Name: Manager</para>
        /// </summary>
        [AttributeLogicalName("parentsystemuserid")]
        [DisplayName("Manager")]
        public EntityReference ParentSystemUserId {
            get {
                return GetAttributeValue<EntityReference>("parentsystemuserid");
            }
            set {
                SetAttributeValue("parentsystemuserid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Hi</para>
        /// </summary>
        [AttributeLogicalName("passporthi")]
        [DisplayName("Passport Hi")]
        [Range(0, 1000000000)]
        public int? PassportHi {
            get {
                return GetAttributeValue<int?>("passporthi");
            }
            set {
                SetAttributeValue("passporthi", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Passport Lo</para>
        /// </summary>
        [AttributeLogicalName("passportlo")]
        [DisplayName("Passport Lo")]
        [Range(0, 1000000000)]
        public int? PassportLo {
            get {
                return GetAttributeValue<int?>("passportlo");
            }
            set {
                SetAttributeValue("passportlo", value);
            }
        }
        
        /// <summary>
        /// <para>Personal email address of the user.</para>
        /// <para>Display Name: Email 2</para>
        /// </summary>
        [AttributeLogicalName("personalemailaddress")]
        [DisplayName("Email 2")]
        [MaxLength(100)]
        public string PersonalEMailAddress {
            get {
                return GetAttributeValue<string>("personalemailaddress");
            }
            set {
                SetAttributeValue("personalemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>URL for the Website on which a photo of the user is located.</para>
        /// <para>Display Name: Photo URL</para>
        /// </summary>
        [AttributeLogicalName("photourl")]
        [DisplayName("Photo URL")]
        [MaxLength(200)]
        public string PhotoUrl {
            get {
                return GetAttributeValue<string>("photourl");
            }
            set {
                SetAttributeValue("photourl", value);
            }
        }
        
        /// <summary>
        /// <para>User's position in hierarchical security model.</para>
        /// <para>Display Name: Position</para>
        /// </summary>
        [AttributeLogicalName("positionid")]
        [DisplayName("Position")]
        public EntityReference PositionId {
            get {
                return GetAttributeValue<EntityReference>("positionid");
            }
            set {
                SetAttributeValue("positionid", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred address for the user.</para>
        /// <para>Display Name: Preferred Address</para>
        /// </summary>
        [AttributeLogicalName("preferredaddresscode")]
        [DisplayName("Preferred Address")]
        public SystemUser_PreferredAddressCode? PreferredAddressCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredAddressCode>("preferredaddresscode");
            }
            set {
                SetOptionSetValue("preferredaddresscode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred email address for the user.</para>
        /// <para>Display Name: Preferred Email</para>
        /// </summary>
        [AttributeLogicalName("preferredemailcode")]
        [DisplayName("Preferred Email")]
        public SystemUser_PreferredEmailCode? PreferredEmailCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredEmailCode>("preferredemailcode");
            }
            set {
                SetOptionSetValue("preferredemailcode", value);
            }
        }
        
        /// <summary>
        /// <para>Preferred phone number for the user.</para>
        /// <para>Display Name: Preferred Phone</para>
        /// </summary>
        [AttributeLogicalName("preferredphonecode")]
        [DisplayName("Preferred Phone")]
        public SystemUser_PreferredPhoneCode? PreferredPhoneCode {
            get {
                return GetOptionSetValue<SystemUser_PreferredPhoneCode>("preferredphonecode");
            }
            set {
                SetOptionSetValue("preferredphonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Full name of the user.</para>
        /// <para>Display Name: Full Name</para>
        /// </summary>
        [AttributeLogicalName("fullname")]
        [DisplayName("Full Name")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("fullname");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the user.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Salutation for correspondence with the user.</para>
        /// <para>Display Name: Salutation</para>
        /// </summary>
        [AttributeLogicalName("salutation")]
        [DisplayName("Salutation")]
        [MaxLength(20)]
        public string Salutation {
            get {
                return GetAttributeValue<string>("salutation");
            }
            set {
                SetAttributeValue("salutation", value);
            }
        }
        
        /// <summary>
        /// <para>Check if user is a setup user.</para>
        /// <para>Display Name: Restricted Access Mode</para>
        /// </summary>
        [AttributeLogicalName("setupuser")]
        [DisplayName("Restricted Access Mode")]
        public bool? SetupUser {
            get {
                return GetAttributeValue<bool?>("setupuser");
            }
            set {
                SetAttributeValue("setupuser", value);
            }
        }
        
        /// <summary>
        /// <para>SharePoint Work Email Address</para>
        /// <para>Display Name: SharePoint Email Address</para>
        /// </summary>
        [AttributeLogicalName("sharepointemailaddress")]
        [DisplayName("SharePoint Email Address")]
        [MaxLength(1024)]
        public string SharePointEmailAddress {
            get {
                return GetAttributeValue<string>("sharepointemailaddress");
            }
            set {
                SetAttributeValue("sharepointemailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Site at which the user is located.</para>
        /// <para>Display Name: Site</para>
        /// </summary>
        [AttributeLogicalName("siteid")]
        [DisplayName("Site")]
        public EntityReference SiteId {
            get {
                return GetAttributeValue<EntityReference>("siteid");
            }
            set {
                SetAttributeValue("siteid", value);
            }
        }
        
        /// <summary>
        /// <para>Skill set of the user.</para>
        /// <para>Display Name: Skills</para>
        /// </summary>
        [AttributeLogicalName("skills")]
        [DisplayName("Skills")]
        [MaxLength(100)]
        public string Skills {
            get {
                return GetAttributeValue<string>("skills");
            }
            set {
                SetAttributeValue("skills", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>The type of user</para>
        /// <para>Display Name: System Managed User Type</para>
        /// </summary>
        [AttributeLogicalName("systemmanagedusertype")]
        [DisplayName("System Managed User Type")]
        public SystemUser_SystemManagedUserType? SystemManagedUserType {
            get {
                return GetOptionSetValue<SystemUser_SystemManagedUserType>("systemmanagedusertype");
            }
            set {
                SetOptionSetValue("systemmanagedusertype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the territory to which the user is assigned.</para>
        /// <para>Display Name: Territory</para>
        /// </summary>
        [AttributeLogicalName("territoryid")]
        [DisplayName("Territory")]
        public EntityReference TerritoryId {
            get {
                return GetAttributeValue<EntityReference>("territoryid");
            }
            set {
                SetAttributeValue("territoryid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Title of the user.</para>
        /// <para>Display Name: Title</para>
        /// </summary>
        [AttributeLogicalName("title")]
        [DisplayName("Title")]
        [MaxLength(128)]
        public string Title {
            get {
                return GetAttributeValue<string>("title");
            }
            set {
                SetAttributeValue("title", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the systemuser.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the type of user license.</para>
        /// <para>Display Name: User License Type</para>
        /// </summary>
        [AttributeLogicalName("userlicensetype")]
        [DisplayName("User License Type")]
        [Range(-2147483648, 2147483647)]
        public int? UserLicenseType {
            get {
                return GetAttributeValue<int?>("userlicensetype");
            }
            set {
                SetAttributeValue("userlicensetype", value);
            }
        }
        
        /// <summary>
        /// <para> User PUID User Identifiable Information</para>
        /// <para>Display Name: User PUID</para>
        /// </summary>
        [AttributeLogicalName("userpuid")]
        [DisplayName("User PUID")]
        [MaxLength(100)]
        public string UserPuid {
            get {
                return GetAttributeValue<string>("userpuid");
            }
        }
        
        /// <summary>
        /// <para>Version number of the user.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Windows Live ID</para>
        /// <para>Display Name: Windows Live ID</para>
        /// </summary>
        [AttributeLogicalName("windowsliveid")]
        [DisplayName("Windows Live ID")]
        [MaxLength(1024)]
        public string WindowsLiveID {
            get {
                return GetAttributeValue<string>("windowsliveid");
            }
            set {
                SetAttributeValue("windowsliveid", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer login email address</para>
        /// <para>Display Name: Yammer Email</para>
        /// </summary>
        [AttributeLogicalName("yammeremailaddress")]
        [DisplayName("Yammer Email")]
        [MaxLength(200)]
        public string YammerEmailAddress {
            get {
                return GetAttributeValue<string>("yammeremailaddress");
            }
            set {
                SetAttributeValue("yammeremailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>User's Yammer ID</para>
        /// <para>Display Name: Yammer User ID</para>
        /// </summary>
        [AttributeLogicalName("yammeruserid")]
        [DisplayName("Yammer User ID")]
        [MaxLength(128)]
        public string YammerUserId {
            get {
                return GetAttributeValue<string>("yammeruserid");
            }
            set {
                SetAttributeValue("yammeruserid", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the first name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi First Name</para>
        /// </summary>
        [AttributeLogicalName("yomifirstname")]
        [DisplayName("Yomi First Name")]
        [MaxLength(64)]
        public string YomiFirstName {
            get {
                return GetAttributeValue<string>("yomifirstname");
            }
            set {
                SetAttributeValue("yomifirstname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Full Name</para>
        /// </summary>
        [AttributeLogicalName("yomifullname")]
        [DisplayName("Yomi Full Name")]
        [MaxLength(200)]
        public string YomiFullName {
            get {
                return GetAttributeValue<string>("yomifullname");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the last name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Last Name</para>
        /// </summary>
        [AttributeLogicalName("yomilastname")]
        [DisplayName("Yomi Last Name")]
        [MaxLength(64)]
        public string YomiLastName {
            get {
                return GetAttributeValue<string>("yomilastname");
            }
            set {
                SetAttributeValue("yomilastname", value);
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the middle name of the user, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Middle Name</para>
        /// </summary>
        [AttributeLogicalName("yomimiddlename")]
        [DisplayName("Yomi Middle Name")]
        [MaxLength(50)]
        public string YomiMiddleName {
            get {
                return GetAttributeValue<string>("yomimiddlename");
            }
            set {
                SetAttributeValue("yomimiddlename", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user - Application user or Bot application user</para>
        /// <para>Display Name: User type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_agentType")]
        [DisplayName("User type")]
        public SystemUser_msdyn_AgentType? msdyn_AgentType {
            get {
                return GetOptionSetValue<SystemUser_msdyn_AgentType>("msdyn_agentType");
            }
            set {
                SetOptionSetValue("msdyn_agentType", value);
            }
        }
        
        /// <summary>
        /// <para>Application ID of the bot.</para>
        /// <para>Display Name: Bot application ID</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botapplicationid")]
        [DisplayName("Bot application ID")]
        [MaxLength(100)]
        public string msdyn_BotApplicationId {
            get {
                return GetAttributeValue<string>("msdyn_botapplicationid");
            }
            set {
                SetAttributeValue("msdyn_botapplicationid", value);
            }
        }
        
        /// <summary>
        /// <para>BOT User Description</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botdescription")]
        [DisplayName("Description")]
        public string msdyn_BotDescription {
            get {
                return GetAttributeValue<string>("msdyn_botdescription");
            }
            set {
                SetAttributeValue("msdyn_botdescription", value);
            }
        }
        
        /// <summary>
        /// <para>Bot User Endpoint</para>
        /// <para>Display Name: Endpoint</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botendpoint")]
        [DisplayName("Endpoint")]
        [MaxLength(100)]
        public string msdyn_BotEndpoint {
            get {
                return GetAttributeValue<string>("msdyn_botendpoint");
            }
            set {
                SetAttributeValue("msdyn_botendpoint", value);
            }
        }
        
        /// <summary>
        /// <para>Indicates the type of bot</para>
        /// <para>Display Name: Bot Provider</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botprovider")]
        [DisplayName("Bot Provider")]
        public SystemUser_msdyn_BotProvider? msdyn_BotProvider {
            get {
                return GetOptionSetValue<SystemUser_msdyn_BotProvider>("msdyn_botprovider");
            }
            set {
                SetOptionSetValue("msdyn_botprovider", value);
            }
        }
        
        /// <summary>
        /// <para>Bot User Secret Keys</para>
        /// <para>Display Name: Secret Keys</para>
        /// </summary>
        [AttributeLogicalName("msdyn_botsecretkeys")]
        [DisplayName("Secret Keys")]
        [MaxLength(100)]
        public string msdyn_BotSecretKeys {
            get {
                return GetAttributeValue<string>("msdyn_botsecretkeys");
            }
            set {
                SetAttributeValue("msdyn_botsecretkeys", value);
            }
        }
        
        /// <summary>
        /// <para>Capacity associated with the User.</para>
        /// <para>Display Name: Capacity</para>
        /// </summary>
        [AttributeLogicalName("msdyn_capacity")]
        [DisplayName("Capacity")]
        [Range(0, 2147483647)]
        public int? msdyn_Capacity {
            get {
                return GetAttributeValue<int?>("msdyn_capacity");
            }
            set {
                SetAttributeValue("msdyn_capacity", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for Presence associated with User.</para>
        /// <para>Display Name: Default Presence</para>
        /// </summary>
        [AttributeLogicalName("msdyn_defaultpresenceiduser")]
        [DisplayName("Default Presence")]
        public EntityReference msdyn_DefaultPresenceIdUser {
            get {
                return GetAttributeValue<EntityReference>("msdyn_defaultpresenceiduser");
            }
            set {
                SetAttributeValue("msdyn_defaultpresenceiduser", value);
            }
        }
        
        /// <summary>
        /// <para>Environment Id of the CDS environment that owns the bot user.</para>
        /// <para>Display Name: Owning Environment Id</para>
        /// </summary>
        [AttributeLogicalName("msdyn_owningenvironmentid")]
        [DisplayName("Owning Environment Id")]
        [MaxLength(500)]
        public string msdyn_OwningEnvironmentId {
            get {
                return GetAttributeValue<string>("msdyn_owningenvironmentid");
            }
            set {
                SetAttributeValue("msdyn_owningenvironmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Type of user - CRM or BOT user</para>
        /// <para>Display Name: Type</para>
        /// </summary>
        [AttributeLogicalName("msdyn_usertype")]
        [DisplayName("Type")]
        public SystemUser_msdyn_UserType? msdyn_UserType {
            get {
                return GetOptionSetValue<SystemUser_msdyn_UserType>("msdyn_usertype");
            }
            set {
                SetOptionSetValue("msdyn_usertype", value);
            }
        }
        
        /// <summary>
        /// <para>Bot handle</para>
        /// <para>Display Name: Bot handle</para>
        /// </summary>
        [AttributeLogicalName("msdyn_bothandle")]
        [DisplayName("Bot handle")]
        [MaxLength(100)]
        public string msdyn_bothandle {
            get {
                return GetAttributeValue<string>("msdyn_bothandle");
            }
            set {
                SetAttributeValue("msdyn_bothandle", value);
            }
        }
        
        /// <summary>
        /// <para>Describes whether user is opted out or not</para>
        /// <para>Display Name: GDPR Optout</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gdproptout")]
        [DisplayName("GDPR Optout")]
        public bool? msdyn_gdproptout {
            get {
                return GetAttributeValue<bool?>("msdyn_gdproptout");
            }
            set {
                SetAttributeValue("msdyn_gdproptout", value);
            }
        }
        
        /// <summary>
        /// <para>Field to bind grid wrapper control</para>
        /// <para>Display Name: Grid Wrapper Control field</para>
        /// </summary>
        [AttributeLogicalName("msdyn_gridwrappercontrolfield")]
        [DisplayName("Grid Wrapper Control field")]
        [MaxLength(4000)]
        public string msdyn_gridwrappercontrolfield {
            get {
                return GetAttributeValue<string>("msdyn_gridwrappercontrolfield");
            }
            set {
                SetAttributeValue("msdyn_gridwrappercontrolfield", value);
            }
        }
        
        /// <summary>
        /// <para>Check if swarm is enabled for the experts.</para>
        /// <para>Display Name: Expert Enabled Swarm</para>
        /// </summary>
        [AttributeLogicalName("msdyn_isexpertenabledforswarm")]
        [DisplayName("Expert Enabled Swarm")]
        public bool? msdyn_isexpertenabledforswarm {
            get {
                return GetAttributeValue<bool?>("msdyn_isexpertenabledforswarm");
            }
            set {
                SetAttributeValue("msdyn_isexpertenabledforswarm", value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_createdonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuser_modifiedonbehalfby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_createdby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_createdby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referencedlk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntities<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("lk_systemuserbase_modifiedby", EntityRole.Referenced, value);
            }
        }
        
        [RelationshipSchemaName("user_parent_user", EntityRole.Referenced)]
        public IEnumerable<SystemUser> Referenceduser_parent_user {
            get {
                return GetRelatedEntities<SystemUser>("user_parent_user", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("user_parent_user", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_createdonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_createdonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_createdonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuser_modifiedonbehalfby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_systemuserbase_createdby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_createdby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_createdby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_systemuserbase_modifiedby", EntityRole.Referencing)]
        public SystemUser Referencinglk_systemuserbase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_systemuserbase_modifiedby", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("lk_systemuserbase_modifiedby", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("parentsystemuserid")]
        [RelationshipSchemaName("user_parent_user", EntityRole.Referencing)]
        public SystemUser Referencinguser_parent_user {
            get {
                return GetRelatedEntity<SystemUser>("user_parent_user", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("user_parent_user", EntityRole.Referencing, value);
            }
        }
        
        [RelationshipSchemaName("SystemUser_Email_EmailSender")]
        public IEnumerable<Email> SystemUser_Email_EmailSender {
            get {
                return GetRelatedEntities<Email>("SystemUser_Email_EmailSender", null);
            }
            set {
                SetRelatedEntities("SystemUser_Email_EmailSender", null, value);
            }
        }
        
        [RelationshipSchemaName("annotation_owning_user")]
        public IEnumerable<Annotation> annotation_owning_user {
            get {
                return GetRelatedEntities<Annotation>("annotation_owning_user", null);
            }
            set {
                SetRelatedEntities("annotation_owning_user", null, value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_system_users")]
        public BusinessUnit business_unit_system_users {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_system_users", null);
            }
            set {
                SetRelatedEntity("business_unit_system_users", null, value);
            }
        }
        
        [RelationshipSchemaName("contact_owning_user")]
        public IEnumerable<Contact> contact_owning_user {
            get {
                return GetRelatedEntities<Contact>("contact_owning_user", null);
            }
            set {
                SetRelatedEntities("contact_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("email_acceptingentity_systemuser")]
        public IEnumerable<Email> email_acceptingentity_systemuser {
            get {
                return GetRelatedEntities<Email>("email_acceptingentity_systemuser", null);
            }
            set {
                SetRelatedEntities("email_acceptingentity_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_awardgiftcard_recruiter_systemuser")]
        public IEnumerable<ff_awardgiftcard> ff_awardgiftcard_recruiter_systemuser {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("ff_awardgiftcard_recruiter_systemuser", null);
            }
            set {
                SetRelatedEntities("ff_awardgiftcard_recruiter_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_systemuser_createdby")]
        public IEnumerable<ff_casenote> ff_casenote_systemuser_createdby {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_systemuser_createdby", null);
            }
            set {
                SetRelatedEntities("ff_casenote_systemuser_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_systemuser_createdonbehalfby")]
        public IEnumerable<ff_casenote> ff_casenote_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_systemuser_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("ff_casenote_systemuser_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_systemuser_modifiedby")]
        public IEnumerable<ff_casenote> ff_casenote_systemuser_modifiedby {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_systemuser_modifiedby", null);
            }
            set {
                SetRelatedEntities("ff_casenote_systemuser_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_systemuser_modifiedonbehalfby")]
        public IEnumerable<ff_casenote> ff_casenote_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_systemuser_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("ff_casenote_systemuser_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_systemuser_owninguser")]
        public IEnumerable<ff_casenote> ff_casenote_systemuser_owninguser {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_systemuser_owninguser", null);
            }
            set {
                SetRelatedEntities("ff_casenote_systemuser_owninguser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_email_emailhandledby_systemuser")]
        public IEnumerable<Email> ff_email_emailhandledby_systemuser {
            get {
                return GetRelatedEntities<Email>("ff_email_emailhandledby_systemuser", null);
            }
            set {
                SetRelatedEntities("ff_email_emailhandledby_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_casemanager_systemuser")]
        public IEnumerable<Incident> ff_incident_casemanager_systemuser {
            get {
                return GetRelatedEntities<Incident>("ff_incident_casemanager_systemuser", null);
            }
            set {
                SetRelatedEntities("ff_incident_casemanager_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_systemuser_createdby")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_systemuser_createdby {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_systemuser_createdby", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_systemuser_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_systemuser_createdonbehalfby")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_systemuser_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_systemuser_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_systemuser_modifiedby")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_systemuser_modifiedby {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_systemuser_modifiedby", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_systemuser_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_systemuser_modifiedonbehalfby")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_systemuser_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_systemuser_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_systemuser_owninguser")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_systemuser_owninguser {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_systemuser_owninguser", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_systemuser_owninguser", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_reportingofopportunity_recruiter_systemuser")]
        public IEnumerable<ff_reportingofopportunity> ff_reportingofopportunity_recruiter_systemuser {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("ff_reportingofopportunity_recruiter_systemuser", null);
            }
            set {
                SetRelatedEntities("ff_reportingofopportunity_recruiter_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_owning_user")]
        public IEnumerable<Lead> lead_owning_user {
            get {
                return GetRelatedEntities<Lead>("lead_owning_user", null);
            }
            set {
                SetRelatedEntities("lead_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdby")]
        public IEnumerable<Account> lk_accountbase_createdby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_createdonbehalfby")]
        public IEnumerable<Account> lk_accountbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedby")]
        public IEnumerable<Account> lk_accountbase_modifiedby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_accountbase_modifiedonbehalfby")]
        public IEnumerable<Account> lk_accountbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Account>("lk_accountbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_accountbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_createdby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_createdby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_createdonbehalfby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_createdonbehalfby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_modifiedby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_modifiedby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_activitypointer_modifiedonbehalfby")]
        public IEnumerable<ActivityPointer> lk_activitypointer_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ActivityPointer>("lk_activitypointer_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_activitypointer_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdby")]
        public IEnumerable<Annotation> lk_annotationbase_createdby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_createdonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_annotationbase_modifiedonbehalfby")]
        public IEnumerable<Annotation> lk_annotationbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Annotation>("lk_annotationbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_annotationbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_createdby")]
        public IEnumerable<Appointment> lk_appointment_createdby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_createdby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_createdonbehalfby")]
        public IEnumerable<Appointment> lk_appointment_createdonbehalfby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_modifiedby")]
        public IEnumerable<Appointment> lk_appointment_modifiedby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_appointment_modifiedonbehalfby")]
        public IEnumerable<Appointment> lk_appointment_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Appointment>("lk_appointment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_appointment_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_createdonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_createdonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunit_modifiedonbehalfby")]
        public IEnumerable<BusinessUnit> lk_businessunit_modifiedonbehalfby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunit_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_businessunit_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_createdby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_createdby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_businessunitbase_modifiedby")]
        public IEnumerable<BusinessUnit> lk_businessunitbase_modifiedby {
            get {
                return GetRelatedEntities<BusinessUnit>("lk_businessunitbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_businessunitbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_createdonbehalfby")]
        public IEnumerable<Contact> lk_contact_createdonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contact_modifiedonbehalfby")]
        public IEnumerable<Contact> lk_contact_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Contact>("lk_contact_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_contact_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_createdby")]
        public IEnumerable<Contact> lk_contactbase_createdby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_contactbase_modifiedby")]
        public IEnumerable<Contact> lk_contactbase_modifiedby {
            get {
                return GetRelatedEntities<Contact>("lk_contactbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_contactbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddress_createdonbehalfby")]
        public IEnumerable<CustomerAddress> lk_customeraddress_createdonbehalfby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddress_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddress_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddress_modifiedonbehalfby")]
        public IEnumerable<CustomerAddress> lk_customeraddress_modifiedonbehalfby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddress_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddress_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddressbase_createdby")]
        public IEnumerable<CustomerAddress> lk_customeraddressbase_createdby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddressbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddressbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_customeraddressbase_modifiedby")]
        public IEnumerable<CustomerAddress> lk_customeraddressbase_modifiedby {
            get {
                return GetRelatedEntities<CustomerAddress>("lk_customeraddressbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_customeraddressbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdby")]
        public IEnumerable<Email> lk_email_createdby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_createdonbehalfby")]
        public IEnumerable<Email> lk_email_createdonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedby")]
        public IEnumerable<Email> lk_email_modifiedby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_email_modifiedonbehalfby")]
        public IEnumerable<Email> lk_email_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Email>("lk_email_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_email_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_createdby")]
        public IEnumerable<Entitlement> lk_entitlement_createdby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_createdby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_createdonbehalfby")]
        public IEnumerable<Entitlement> lk_entitlement_createdonbehalfby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_modifiedby")]
        public IEnumerable<Entitlement> lk_entitlement_modifiedby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_entitlement_modifiedonbehalfby")]
        public IEnumerable<Entitlement> lk_entitlement_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Entitlement>("lk_entitlement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_entitlement_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_activities_createdby")]
        public IEnumerable<ff_activities> lk_ff_activities_createdby {
            get {
                return GetRelatedEntities<ff_activities>("lk_ff_activities_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_activities_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_activities_createdonbehalfby")]
        public IEnumerable<ff_activities> lk_ff_activities_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_activities>("lk_ff_activities_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_activities_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_activities_modifiedby")]
        public IEnumerable<ff_activities> lk_ff_activities_modifiedby {
            get {
                return GetRelatedEntities<ff_activities>("lk_ff_activities_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_activities_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_activities_modifiedonbehalfby")]
        public IEnumerable<ff_activities> lk_ff_activities_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_activities>("lk_ff_activities_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_activities_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_awardgiftcard_createdby")]
        public IEnumerable<ff_awardgiftcard> lk_ff_awardgiftcard_createdby {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("lk_ff_awardgiftcard_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_awardgiftcard_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_awardgiftcard_createdonbehalfby")]
        public IEnumerable<ff_awardgiftcard> lk_ff_awardgiftcard_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("lk_ff_awardgiftcard_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_awardgiftcard_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_awardgiftcard_modifiedby")]
        public IEnumerable<ff_awardgiftcard> lk_ff_awardgiftcard_modifiedby {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("lk_ff_awardgiftcard_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_awardgiftcard_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_awardgiftcard_modifiedonbehalfby")]
        public IEnumerable<ff_awardgiftcard> lk_ff_awardgiftcard_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("lk_ff_awardgiftcard_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_awardgiftcard_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casecategory_createdby")]
        public IEnumerable<ff_casecategory> lk_ff_casecategory_createdby {
            get {
                return GetRelatedEntities<ff_casecategory>("lk_ff_casecategory_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casecategory_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casecategory_createdonbehalfby")]
        public IEnumerable<ff_casecategory> lk_ff_casecategory_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_casecategory>("lk_ff_casecategory_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casecategory_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casecategory_modifiedby")]
        public IEnumerable<ff_casecategory> lk_ff_casecategory_modifiedby {
            get {
                return GetRelatedEntities<ff_casecategory>("lk_ff_casecategory_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casecategory_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casecategory_modifiedonbehalfby")]
        public IEnumerable<ff_casecategory> lk_ff_casecategory_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_casecategory>("lk_ff_casecategory_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casecategory_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casetype_createdby")]
        public IEnumerable<ff_casetype> lk_ff_casetype_createdby {
            get {
                return GetRelatedEntities<ff_casetype>("lk_ff_casetype_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casetype_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casetype_createdonbehalfby")]
        public IEnumerable<ff_casetype> lk_ff_casetype_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_casetype>("lk_ff_casetype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casetype_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casetype_modifiedby")]
        public IEnumerable<ff_casetype> lk_ff_casetype_modifiedby {
            get {
                return GetRelatedEntities<ff_casetype>("lk_ff_casetype_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casetype_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_casetype_modifiedonbehalfby")]
        public IEnumerable<ff_casetype> lk_ff_casetype_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_casetype>("lk_ff_casetype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_casetype_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_collectiveagreement_createdby")]
        public IEnumerable<ff_collectiveagreement> lk_ff_collectiveagreement_createdby {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("lk_ff_collectiveagreement_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_collectiveagreement_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_collectiveagreement_createdonbehalfby")]
        public IEnumerable<ff_collectiveagreement> lk_ff_collectiveagreement_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("lk_ff_collectiveagreement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_collectiveagreement_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_collectiveagreement_modifiedby")]
        public IEnumerable<ff_collectiveagreement> lk_ff_collectiveagreement_modifiedby {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("lk_ff_collectiveagreement_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_collectiveagreement_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_collectiveagreement_modifiedonbehalfby")]
        public IEnumerable<ff_collectiveagreement> lk_ff_collectiveagreement_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("lk_ff_collectiveagreement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_collectiveagreement_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_committeemember_createdby")]
        public IEnumerable<ff_committeemember> lk_ff_committeemember_createdby {
            get {
                return GetRelatedEntities<ff_committeemember>("lk_ff_committeemember_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_committeemember_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_committeemember_createdonbehalfby")]
        public IEnumerable<ff_committeemember> lk_ff_committeemember_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_committeemember>("lk_ff_committeemember_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_committeemember_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_committeemember_modifiedby")]
        public IEnumerable<ff_committeemember> lk_ff_committeemember_modifiedby {
            get {
                return GetRelatedEntities<ff_committeemember>("lk_ff_committeemember_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_committeemember_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_committeemember_modifiedonbehalfby")]
        public IEnumerable<ff_committeemember> lk_ff_committeemember_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_committeemember>("lk_ff_committeemember_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_committeemember_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_configuration_createdby")]
        public IEnumerable<ff_configuration> lk_ff_configuration_createdby {
            get {
                return GetRelatedEntities<ff_configuration>("lk_ff_configuration_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_configuration_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_configuration_createdonbehalfby")]
        public IEnumerable<ff_configuration> lk_ff_configuration_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_configuration>("lk_ff_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_configuration_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_configuration_modifiedby")]
        public IEnumerable<ff_configuration> lk_ff_configuration_modifiedby {
            get {
                return GetRelatedEntities<ff_configuration>("lk_ff_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_configuration_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_configuration_modifiedonbehalfby")]
        public IEnumerable<ff_configuration> lk_ff_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_configuration>("lk_ff_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_employment_createdby")]
        public IEnumerable<ff_employment> lk_ff_employment_createdby {
            get {
                return GetRelatedEntities<ff_employment>("lk_ff_employment_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_employment_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_employment_createdonbehalfby")]
        public IEnumerable<ff_employment> lk_ff_employment_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_employment>("lk_ff_employment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_employment_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_employment_modifiedby")]
        public IEnumerable<ff_employment> lk_ff_employment_modifiedby {
            get {
                return GetRelatedEntities<ff_employment>("lk_ff_employment_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_employment_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_employment_modifiedonbehalfby")]
        public IEnumerable<ff_employment> lk_ff_employment_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_employment>("lk_ff_employment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_employment_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_eventattendee_createdby")]
        public IEnumerable<ff_eventattendee> lk_ff_eventattendee_createdby {
            get {
                return GetRelatedEntities<ff_eventattendee>("lk_ff_eventattendee_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_eventattendee_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_eventattendee_createdonbehalfby")]
        public IEnumerable<ff_eventattendee> lk_ff_eventattendee_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_eventattendee>("lk_ff_eventattendee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_eventattendee_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_eventattendee_modifiedby")]
        public IEnumerable<ff_eventattendee> lk_ff_eventattendee_modifiedby {
            get {
                return GetRelatedEntities<ff_eventattendee>("lk_ff_eventattendee_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_eventattendee_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_eventattendee_modifiedonbehalfby")]
        public IEnumerable<ff_eventattendee> lk_ff_eventattendee_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_eventattendee>("lk_ff_eventattendee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_eventattendee_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_giftcard_createdby")]
        public IEnumerable<ff_giftcard> lk_ff_giftcard_createdby {
            get {
                return GetRelatedEntities<ff_giftcard>("lk_ff_giftcard_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_giftcard_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_giftcard_createdonbehalfby")]
        public IEnumerable<ff_giftcard> lk_ff_giftcard_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_giftcard>("lk_ff_giftcard_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_giftcard_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_giftcard_modifiedby")]
        public IEnumerable<ff_giftcard> lk_ff_giftcard_modifiedby {
            get {
                return GetRelatedEntities<ff_giftcard>("lk_ff_giftcard_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_giftcard_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_giftcard_modifiedonbehalfby")]
        public IEnumerable<ff_giftcard> lk_ff_giftcard_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_giftcard>("lk_ff_giftcard_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_giftcard_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_incidentparty_createdby")]
        public IEnumerable<ff_incidentparty> lk_ff_incidentparty_createdby {
            get {
                return GetRelatedEntities<ff_incidentparty>("lk_ff_incidentparty_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_incidentparty_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_incidentparty_createdonbehalfby")]
        public IEnumerable<ff_incidentparty> lk_ff_incidentparty_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_incidentparty>("lk_ff_incidentparty_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_incidentparty_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_incidentparty_modifiedby")]
        public IEnumerable<ff_incidentparty> lk_ff_incidentparty_modifiedby {
            get {
                return GetRelatedEntities<ff_incidentparty>("lk_ff_incidentparty_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_incidentparty_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_incidentparty_modifiedonbehalfby")]
        public IEnumerable<ff_incidentparty> lk_ff_incidentparty_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_incidentparty>("lk_ff_incidentparty_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_incidentparty_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_membershipfee_createdby")]
        public IEnumerable<ff_membershipfee> lk_ff_membershipfee_createdby {
            get {
                return GetRelatedEntities<ff_membershipfee>("lk_ff_membershipfee_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_membershipfee_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_membershipfee_createdonbehalfby")]
        public IEnumerable<ff_membershipfee> lk_ff_membershipfee_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_membershipfee>("lk_ff_membershipfee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_membershipfee_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_membershipfee_modifiedby")]
        public IEnumerable<ff_membershipfee> lk_ff_membershipfee_modifiedby {
            get {
                return GetRelatedEntities<ff_membershipfee>("lk_ff_membershipfee_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_membershipfee_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_membershipfee_modifiedonbehalfby")]
        public IEnumerable<ff_membershipfee> lk_ff_membershipfee_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_membershipfee>("lk_ff_membershipfee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_membershipfee_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrust_createdby")]
        public IEnumerable<ff_positionoftrust> lk_ff_positionoftrust_createdby {
            get {
                return GetRelatedEntities<ff_positionoftrust>("lk_ff_positionoftrust_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrust_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrust_createdonbehalfby")]
        public IEnumerable<ff_positionoftrust> lk_ff_positionoftrust_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_positionoftrust>("lk_ff_positionoftrust_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrust_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrust_modifiedby")]
        public IEnumerable<ff_positionoftrust> lk_ff_positionoftrust_modifiedby {
            get {
                return GetRelatedEntities<ff_positionoftrust>("lk_ff_positionoftrust_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrust_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrust_modifiedonbehalfby")]
        public IEnumerable<ff_positionoftrust> lk_ff_positionoftrust_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_positionoftrust>("lk_ff_positionoftrust_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrust_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrusttype_createdby")]
        public IEnumerable<ff_positionoftrusttype> lk_ff_positionoftrusttype_createdby {
            get {
                return GetRelatedEntities<ff_positionoftrusttype>("lk_ff_positionoftrusttype_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrusttype_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrusttype_createdonbehalfby")]
        public IEnumerable<ff_positionoftrusttype> lk_ff_positionoftrusttype_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_positionoftrusttype>("lk_ff_positionoftrusttype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrusttype_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrusttype_modifiedby")]
        public IEnumerable<ff_positionoftrusttype> lk_ff_positionoftrusttype_modifiedby {
            get {
                return GetRelatedEntities<ff_positionoftrusttype>("lk_ff_positionoftrusttype_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrusttype_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_positionoftrusttype_modifiedonbehalfby")]
        public IEnumerable<ff_positionoftrusttype> lk_ff_positionoftrusttype_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_positionoftrusttype>("lk_ff_positionoftrusttype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_positionoftrusttype_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_reportingofopportunity_createdby")]
        public IEnumerable<ff_reportingofopportunity> lk_ff_reportingofopportunity_createdby {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("lk_ff_reportingofopportunity_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_reportingofopportunity_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_reportingofopportunity_createdonbehalfby")]
        public IEnumerable<ff_reportingofopportunity> lk_ff_reportingofopportunity_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("lk_ff_reportingofopportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_reportingofopportunity_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_reportingofopportunity_modifiedby")]
        public IEnumerable<ff_reportingofopportunity> lk_ff_reportingofopportunity_modifiedby {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("lk_ff_reportingofopportunity_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_reportingofopportunity_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_reportingofopportunity_modifiedonbehalfby")]
        public IEnumerable<ff_reportingofopportunity> lk_ff_reportingofopportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("lk_ff_reportingofopportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_reportingofopportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_union_createdby")]
        public IEnumerable<ff_union> lk_ff_union_createdby {
            get {
                return GetRelatedEntities<ff_union>("lk_ff_union_createdby", null);
            }
            set {
                SetRelatedEntities("lk_ff_union_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_union_createdonbehalfby")]
        public IEnumerable<ff_union> lk_ff_union_createdonbehalfby {
            get {
                return GetRelatedEntities<ff_union>("lk_ff_union_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_union_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_union_modifiedby")]
        public IEnumerable<ff_union> lk_ff_union_modifiedby {
            get {
                return GetRelatedEntities<ff_union>("lk_ff_union_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_ff_union_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_ff_union_modifiedonbehalfby")]
        public IEnumerable<ff_union> lk_ff_union_modifiedonbehalfby {
            get {
                return GetRelatedEntities<ff_union>("lk_ff_union_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_ff_union_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_createdby")]
        public IEnumerable<Incident> lk_incidentbase_createdby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_createdonbehalfby")]
        public IEnumerable<Incident> lk_incidentbase_createdonbehalfby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_modifiedby")]
        public IEnumerable<Incident> lk_incidentbase_modifiedby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentbase_modifiedonbehalfby")]
        public IEnumerable<Incident> lk_incidentbase_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Incident>("lk_incidentbase_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentbase_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_createdby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_createdby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_createdby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_createdonbehalfby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_createdonbehalfby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_modifiedby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_modifiedby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_incidentresolution_modifiedonbehalfby")]
        public IEnumerable<IncidentResolution> lk_incidentresolution_modifiedonbehalfby {
            get {
                return GetRelatedEntities<IncidentResolution>("lk_incidentresolution_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_incidentresolution_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_lead_createdonbehalfby")]
        public IEnumerable<Lead> lk_lead_createdonbehalfby {
            get {
                return GetRelatedEntities<Lead>("lk_lead_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_lead_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_lead_modifiedonbehalfby")]
        public IEnumerable<Lead> lk_lead_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Lead>("lk_lead_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_lead_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_leadbase_createdby")]
        public IEnumerable<Lead> lk_leadbase_createdby {
            get {
                return GetRelatedEntities<Lead>("lk_leadbase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_leadbase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_leadbase_modifiedby")]
        public IEnumerable<Lead> lk_leadbase_modifiedby {
            get {
                return GetRelatedEntities<Lead>("lk_leadbase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_leadbase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_createdby")]
        public IEnumerable<Mailbox> lk_mailbox_createdby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_createdby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_createdonbehalfby")]
        public IEnumerable<Mailbox> lk_mailbox_createdonbehalfby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_modifiedby")]
        public IEnumerable<Mailbox> lk_mailbox_modifiedby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_mailbox_modifiedonbehalfby")]
        public IEnumerable<Mailbox> lk_mailbox_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Mailbox>("lk_mailbox_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_mailbox_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunity_createdonbehalfby")]
        public IEnumerable<Opportunity> lk_opportunity_createdonbehalfby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunity_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunity_modifiedonbehalfby")]
        public IEnumerable<Opportunity> lk_opportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_opportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitybase_createdby")]
        public IEnumerable<Opportunity> lk_opportunitybase_createdby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunitybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_opportunitybase_modifiedby")]
        public IEnumerable<Opportunity> lk_opportunitybase_modifiedby {
            get {
                return GetRelatedEntities<Opportunity>("lk_opportunitybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_opportunitybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_createdby")]
        public IEnumerable<PhoneCall> lk_phonecall_createdby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_createdby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_createdonbehalfby")]
        public IEnumerable<PhoneCall> lk_phonecall_createdonbehalfby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_modifiedby")]
        public IEnumerable<PhoneCall> lk_phonecall_modifiedby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonecall_modifiedonbehalfby")]
        public IEnumerable<PhoneCall> lk_phonecall_modifiedonbehalfby {
            get {
                return GetRelatedEntities<PhoneCall>("lk_phonecall_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonecall_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonetocaseprocess_createdby")]
        public IEnumerable<PhoneToCaseProcess> lk_phonetocaseprocess_createdby {
            get {
                return GetRelatedEntities<PhoneToCaseProcess>("lk_phonetocaseprocess_createdby", null);
            }
            set {
                SetRelatedEntities("lk_phonetocaseprocess_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonetocaseprocess_createdonbehalfby")]
        public IEnumerable<PhoneToCaseProcess> lk_phonetocaseprocess_createdonbehalfby {
            get {
                return GetRelatedEntities<PhoneToCaseProcess>("lk_phonetocaseprocess_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonetocaseprocess_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonetocaseprocess_modifiedby")]
        public IEnumerable<PhoneToCaseProcess> lk_phonetocaseprocess_modifiedby {
            get {
                return GetRelatedEntities<PhoneToCaseProcess>("lk_phonetocaseprocess_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_phonetocaseprocess_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_phonetocaseprocess_modifiedonbehalfby")]
        public IEnumerable<PhoneToCaseProcess> lk_phonetocaseprocess_modifiedonbehalfby {
            get {
                return GetRelatedEntities<PhoneToCaseProcess>("lk_phonetocaseprocess_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_phonetocaseprocess_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queue_createdonbehalfby")]
        public IEnumerable<Queue> lk_queue_createdonbehalfby {
            get {
                return GetRelatedEntities<Queue>("lk_queue_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queue_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queue_modifiedonbehalfby")]
        public IEnumerable<Queue> lk_queue_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Queue>("lk_queue_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queue_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queuebase_createdby")]
        public IEnumerable<Queue> lk_queuebase_createdby {
            get {
                return GetRelatedEntities<Queue>("lk_queuebase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_queuebase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queuebase_modifiedby")]
        public IEnumerable<Queue> lk_queuebase_modifiedby {
            get {
                return GetRelatedEntities<Queue>("lk_queuebase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_queuebase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitem_createdonbehalfby")]
        public IEnumerable<QueueItem> lk_queueitem_createdonbehalfby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitem_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queueitem_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitem_modifiedonbehalfby")]
        public IEnumerable<QueueItem> lk_queueitem_modifiedonbehalfby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitem_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_queueitem_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_createdby")]
        public IEnumerable<QueueItem> lk_queueitembase_createdby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_modifiedby")]
        public IEnumerable<QueueItem> lk_queueitembase_modifiedby {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_queueitembase_workerid")]
        public IEnumerable<QueueItem> lk_queueitembase_workerid {
            get {
                return GetRelatedEntities<QueueItem>("lk_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntities("lk_queueitembase_workerid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_createdonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_createdonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquery_modifiedonbehalfby")]
        public IEnumerable<SavedQuery> lk_savedquery_modifiedonbehalfby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquery_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_savedquery_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_createdby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_createdby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_savedquerybase_modifiedby")]
        public IEnumerable<SavedQuery> lk_savedquerybase_modifiedby {
            get {
                return GetRelatedEntities<SavedQuery>("lk_savedquerybase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_savedquerybase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdby")]
        public IEnumerable<Task> lk_task_createdby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public IEnumerable<Task> lk_task_createdonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedby")]
        public IEnumerable<Task> lk_task_modifiedby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public IEnumerable<Task> lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Task>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public IEnumerable<Team> lk_team_createdonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public IEnumerable<Team> lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntities<Team>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntities("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public IEnumerable<Team> lk_teambase_administratorid {
            get {
                return GetRelatedEntities<Team>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntities("lk_teambase_administratorid", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_createdby")]
        public IEnumerable<Team> lk_teambase_createdby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_createdby", null, value);
            }
        }
        
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public IEnumerable<Team> lk_teambase_modifiedby {
            get {
                return GetRelatedEntities<Team>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntities("lk_teambase_modifiedby", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_emailaddressapprovedby_systemuser")]
        public IEnumerable<Mailbox> mailbox_emailaddressapprovedby_systemuser {
            get {
                return GetRelatedEntities<Mailbox>("mailbox_emailaddressapprovedby_systemuser", null);
            }
            set {
                SetRelatedEntities("mailbox_emailaddressapprovedby_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_regarding_systemuser")]
        public IEnumerable<Mailbox> mailbox_regarding_systemuser {
            get {
                return GetRelatedEntities<Mailbox>("mailbox_regarding_systemuser", null);
            }
            set {
                SetRelatedEntities("mailbox_regarding_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("mailbox_testandenablelastattemptedby_systemuser")]
        public IEnumerable<Mailbox> mailbox_testandenablelastattemptedby_systemuser {
            get {
                return GetRelatedEntities<Mailbox>("mailbox_testandenablelastattemptedby_systemuser", null);
            }
            set {
                SetRelatedEntities("mailbox_testandenablelastattemptedby_systemuser", null, value);
            }
        }
        
        [RelationshipSchemaName("opportunity_owning_user")]
        public IEnumerable<Opportunity> opportunity_owning_user {
            get {
                return GetRelatedEntities<Opportunity>("opportunity_owning_user", null);
            }
            set {
                SetRelatedEntities("opportunity_owning_user", null, value);
            }
        }
        
        [RelationshipSchemaName("queue_primary_user")]
        public IEnumerable<Queue> queue_primary_user {
            get {
                return GetRelatedEntities<Queue>("queue_primary_user", null);
            }
            set {
                SetRelatedEntities("queue_primary_user", null, value);
            }
        }
        
        [AttributeLogicalName("queueid")]
        [RelationshipSchemaName("queue_system_user")]
        public Queue queue_system_user {
            get {
                return GetRelatedEntity<Queue>("queue_system_user", null);
            }
            set {
                SetRelatedEntity("queue_system_user", null, value);
            }
        }
        
        [RelationshipSchemaName("queuemembership_association")]
        public IEnumerable<Queue> queuemembership_association {
            get {
                return GetRelatedEntities<Queue>("queuemembership_association", null);
            }
            set {
                SetRelatedEntities("queuemembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_accounts")]
        public IEnumerable<Account> system_user_accounts {
            get {
                return GetRelatedEntities<Account>("system_user_accounts", null);
            }
            set {
                SetRelatedEntities("system_user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_activity_parties")]
        public IEnumerable<ActivityParty> system_user_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("system_user_activity_parties", null);
            }
            set {
                SetRelatedEntities("system_user_activity_parties", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_contacts")]
        public IEnumerable<Contact> system_user_contacts {
            get {
                return GetRelatedEntities<Contact>("system_user_contacts", null);
            }
            set {
                SetRelatedEntities("system_user_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("system_user_incidents")]
        public IEnumerable<Incident> system_user_incidents {
            get {
                return GetRelatedEntities<Incident>("system_user_incidents", null);
            }
            set {
                SetRelatedEntities("system_user_incidents", null, value);
            }
        }
        
        [AttributeLogicalName("defaultmailbox")]
        [RelationshipSchemaName("systemuser_defaultmailbox_mailbox")]
        public Mailbox systemuser_defaultmailbox_mailbox {
            get {
                return GetRelatedEntity<Mailbox>("systemuser_defaultmailbox_mailbox", null);
            }
            set {
                SetRelatedEntity("systemuser_defaultmailbox_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<Team> teammembership_association {
            get {
                return GetRelatedEntities<Team>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        [RelationshipSchemaName("user_accounts")]
        public IEnumerable<Account> user_accounts {
            get {
                return GetRelatedEntities<Account>("user_accounts", null);
            }
            set {
                SetRelatedEntities("user_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("user_activity")]
        public IEnumerable<ActivityPointer> user_activity {
            get {
                return GetRelatedEntities<ActivityPointer>("user_activity", null);
            }
            set {
                SetRelatedEntities("user_activity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_appointment")]
        public IEnumerable<Appointment> user_appointment {
            get {
                return GetRelatedEntities<Appointment>("user_appointment", null);
            }
            set {
                SetRelatedEntities("user_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("user_email")]
        public IEnumerable<Email> user_email {
            get {
                return GetRelatedEntities<Email>("user_email", null);
            }
            set {
                SetRelatedEntities("user_email", null, value);
            }
        }
        
        [RelationshipSchemaName("user_entitlement")]
        public IEnumerable<Entitlement> user_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("user_entitlement", null);
            }
            set {
                SetRelatedEntities("user_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_activities")]
        public IEnumerable<ff_activities> user_ff_activities {
            get {
                return GetRelatedEntities<ff_activities>("user_ff_activities", null);
            }
            set {
                SetRelatedEntities("user_ff_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_awardgiftcard")]
        public IEnumerable<ff_awardgiftcard> user_ff_awardgiftcard {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("user_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntities("user_ff_awardgiftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_casecategory")]
        public IEnumerable<ff_casecategory> user_ff_casecategory {
            get {
                return GetRelatedEntities<ff_casecategory>("user_ff_casecategory", null);
            }
            set {
                SetRelatedEntities("user_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_casetype")]
        public IEnumerable<ff_casetype> user_ff_casetype {
            get {
                return GetRelatedEntities<ff_casetype>("user_ff_casetype", null);
            }
            set {
                SetRelatedEntities("user_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_collectiveagreement")]
        public IEnumerable<ff_collectiveagreement> user_ff_collectiveagreement {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("user_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntities("user_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_committeemember")]
        public IEnumerable<ff_committeemember> user_ff_committeemember {
            get {
                return GetRelatedEntities<ff_committeemember>("user_ff_committeemember", null);
            }
            set {
                SetRelatedEntities("user_ff_committeemember", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_configuration")]
        public IEnumerable<ff_configuration> user_ff_configuration {
            get {
                return GetRelatedEntities<ff_configuration>("user_ff_configuration", null);
            }
            set {
                SetRelatedEntities("user_ff_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_employment")]
        public IEnumerable<ff_employment> user_ff_employment {
            get {
                return GetRelatedEntities<ff_employment>("user_ff_employment", null);
            }
            set {
                SetRelatedEntities("user_ff_employment", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_eventattendee")]
        public IEnumerable<ff_eventattendee> user_ff_eventattendee {
            get {
                return GetRelatedEntities<ff_eventattendee>("user_ff_eventattendee", null);
            }
            set {
                SetRelatedEntities("user_ff_eventattendee", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_giftcard")]
        public IEnumerable<ff_giftcard> user_ff_giftcard {
            get {
                return GetRelatedEntities<ff_giftcard>("user_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("user_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_incidentparty")]
        public IEnumerable<ff_incidentparty> user_ff_incidentparty {
            get {
                return GetRelatedEntities<ff_incidentparty>("user_ff_incidentparty", null);
            }
            set {
                SetRelatedEntities("user_ff_incidentparty", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_membershipfee")]
        public IEnumerable<ff_membershipfee> user_ff_membershipfee {
            get {
                return GetRelatedEntities<ff_membershipfee>("user_ff_membershipfee", null);
            }
            set {
                SetRelatedEntities("user_ff_membershipfee", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_positionoftrust")]
        public IEnumerable<ff_positionoftrust> user_ff_positionoftrust {
            get {
                return GetRelatedEntities<ff_positionoftrust>("user_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntities("user_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_reportingofopportunity")]
        public IEnumerable<ff_reportingofopportunity> user_ff_reportingofopportunity {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("user_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntities("user_ff_reportingofopportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("user_ff_union")]
        public IEnumerable<ff_union> user_ff_union {
            get {
                return GetRelatedEntities<ff_union>("user_ff_union", null);
            }
            set {
                SetRelatedEntities("user_ff_union", null, value);
            }
        }
        
        [RelationshipSchemaName("user_incidentresolution")]
        public IEnumerable<IncidentResolution> user_incidentresolution {
            get {
                return GetRelatedEntities<IncidentResolution>("user_incidentresolution", null);
            }
            set {
                SetRelatedEntities("user_incidentresolution", null, value);
            }
        }
        
        [RelationshipSchemaName("user_mailbox")]
        public IEnumerable<Mailbox> user_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("user_mailbox", null);
            }
            set {
                SetRelatedEntities("user_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("user_phonecall")]
        public IEnumerable<PhoneCall> user_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("user_phonecall", null);
            }
            set {
                SetRelatedEntities("user_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("user_task")]
        public IEnumerable<Task> user_task {
            get {
                return GetRelatedEntities<Task>("user_task", null);
            }
            set {
                SetRelatedEntities("user_task", null, value);
            }
        }
        
        public static SystemUser Retrieve(IOrganizationService service, Guid id, params Expression<Func<SystemUser,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public static SystemUser Retrieve_aadobjectid(IOrganizationService service, Guid AzureActiveDirectoryObjectId, params Expression<Func<SystemUser,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'AAD ObjectId'</para>
        /// </summary>
        public void AltKey_aadobjectid(Guid AzureActiveDirectoryObjectId) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
        }
    }
    
    /// <summary>
    /// <para>Generic activity representing work needed to be done.</para>
    /// <para>Display Name: Task</para>
    /// </summary>
    [EntityLogicalName("task")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Task : ExtendedEntity<TaskState, Task_StatusCode> {
        
        public const string EntityLogicalName = "task";
        
        public const int EntityTypeCode = 4212;
        
        public Task() : 
                base(EntityLogicalName) {
        }
        
        public Task(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the task.</para>
        /// <para>Display Name: Task</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Task")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Type the number of minutes spent on the task. The duration is used in reporting.</para>
        /// <para>Display Name: Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual end date and time of the task. By default, it displays when the activity was completed or canceled.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the actual start date and time for the task. By default, it displays when the task was created.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Type a category to identify the task type, such as lead gathering or customer follow up, to tie the task to a business group or function.</para>
        /// <para>Display Name: Category</para>
        /// </summary>
        [AttributeLogicalName("category")]
        [DisplayName("Category")]
        [MaxLength(250)]
        public string Category {
            get {
                return GetAttributeValue<string>("category");
            }
            set {
                SetAttributeValue("category", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Shows who created the record on behalf of another user.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Assigned Task Unique Id</para>
        /// <para>Display Name: Assigned Task Unique Id</para>
        /// </summary>
        [AttributeLogicalName("crmtaskassigneduniqueid")]
        [DisplayName("Assigned Task Unique Id")]
        public Guid? CrmTaskAssignedUniqueId {
            get {
                return GetAttributeValue<Guid?>("crmtaskassigneduniqueid");
            }
            set {
                SetAttributeValue("crmtaskassigneduniqueid", value);
            }
        }
        
        /// <summary>
        /// <para>Type additional information to describe the task.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information which specifies whether the task was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information which specifies if the task was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Shows who last updated the record on behalf of another user.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the record owner's business unit.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the task.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the task.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Type the percentage complete value for the task to track tasks to completion.</para>
        /// <para>Display Name: Percent Complete</para>
        /// </summary>
        [AttributeLogicalName("percentcomplete")]
        [DisplayName("Percent Complete")]
        [Range(0, 100)]
        public int? PercentComplete {
            get {
                return GetAttributeValue<int?>("percentcomplete");
            }
            set {
                SetAttributeValue("percentcomplete", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Select the priority so that preferred customers or critical issues are handled quickly.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public Task_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<Task_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the task relates to.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the Task record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this Task. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the task, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Enter the expected due date and time.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service that is associated with this activity.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows whether the task is open, completed, or canceled. Completed and canceled tasks are read-only and can't be edited.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public TaskState? StateCode {
            get {
                return GetOptionSetValue<TaskState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Select the task's status.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public Task_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<Task_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Type a subcategory to identify the task type and relate the activity to a specific product, sales region, business group, or other function.</para>
        /// <para>Display Name: Sub-Category</para>
        /// </summary>
        [AttributeLogicalName("subcategory")]
        [DisplayName("Sub-Category")]
        [MaxLength(250)]
        public string Subcategory {
            get {
                return GetAttributeValue<string>("subcategory");
            }
            set {
                SetAttributeValue("subcategory", value);
            }
        }
        
        /// <summary>
        /// <para>Type a short description about the objective or primary topic of the task.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(200)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Subscription</para>
        /// </summary>
        [AttributeLogicalName("subscriptionid")]
        [DisplayName("Subscription")]
        public Guid? SubscriptionId {
            get {
                return GetAttributeValue<Guid?>("subscriptionid");
            }
            set {
                SetAttributeValue("subscriptionid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the local currency for the record to make sure budgets are reported in the correct currency.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the task.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Account_Tasks")]
        public Account Account_Tasks {
            get {
                return GetRelatedEntity<Account>("Account_Tasks", null);
            }
            set {
                SetRelatedEntity("Account_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Contact_Tasks")]
        public Contact Contact_Tasks {
            get {
                return GetRelatedEntity<Contact>("Contact_Tasks", null);
            }
            set {
                SetRelatedEntity("Contact_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Incident_Tasks")]
        public Incident Incident_Tasks {
            get {
                return GetRelatedEntity<Incident>("Incident_Tasks", null);
            }
            set {
                SetRelatedEntity("Incident_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Lead_Tasks")]
        public Lead Lead_Tasks {
            get {
                return GetRelatedEntity<Lead>("Lead_Tasks", null);
            }
            set {
                SetRelatedEntity("Lead_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("Opportunity_Tasks")]
        public Opportunity Opportunity_Tasks {
            get {
                return GetRelatedEntity<Opportunity>("Opportunity_Tasks", null);
            }
            set {
                SetRelatedEntity("Opportunity_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("Task_Annotation")]
        public IEnumerable<Annotation> Task_Annotation {
            get {
                return GetRelatedEntities<Annotation>("Task_Annotation", null);
            }
            set {
                SetRelatedEntities("Task_Annotation", null, value);
            }
        }
        
        [RelationshipSchemaName("Task_QueueItem")]
        public IEnumerable<QueueItem> Task_QueueItem {
            get {
                return GetRelatedEntities<QueueItem>("Task_QueueItem", null);
            }
            set {
                SetRelatedEntities("Task_QueueItem", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_task")]
        public ActivityPointer activity_pointer_task {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_task", null);
            }
            set {
                SetRelatedEntity("activity_pointer_task", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_task_activities")]
        public BusinessUnit business_unit_task_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_task_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_task_activities", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_Tasks")]
        public Entitlement entitlement_Tasks {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_Tasks", null);
            }
            set {
                SetRelatedEntity("entitlement_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_Tasks")]
        public ff_activities ff_activities_Tasks {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_Tasks", null);
            }
            set {
                SetRelatedEntity("ff_activities_Tasks", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_task_createdby")]
        public SystemUser lk_task_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_task_createdonbehalfby")]
        public SystemUser lk_task_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_task_modifiedby")]
        public SystemUser lk_task_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_task_modifiedonbehalfby")]
        public SystemUser lk_task_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_task_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_task_modifiedonbehalfby", null, value);
            }
        }
        
        [RelationshipSchemaName("task_activity_parties")]
        public IEnumerable<ActivityParty> task_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("task_activity_parties", null);
            }
            set {
                SetRelatedEntities("task_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_task")]
        public Team team_task {
            get {
                return GetRelatedEntity<Team>("team_task", null);
            }
            set {
                SetRelatedEntity("team_task", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_task")]
        public SystemUser user_task {
            get {
                return GetRelatedEntity<SystemUser>("user_task", null);
            }
            set {
                SetRelatedEntity("user_task", null, value);
            }
        }
        
        public static Task Retrieve(IOrganizationService service, Guid id, params Expression<Func<Task,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Collection of system users that routinely collaborate. Teams can be used to simplify record sharing and provide team members with common access to organization data when team members belong to different Business Units.</para>
    /// <para>Display Name: Team</para>
    /// </summary>
    [EntityLogicalName("team")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class Team : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "team";
        
        public const int EntityTypeCode = 9;
        
        public Team() : 
                base(EntityLogicalName) {
        }
        
        public Team(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("name");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team.</para>
        /// <para>Display Name: Team</para>
        /// </summary>
        [AttributeLogicalName("teamid")]
        [DisplayName("Team")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
            set {
                SetId("teamid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user primary responsible for the team.</para>
        /// <para>Display Name: Administrator</para>
        /// </summary>
        [AttributeLogicalName("administratorid")]
        [DisplayName("Administrator")]
        public EntityReference AdministratorId {
            get {
                return GetAttributeValue<EntityReference>("administratorid");
            }
            set {
                SetAttributeValue("administratorid", value);
            }
        }
        
        /// <summary>
        /// <para>The object Id for a group.</para>
        /// <para>Display Name: Object Id for a group</para>
        /// </summary>
        [AttributeLogicalName("azureactivedirectoryobjectid")]
        [DisplayName("Object Id for a group")]
        public Guid? AzureActiveDirectoryObjectId {
            get {
                return GetAttributeValue<Guid?>("azureactivedirectoryobjectid");
            }
            set {
                SetAttributeValue("azureactivedirectoryobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit with which the team is associated.</para>
        /// <para>Display Name: Business Unit</para>
        /// </summary>
        [AttributeLogicalName("businessunitid")]
        [DisplayName("Business Unit")]
        public EntityReference BusinessUnitId {
            get {
                return GetAttributeValue<EntityReference>("businessunitid");
            }
            set {
                SetAttributeValue("businessunitid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the team.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the team.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>The delegated authorization context for the team.</para>
        /// <para>Display Name: Delegated authorization</para>
        /// </summary>
        [AttributeLogicalName("delegatedauthorizationid")]
        [DisplayName("Delegated authorization")]
        public EntityReference DelegatedAuthorizationId {
            get {
                return GetAttributeValue<EntityReference>("delegatedauthorizationid");
            }
            set {
                SetAttributeValue("delegatedauthorizationid", value);
            }
        }
        
        /// <summary>
        /// <para>Description of the team.</para>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Description")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>Email address for the team.</para>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("emailaddress")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string EMailAddress {
            get {
                return GetAttributeValue<string>("emailaddress");
            }
            set {
                SetAttributeValue("emailaddress", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the team with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the data import or data migration that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Information about whether the team is a default business unit team.</para>
        /// <para>Display Name: Is Default</para>
        /// </summary>
        [AttributeLogicalName("isdefault")]
        [DisplayName("Is Default")]
        public bool? IsDefault {
            get {
                return GetAttributeValue<bool?>("isdefault");
            }
        }
        
        [AttributeLogicalName("issastokenset")]
        public bool? IsSasTokenSet {
            get {
                return GetAttributeValue<bool?>("issastokenset");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership Type</para>
        /// </summary>
        [AttributeLogicalName("membershiptype")]
        [DisplayName("Membership Type")]
        public Team_MembershipType? MembershipType {
            get {
                return GetOptionSetValue<Team_MembershipType>("membershiptype");
            }
            set {
                SetOptionSetValue("membershiptype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who last modified the team.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the team was last modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the team.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string Name {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the organization associated with the team.</para>
        /// <para>Display Name: Organization </para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization ")]
        public Guid? OrganizationId {
            get {
                return GetAttributeValue<Guid?>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Name of the team.</para>
        /// <para>Display Name: Team Name</para>
        /// </summary>
        [AttributeLogicalName("name")]
        [DisplayName("Team Name")]
        [MaxLength(160)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("name");
            }
            set {
                SetAttributeValue("name", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the default queue for the team.</para>
        /// <para>Display Name: Default Queue</para>
        /// </summary>
        [AttributeLogicalName("queueid")]
        [DisplayName("Default Queue")]
        public EntityReference QueueId {
            get {
                return GetAttributeValue<EntityReference>("queueid");
            }
            set {
                SetAttributeValue("queueid", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the record that the team relates to.</para>
        /// <para>Display Name: Regarding Object Id</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding Object Id")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Share Link Qualifier</para>
        /// </summary>
        [AttributeLogicalName("sharelinkqualifier")]
        [DisplayName("Share Link Qualifier")]
        [MaxLength(1250)]
        public string ShareLinkQualifier {
            get {
                return GetAttributeValue<string>("sharelinkqualifier");
            }
        }
        
        /// <summary>
        /// <para>Shows the ID of the stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Select whether the team will be managed by the system.</para>
        /// <para>Display Name: Is System Managed</para>
        /// </summary>
        [AttributeLogicalName("systemmanaged")]
        [DisplayName("Is System Managed")]
        public bool? SystemManaged {
            get {
                return GetAttributeValue<bool?>("systemmanaged");
            }
        }
        
        /// <summary>
        /// <para>Shows the team template that is associated with the team.</para>
        /// <para>Display Name: Team Template Identifier</para>
        /// </summary>
        [AttributeLogicalName("teamtemplateid")]
        [DisplayName("Team Template Identifier")]
        public EntityReference TeamTemplateId {
            get {
                return GetAttributeValue<EntityReference>("teamtemplateid");
            }
            set {
                SetAttributeValue("teamtemplateid", value);
            }
        }
        
        /// <summary>
        /// <para>Select the team type.</para>
        /// <para>Display Name: Team Type</para>
        /// </summary>
        [AttributeLogicalName("teamtype")]
        [DisplayName("Team Type")]
        public Team_TeamType? TeamType {
            get {
                return GetOptionSetValue<Team_TeamType>("teamtype");
            }
            set {
                SetOptionSetValue("teamtype", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the team.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the team.</para>
        /// <para>Display Name: Version number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Pronunciation of the full name of the team, written in phonetic hiragana or katakana characters.</para>
        /// <para>Display Name: Yomi Name</para>
        /// </summary>
        [AttributeLogicalName("yominame")]
        [DisplayName("Yomi Name")]
        [MaxLength(160)]
        public string YomiName {
            get {
                return GetAttributeValue<string>("yominame");
            }
            set {
                SetAttributeValue("yominame", value);
            }
        }
        
        /// <summary>
        /// <para>Kredsnummer</para>
        /// <para>Display Name: Union key</para>
        /// </summary>
        [AttributeLogicalName("ff_unionkey")]
        [DisplayName("Union key")]
        [MaxLength(100)]
        public string ff_unionkey {
            get {
                return GetAttributeValue<string>("ff_unionkey");
            }
            set {
                SetAttributeValue("ff_unionkey", value);
            }
        }
        
        [AttributeLogicalName("businessunitid")]
        [RelationshipSchemaName("business_unit_teams")]
        public BusinessUnit business_unit_teams {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_teams", null);
            }
            set {
                SetRelatedEntity("business_unit_teams", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_team_owningteam")]
        public IEnumerable<ff_casenote> ff_casenote_team_owningteam {
            get {
                return GetRelatedEntities<ff_casenote>("ff_casenote_team_owningteam", null);
            }
            set {
                SetRelatedEntities("ff_casenote_team_owningteam", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_team_owningteam")]
        public IEnumerable<ff_medlemsnote> ff_medlemsnote_team_owningteam {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_medlemsnote_team_owningteam", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_team_owningteam", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_union_team_team")]
        public IEnumerable<ff_union> ff_union_team_team {
            get {
                return GetRelatedEntities<ff_union>("ff_union_team_team", null);
            }
            set {
                SetRelatedEntities("ff_union_team_team", null, value);
            }
        }
        
        [RelationshipSchemaName("lead_owning_team")]
        public IEnumerable<Lead> lead_owning_team {
            get {
                return GetRelatedEntities<Lead>("lead_owning_team", null);
            }
            set {
                SetRelatedEntities("lead_owning_team", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_team_createdonbehalfby")]
        public SystemUser lk_team_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_team_modifiedonbehalfby")]
        public SystemUser lk_team_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_team_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_team_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("administratorid")]
        [RelationshipSchemaName("lk_teambase_administratorid")]
        public SystemUser lk_teambase_administratorid {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_administratorid", null);
            }
            set {
                SetRelatedEntity("lk_teambase_administratorid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_teambase_createdby")]
        public SystemUser lk_teambase_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_createdby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_teambase_modifiedby")]
        public SystemUser lk_teambase_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_teambase_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_teambase_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunity_Teams")]
        public Opportunity opportunity_Teams {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_Teams", null);
            }
            set {
                SetRelatedEntity("opportunity_Teams", null, value);
            }
        }
        
        [AttributeLogicalName("queueid")]
        [RelationshipSchemaName("queue_team")]
        public Queue queue_team {
            get {
                return GetRelatedEntity<Queue>("queue_team", null);
            }
            set {
                SetRelatedEntity("queue_team", null, value);
            }
        }
        
        [RelationshipSchemaName("team_accounts")]
        public IEnumerable<Account> team_accounts {
            get {
                return GetRelatedEntities<Account>("team_accounts", null);
            }
            set {
                SetRelatedEntities("team_accounts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_activity")]
        public IEnumerable<ActivityPointer> team_activity {
            get {
                return GetRelatedEntities<ActivityPointer>("team_activity", null);
            }
            set {
                SetRelatedEntities("team_activity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_annotations")]
        public IEnumerable<Annotation> team_annotations {
            get {
                return GetRelatedEntities<Annotation>("team_annotations", null);
            }
            set {
                SetRelatedEntities("team_annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("team_appointment")]
        public IEnumerable<Appointment> team_appointment {
            get {
                return GetRelatedEntities<Appointment>("team_appointment", null);
            }
            set {
                SetRelatedEntities("team_appointment", null, value);
            }
        }
        
        [RelationshipSchemaName("team_contacts")]
        public IEnumerable<Contact> team_contacts {
            get {
                return GetRelatedEntities<Contact>("team_contacts", null);
            }
            set {
                SetRelatedEntities("team_contacts", null, value);
            }
        }
        
        [RelationshipSchemaName("team_email")]
        public IEnumerable<Email> team_email {
            get {
                return GetRelatedEntities<Email>("team_email", null);
            }
            set {
                SetRelatedEntities("team_email", null, value);
            }
        }
        
        [RelationshipSchemaName("team_entitlement")]
        public IEnumerable<Entitlement> team_entitlement {
            get {
                return GetRelatedEntities<Entitlement>("team_entitlement", null);
            }
            set {
                SetRelatedEntities("team_entitlement", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_activities")]
        public IEnumerable<ff_activities> team_ff_activities {
            get {
                return GetRelatedEntities<ff_activities>("team_ff_activities", null);
            }
            set {
                SetRelatedEntities("team_ff_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_awardgiftcard")]
        public IEnumerable<ff_awardgiftcard> team_ff_awardgiftcard {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("team_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntities("team_ff_awardgiftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_casecategory")]
        public IEnumerable<ff_casecategory> team_ff_casecategory {
            get {
                return GetRelatedEntities<ff_casecategory>("team_ff_casecategory", null);
            }
            set {
                SetRelatedEntities("team_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_casetype")]
        public IEnumerable<ff_casetype> team_ff_casetype {
            get {
                return GetRelatedEntities<ff_casetype>("team_ff_casetype", null);
            }
            set {
                SetRelatedEntities("team_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_collectiveagreement")]
        public IEnumerable<ff_collectiveagreement> team_ff_collectiveagreement {
            get {
                return GetRelatedEntities<ff_collectiveagreement>("team_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntities("team_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_committeemember")]
        public IEnumerable<ff_committeemember> team_ff_committeemember {
            get {
                return GetRelatedEntities<ff_committeemember>("team_ff_committeemember", null);
            }
            set {
                SetRelatedEntities("team_ff_committeemember", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_configuration")]
        public IEnumerable<ff_configuration> team_ff_configuration {
            get {
                return GetRelatedEntities<ff_configuration>("team_ff_configuration", null);
            }
            set {
                SetRelatedEntities("team_ff_configuration", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_employment")]
        public IEnumerable<ff_employment> team_ff_employment {
            get {
                return GetRelatedEntities<ff_employment>("team_ff_employment", null);
            }
            set {
                SetRelatedEntities("team_ff_employment", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_eventattendee")]
        public IEnumerable<ff_eventattendee> team_ff_eventattendee {
            get {
                return GetRelatedEntities<ff_eventattendee>("team_ff_eventattendee", null);
            }
            set {
                SetRelatedEntities("team_ff_eventattendee", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_giftcard")]
        public IEnumerable<ff_giftcard> team_ff_giftcard {
            get {
                return GetRelatedEntities<ff_giftcard>("team_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("team_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_incidentparty")]
        public IEnumerable<ff_incidentparty> team_ff_incidentparty {
            get {
                return GetRelatedEntities<ff_incidentparty>("team_ff_incidentparty", null);
            }
            set {
                SetRelatedEntities("team_ff_incidentparty", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_membershipfee")]
        public IEnumerable<ff_membershipfee> team_ff_membershipfee {
            get {
                return GetRelatedEntities<ff_membershipfee>("team_ff_membershipfee", null);
            }
            set {
                SetRelatedEntities("team_ff_membershipfee", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_positionoftrust")]
        public IEnumerable<ff_positionoftrust> team_ff_positionoftrust {
            get {
                return GetRelatedEntities<ff_positionoftrust>("team_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntities("team_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_reportingofopportunity")]
        public IEnumerable<ff_reportingofopportunity> team_ff_reportingofopportunity {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("team_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntities("team_ff_reportingofopportunity", null, value);
            }
        }
        
        [RelationshipSchemaName("team_ff_union")]
        public IEnumerable<ff_union> team_ff_union {
            get {
                return GetRelatedEntities<ff_union>("team_ff_union", null);
            }
            set {
                SetRelatedEntities("team_ff_union", null, value);
            }
        }
        
        [RelationshipSchemaName("team_incidentresolution")]
        public IEnumerable<IncidentResolution> team_incidentresolution {
            get {
                return GetRelatedEntities<IncidentResolution>("team_incidentresolution", null);
            }
            set {
                SetRelatedEntities("team_incidentresolution", null, value);
            }
        }
        
        [RelationshipSchemaName("team_incidents")]
        public IEnumerable<Incident> team_incidents {
            get {
                return GetRelatedEntities<Incident>("team_incidents", null);
            }
            set {
                SetRelatedEntities("team_incidents", null, value);
            }
        }
        
        [RelationshipSchemaName("team_mailbox")]
        public IEnumerable<Mailbox> team_mailbox {
            get {
                return GetRelatedEntities<Mailbox>("team_mailbox", null);
            }
            set {
                SetRelatedEntities("team_mailbox", null, value);
            }
        }
        
        [RelationshipSchemaName("team_opportunities")]
        public IEnumerable<Opportunity> team_opportunities {
            get {
                return GetRelatedEntities<Opportunity>("team_opportunities", null);
            }
            set {
                SetRelatedEntities("team_opportunities", null, value);
            }
        }
        
        [RelationshipSchemaName("team_phonecall")]
        public IEnumerable<PhoneCall> team_phonecall {
            get {
                return GetRelatedEntities<PhoneCall>("team_phonecall", null);
            }
            set {
                SetRelatedEntities("team_phonecall", null, value);
            }
        }
        
        [RelationshipSchemaName("team_queueitembase_workerid")]
        public IEnumerable<QueueItem> team_queueitembase_workerid {
            get {
                return GetRelatedEntities<QueueItem>("team_queueitembase_workerid", null);
            }
            set {
                SetRelatedEntities("team_queueitembase_workerid", null, value);
            }
        }
        
        [RelationshipSchemaName("team_task")]
        public IEnumerable<Task> team_task {
            get {
                return GetRelatedEntities<Task>("team_task", null);
            }
            set {
                SetRelatedEntities("team_task", null, value);
            }
        }
        
        [RelationshipSchemaName("teammembership_association")]
        public IEnumerable<SystemUser> teammembership_association {
            get {
                return GetRelatedEntities<SystemUser>("teammembership_association", null);
            }
            set {
                SetRelatedEntities("teammembership_association", null, value);
            }
        }
        
        public static Team Retrieve(IOrganizationService service, Guid id, params Expression<Func<Team,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'Union Key'</para>
        /// </summary>
        public static Team Retrieve_ff_unionkey(IOrganizationService service, string ff_unionkey, params Expression<Func<Team,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_unionkey", ff_unionkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'ObjectId with MembershipType'</para>
        /// </summary>
        public static Team Retrieve_aadobjectid_membershiptype(IOrganizationService service, Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType, params Expression<Func<Team,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            keys.Add("membershiptype", MembershipType);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'ObjectId with MembershipType'</para>
        /// </summary>
        public void AltKey_aadobjectid_membershiptype(Guid AzureActiveDirectoryObjectId, Team_MembershipType MembershipType) {
            KeyAttributes.Clear();
            KeyAttributes.Add("azureactivedirectoryobjectid", AzureActiveDirectoryObjectId);
            KeyAttributes.Add("membershiptype", MembershipType);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'Union Key'</para>
        /// </summary>
        public void AltKey_ff_unionkey(string ff_unionkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_unionkey", ff_unionkey);
        }
    }
    
    [EntityLogicalName("teammembership")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class TeamMembership : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "teammembership";
        
        public const string RelationshipSchemaName = "TeamMembership";
        
        public const int EntityTypeCode = 23;
        
        public TeamMembership() : 
                base(EntityLogicalName) {
        }
        
        public TeamMembership(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("teammembershipid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team membership.</para>
        /// </summary>
        [AttributeLogicalName("teammembershipid")]
        public Guid? TeamMembershipId {
            get {
                return GetAttributeValue<Guid?>("teammembershipid");
            }
            set {
                SetId("teammembershipid", value);
            }
        }
        
        [AttributeLogicalName("systemuserid")]
        public Guid? SystemUserId {
            get {
                return GetAttributeValue<Guid?>("systemuserid");
            }
        }
        
        [AttributeLogicalName("teamid")]
        public Guid? TeamId {
            get {
                return GetAttributeValue<Guid?>("teamid");
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        public static TeamMembership Retrieve(IOrganizationService service, Guid id, params Expression<Func<TeamMembership,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Activity</para>
    /// </summary>
    [EntityLogicalName("ff_activities")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_activities : ExtendedEntity<ff_activitiesState, ff_activities_statuscode> {
        
        public const string EntityLogicalName = "ff_activities";
        
        public const int EntityTypeCode = 11253;
        
        public ff_activities() : 
                base(EntityLogicalName) {
        }
        
        public ff_activities(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_subject");
            }
        }
        
        [AttributeLogicalName("ff_activitiesid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_activitiesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Aktiviteter</para>
        /// </summary>
        [AttributeLogicalName("ff_activitiesid")]
        [DisplayName("Aktiviteter")]
        public Guid? ff_activitiesId {
            get {
                return GetAttributeValue<Guid?>("ff_activitiesid");
            }
            set {
                SetId("ff_activitiesid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("ff_subject")]
        [DisplayName("Subject")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_subject");
            }
            set {
                SetAttributeValue("ff_subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Activitytype</para>
        /// </summary>
        [AttributeLogicalName("ff_activitytype")]
        [DisplayName("Activitytype")]
        public ff_activities_ff_activitytype? ff_activitytype {
            get {
                return GetOptionSetValue<ff_activities_ff_activitytype>("ff_activitytype");
            }
            set {
                SetOptionSetValue("ff_activitytype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Current Educational Status</para>
        /// </summary>
        [AttributeLogicalName("ff_currenteducationalstatus")]
        [DisplayName("Current Educational Status")]
        [MaxLength(4000)]
        public string ff_currenteducationalstatus {
            get {
                return GetAttributeValue<string>("ff_currenteducationalstatus");
            }
            set {
                SetAttributeValue("ff_currenteducationalstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("ff_duedate")]
        [DisplayName("Due Date")]
        public DateTime? ff_duedate {
            get {
                return GetAttributeValue<DateTime?>("ff_duedate");
            }
            set {
                SetAttributeValue("ff_duedate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Graduate Date</para>
        /// </summary>
        [AttributeLogicalName("ff_graduatedate")]
        [DisplayName("Graduate Date")]
        public DateTime? ff_graduatedate {
            get {
                return GetAttributeValue<DateTime?>("ff_graduatedate");
            }
            set {
                SetAttributeValue("ff_graduatedate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Lukket uden dialog - Dimittendaktivitet</para>
        /// </summary>
        [AttributeLogicalName("ff_graduatestatusreasonnodialog")]
        [DisplayName("Lukket uden dialog - Dimittendaktivitet")]
        public ff_activities_ff_graduatestatusreasonnodialog? ff_graduatestatusreasonnodialog {
            get {
                return GetOptionSetValue<ff_activities_ff_graduatestatusreasonnodialog>("ff_graduatestatusreasonnodialog");
            }
            set {
                SetOptionSetValue("ff_graduatestatusreasonnodialog", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Lukket med dialog - Dimittendaktivitet</para>
        /// </summary>
        [AttributeLogicalName("ff_graduatestatusreasonwithdialog")]
        [DisplayName("Lukket med dialog - Dimittendaktivitet")]
        public ff_activities_ff_graduatestatusreasonwithdialog? ff_graduatestatusreasonwithdialog {
            get {
                return GetOptionSetValue<ff_activities_ff_graduatestatusreasonwithdialog>("ff_graduatestatusreasonwithdialog");
            }
            set {
                SetOptionSetValue("ff_graduatestatusreasonwithdialog", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Member</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Member")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership Status in Finansforbundet</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipstatus")]
        [DisplayName("Membership Status in Finansforbundet")]
        public ff_activities_ff_membershipstatus? ff_membershipstatus {
            get {
                return GetOptionSetValue<ff_activities_ff_membershipstatus>("ff_membershipstatus");
            }
            set {
                SetOptionSetValue("ff_membershipstatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Membership Status a-kasse</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipstatusakasse")]
        [DisplayName("Membership Status a-kasse")]
        public ff_activities_ff_membershipstatusakasse? ff_membershipstatusakasse {
            get {
                return GetOptionSetValue<ff_activities_ff_membershipstatusakasse>("ff_membershipstatusakasse");
            }
            set {
                SetOptionSetValue("ff_membershipstatusakasse", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Start of Study</para>
        /// </summary>
        [AttributeLogicalName("ff_studystart")]
        [DisplayName("Start of Study")]
        public DateTime? ff_studystart {
            get {
                return GetAttributeValue<DateTime?>("ff_studystart");
            }
            set {
                SetAttributeValue("ff_studystart", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("ff_subject")]
        [DisplayName("Subject")]
        [MaxLength(100)]
        public string ff_subject {
            get {
                return GetAttributeValue<string>("ff_subject");
            }
            set {
                SetAttributeValue("ff_subject", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Status Velkomstaktivitet</para>
        /// </summary>
        [AttributeLogicalName("ff_welcomestatus")]
        [DisplayName("Status Velkomstaktivitet")]
        public ff_activities_ff_welcomestatus? ff_welcomestatus {
            get {
                return GetOptionSetValue<ff_activities_ff_welcomestatus>("ff_welcomestatus");
            }
            set {
                SetOptionSetValue("ff_welcomestatus", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Status Reason Velkomstaktivitet</para>
        /// </summary>
        [AttributeLogicalName("ff_welcomestatusreason")]
        [DisplayName("Status Reason Velkomstaktivitet")]
        public ff_activities_ff_welcomestatusreason? ff_welcomestatusreason {
            get {
                return GetOptionSetValue<ff_activities_ff_welcomestatusreason>("ff_welcomestatusreason");
            }
            set {
                SetOptionSetValue("ff_welcomestatusreason", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Aktiviteter</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_activitiesState? statecode {
            get {
                return GetOptionSetValue<ff_activitiesState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Årsag til statussen for Aktiviteter</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public ff_activities_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_activities_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_activities")]
        public BusinessUnit business_unit_ff_activities {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_activities", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_activities", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_Contact_member_ff_activities")]
        public Contact ff_Contact_member_ff_activities {
            get {
                return GetRelatedEntity<Contact>("ff_Contact_member_ff_activities", null);
            }
            set {
                SetRelatedEntity("ff_Contact_member_ff_activities", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_ActivityPointers")]
        public IEnumerable<ActivityPointer> ff_activities_ActivityPointers {
            get {
                return GetRelatedEntities<ActivityPointer>("ff_activities_ActivityPointers", null);
            }
            set {
                SetRelatedEntities("ff_activities_ActivityPointers", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_Appointments")]
        public IEnumerable<Appointment> ff_activities_Appointments {
            get {
                return GetRelatedEntities<Appointment>("ff_activities_Appointments", null);
            }
            set {
                SetRelatedEntities("ff_activities_Appointments", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_Emails")]
        public IEnumerable<Email> ff_activities_Emails {
            get {
                return GetRelatedEntities<Email>("ff_activities_Emails", null);
            }
            set {
                SetRelatedEntities("ff_activities_Emails", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_PhoneCalls")]
        public IEnumerable<PhoneCall> ff_activities_PhoneCalls {
            get {
                return GetRelatedEntities<PhoneCall>("ff_activities_PhoneCalls", null);
            }
            set {
                SetRelatedEntities("ff_activities_PhoneCalls", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_Tasks")]
        public IEnumerable<Task> ff_activities_Tasks {
            get {
                return GetRelatedEntities<Task>("ff_activities_Tasks", null);
            }
            set {
                SetRelatedEntities("ff_activities_Tasks", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_ff_casenotes")]
        public IEnumerable<ff_casenote> ff_activities_ff_casenotes {
            get {
                return GetRelatedEntities<ff_casenote>("ff_activities_ff_casenotes", null);
            }
            set {
                SetRelatedEntities("ff_activities_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_activities_ff_medlemsnotes")]
        public IEnumerable<ff_medlemsnote> ff_activities_ff_medlemsnotes {
            get {
                return GetRelatedEntities<ff_medlemsnote>("ff_activities_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntities("ff_activities_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_activities_createdby")]
        public SystemUser lk_ff_activities_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_activities_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_activities_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_activities_createdonbehalfby")]
        public SystemUser lk_ff_activities_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_activities_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_activities_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_activities_modifiedby")]
        public SystemUser lk_ff_activities_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_activities_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_activities_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_activities_modifiedonbehalfby")]
        public SystemUser lk_ff_activities_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_activities_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_activities_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_activities")]
        public Team team_ff_activities {
            get {
                return GetRelatedEntity<Team>("team_ff_activities", null);
            }
            set {
                SetRelatedEntity("team_ff_activities", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_activities")]
        public SystemUser user_ff_activities {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_activities", null);
            }
            set {
                SetRelatedEntity("user_ff_activities", null, value);
            }
        }
        
        public static ff_activities Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_activities,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Award Giftcard</para>
    /// </summary>
    [EntityLogicalName("ff_awardgiftcard")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_awardgiftcard : ExtendedEntity<ff_awardgiftcardState, ff_awardgiftcard_statuscode> {
        
        public const string EntityLogicalName = "ff_awardgiftcard";
        
        public const int EntityTypeCode = 11015;
        
        public ff_awardgiftcard() : 
                base(EntityLogicalName) {
        }
        
        public ff_awardgiftcard(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_awardgiftcardid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_awardgiftcardid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Tildelt gavekort</para>
        /// </summary>
        [AttributeLogicalName("ff_awardgiftcardid")]
        [DisplayName("Tildelt gavekort")]
        public Guid? ff_awardgiftcardId {
            get {
                return GetAttributeValue<Guid?>("ff_awardgiftcardid");
            }
            set {
                SetId("ff_awardgiftcardid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Opslag til den kampagne som salgsmuligheden der har medført gavekortet havde. OBS! Den kan være forskellig fra den der har givet gavekortet på salgsmuligheden, hvis den har en stærkere score.</para>
        /// <para>Display Name: Kampagne</para>
        /// </summary>
        [AttributeLogicalName("ff_campaign")]
        [DisplayName("Kampagne")]
        public EntityReference ff_campaign {
            get {
                return GetAttributeValue<EntityReference>("ff_campaign");
            }
            set {
                SetAttributeValue("ff_campaign", value);
            }
        }
        
        /// <summary>
        /// <para>Opslag til den kampagneaktivitet som salgsmuligheden der har medført gavekortet havde. OBS! Den kan være forskellig fra den der har givet gavekortet på salgsmuligheden, hvis den har en stærkere score.</para>
        /// <para>Display Name: Kampagneaktivitet</para>
        /// </summary>
        [AttributeLogicalName("ff_campaignactivity")]
        [DisplayName("Kampagneaktivitet")]
        public EntityReference ff_campaignactivity {
            get {
                return GetAttributeValue<EntityReference>("ff_campaignactivity");
            }
            set {
                SetAttributeValue("ff_campaignactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date for Despatch</para>
        /// </summary>
        [AttributeLogicalName("ff_datefordespatch")]
        [DisplayName("Date for Despatch")]
        public DateTime? ff_datefordespatch {
            get {
                return GetAttributeValue<DateTime?>("ff_datefordespatch");
            }
            set {
                SetAttributeValue("ff_datefordespatch", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Existing Member</para>
        /// </summary>
        [AttributeLogicalName("ff_existingmember")]
        [DisplayName("Existing Member")]
        public EntityReference ff_existingmember {
            get {
                return GetAttributeValue<EntityReference>("ff_existingmember");
            }
            set {
                SetAttributeValue("ff_existingmember", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Amount</para>
        /// </summary>
        [AttributeLogicalName("ff_existingmemberamount")]
        [DisplayName("Amount")]
        public decimal? ff_existingmemberamount {
            get {
                return GetMoneyValue("ff_existingmemberamount");
            }
            set {
                SetMoneyValue("ff_existingmemberamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Beløb in base currency.</para>
        /// <para>Display Name: Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("ff_existingmemberamount_base")]
        [DisplayName("Amount (Base)")]
        public decimal? ff_existingmemberamount_Base {
            get {
                return GetMoneyValue("ff_existingmemberamount_base");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Giftcard</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcard")]
        [DisplayName("Giftcard")]
        public EntityReference ff_giftcard {
            get {
                return GetAttributeValue<EntityReference>("ff_giftcard");
            }
            set {
                SetAttributeValue("ff_giftcard", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: New Member</para>
        /// </summary>
        [AttributeLogicalName("ff_newmember")]
        [DisplayName("New Member")]
        public EntityReference ff_newmember {
            get {
                return GetAttributeValue<EntityReference>("ff_newmember");
            }
            set {
                SetAttributeValue("ff_newmember", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Amount</para>
        /// </summary>
        [AttributeLogicalName("ff_newmemberamount")]
        [DisplayName("Amount")]
        public decimal? ff_newmemberamount {
            get {
                return GetMoneyValue("ff_newmemberamount");
            }
            set {
                SetMoneyValue("ff_newmemberamount", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Beløb in base currency.</para>
        /// <para>Display Name: Amount (Base)</para>
        /// </summary>
        [AttributeLogicalName("ff_newmemberamount_base")]
        [DisplayName("Amount (Base)")]
        public decimal? ff_newmemberamount_Base {
            get {
                return GetMoneyValue("ff_newmemberamount_base");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("ff_opportunity")]
        [DisplayName("Opportunity")]
        public EntityReference ff_opportunity {
            get {
                return GetAttributeValue<EntityReference>("ff_opportunity");
            }
            set {
                SetAttributeValue("ff_opportunity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Recruiter</para>
        /// </summary>
        [AttributeLogicalName("ff_recruiter")]
        [DisplayName("Recruiter")]
        public EntityReference ff_recruiter {
            get {
                return GetAttributeValue<EntityReference>("ff_recruiter");
            }
            set {
                SetAttributeValue("ff_recruiter", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Tildelt gavekort</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_awardgiftcardState? statecode {
            get {
                return GetOptionSetValue<ff_awardgiftcardState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Tildelt gavekort</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_awardgiftcard_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_awardgiftcard_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_awardgiftcard")]
        public BusinessUnit business_unit_ff_awardgiftcard {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_awardgiftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_existingmember")]
        [RelationshipSchemaName("ff_awardgiftcard_existingmember_contact")]
        public Contact ff_awardgiftcard_existingmember_contact {
            get {
                return GetRelatedEntity<Contact>("ff_awardgiftcard_existingmember_contact", null);
            }
            set {
                SetRelatedEntity("ff_awardgiftcard_existingmember_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_giftcard")]
        [RelationshipSchemaName("ff_awardgiftcard_giftcard_ff_giftcard")]
        public ff_giftcard ff_awardgiftcard_giftcard_ff_giftcard {
            get {
                return GetRelatedEntity<ff_giftcard>("ff_awardgiftcard_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("ff_awardgiftcard_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_newmember")]
        [RelationshipSchemaName("ff_awardgiftcard_newmember_contact")]
        public Contact ff_awardgiftcard_newmember_contact {
            get {
                return GetRelatedEntity<Contact>("ff_awardgiftcard_newmember_contact", null);
            }
            set {
                SetRelatedEntity("ff_awardgiftcard_newmember_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_opportunity")]
        [RelationshipSchemaName("ff_awardgiftcard_opportunity_opportunity")]
        public Opportunity ff_awardgiftcard_opportunity_opportunity {
            get {
                return GetRelatedEntity<Opportunity>("ff_awardgiftcard_opportunity_opportunity", null);
            }
            set {
                SetRelatedEntity("ff_awardgiftcard_opportunity_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("ff_recruiter")]
        [RelationshipSchemaName("ff_awardgiftcard_recruiter_systemuser")]
        public SystemUser ff_awardgiftcard_recruiter_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("ff_awardgiftcard_recruiter_systemuser", null);
            }
            set {
                SetRelatedEntity("ff_awardgiftcard_recruiter_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_awardgiftcard_createdby")]
        public SystemUser lk_ff_awardgiftcard_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_awardgiftcard_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_awardgiftcard_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_awardgiftcard_createdonbehalfby")]
        public SystemUser lk_ff_awardgiftcard_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_awardgiftcard_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_awardgiftcard_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_awardgiftcard_modifiedby")]
        public SystemUser lk_ff_awardgiftcard_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_awardgiftcard_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_awardgiftcard_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_awardgiftcard_modifiedonbehalfby")]
        public SystemUser lk_ff_awardgiftcard_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_awardgiftcard_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_awardgiftcard_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_awardgiftcard")]
        public Team team_ff_awardgiftcard {
            get {
                return GetRelatedEntity<Team>("team_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntity("team_ff_awardgiftcard", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_awardgiftcard")]
        public SystemUser user_ff_awardgiftcard {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_awardgiftcard", null);
            }
            set {
                SetRelatedEntity("user_ff_awardgiftcard", null, value);
            }
        }
        
        public static ff_awardgiftcard Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_awardgiftcard,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Finansforbundets sagskategorier som anvendes til juridisk sagshåndtering</para>
    /// <para>Display Name: Kategori</para>
    /// </summary>
    [EntityLogicalName("ff_casecategory")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_casecategory : ExtendedEntity<ff_casecategoryState, ff_casecategory_statuscode> {
        
        public const string EntityLogicalName = "ff_casecategory";
        
        public const int EntityTypeCode = 11150;
        
        public ff_casecategory() : 
                base(EntityLogicalName) {
        }
        
        public ff_casecategory(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_casecategoryid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_casecategoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Case category</para>
        /// </summary>
        [AttributeLogicalName("ff_casecategoryid")]
        [DisplayName("Case category")]
        public Guid? ff_casecategoryId {
            get {
                return GetAttributeValue<Guid?>("ff_casecategoryid");
            }
            set {
                SetId("ff_casecategoryid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kategori</para>
        /// </summary>
        [AttributeLogicalName("ff_category")]
        [DisplayName("Kategori")]
        public EntityReference ff_category {
            get {
                return GetAttributeValue<EntityReference>("ff_category");
            }
            set {
                SetAttributeValue("ff_category", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Case category</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_casecategoryState? statecode {
            get {
                return GetOptionSetValue<ff_casecategoryState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Case category</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_casecategory_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_casecategory_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("ff_casecategory_category_ff_casecategory", EntityRole.Referenced)]
        public IEnumerable<ff_casecategory> Referencedff_casecategory_category_ff_casecategory {
            get {
                return GetRelatedEntities<ff_casecategory>("ff_casecategory_category_ff_casecategory", EntityRole.Referenced);
            }
            set {
                SetRelatedEntities("ff_casecategory_category_ff_casecategory", EntityRole.Referenced, value);
            }
        }
        
        [AttributeLogicalName("ff_category")]
        [RelationshipSchemaName("ff_casecategory_category_ff_casecategory", EntityRole.Referencing)]
        public ff_casecategory Referencingff_casecategory_category_ff_casecategory {
            get {
                return GetRelatedEntity<ff_casecategory>("ff_casecategory_category_ff_casecategory", EntityRole.Referencing);
            }
            set {
                SetRelatedEntity("ff_casecategory_category_ff_casecategory", EntityRole.Referencing, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_casecategory")]
        public BusinessUnit business_unit_ff_casecategory {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_casecategory", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casecategory_ff_casetype_ff_casetype")]
        public IEnumerable<ff_casetype> ff_casecategory_ff_casetype_ff_casetype {
            get {
                return GetRelatedEntities<ff_casetype>("ff_casecategory_ff_casetype_ff_casetype", null);
            }
            set {
                SetRelatedEntities("ff_casecategory_ff_casetype_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_category_ff_casecategory")]
        public IEnumerable<Incident> ff_incident_category_ff_casecategory {
            get {
                return GetRelatedEntities<Incident>("ff_incident_category_ff_casecategory", null);
            }
            set {
                SetRelatedEntities("ff_incident_category_ff_casecategory", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_subcategory_ff_casecategory")]
        public IEnumerable<Incident> ff_incident_subcategory_ff_casecategory {
            get {
                return GetRelatedEntities<Incident>("ff_incident_subcategory_ff_casecategory", null);
            }
            set {
                SetRelatedEntities("ff_incident_subcategory_ff_casecategory", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_casecategory_createdby")]
        public SystemUser lk_ff_casecategory_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casecategory_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casecategory_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_casecategory_createdonbehalfby")]
        public SystemUser lk_ff_casecategory_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casecategory_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casecategory_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_casecategory_modifiedby")]
        public SystemUser lk_ff_casecategory_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casecategory_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casecategory_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_casecategory_modifiedonbehalfby")]
        public SystemUser lk_ff_casecategory_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casecategory_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casecategory_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_casecategory")]
        public Team team_ff_casecategory {
            get {
                return GetRelatedEntity<Team>("team_ff_casecategory", null);
            }
            set {
                SetRelatedEntity("team_ff_casecategory", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_casecategory")]
        public SystemUser user_ff_casecategory {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_casecategory", null);
            }
            set {
                SetRelatedEntity("user_ff_casecategory", null, value);
            }
        }
        
        public static ff_casecategory Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_casecategory,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    [EntityLogicalName("ff_casecategory_ff_casetype")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_casecategory_ff_casetype : ExtendedEntity<EmptyEnum, EmptyEnum> {
        
        public const string EntityLogicalName = "ff_casecategory_ff_casetype";
        
        public const string RelationshipSchemaName = "ff_casecategory_ff_casetype";
        
        public const int EntityTypeCode = 11160;
        
        public ff_casecategory_ff_casetype() : 
                base(EntityLogicalName) {
        }
        
        public ff_casecategory_ff_casetype(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay(null);
            }
        }
        
        [AttributeLogicalName("ff_casecategory_ff_casetypeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_casecategory_ff_casetypeid", value);
            }
        }
        
        [AttributeLogicalName("ff_casecategory_ff_casetypeid")]
        public Guid? ff_casecategory_ff_casetypeId {
            get {
                return GetAttributeValue<Guid?>("ff_casecategory_ff_casetypeid");
            }
            set {
                SetId("ff_casecategory_ff_casetypeid", value);
            }
        }
        
        [AttributeLogicalName("versionnumber")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("ff_casecategoryid")]
        public Guid? ff_casecategoryid {
            get {
                return GetAttributeValue<Guid?>("ff_casecategoryid");
            }
        }
        
        [AttributeLogicalName("ff_casetypeid")]
        public Guid? ff_casetypeid {
            get {
                return GetAttributeValue<Guid?>("ff_casetypeid");
            }
        }
        
        public static ff_casecategory_ff_casetype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_casecategory_ff_casetype,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Anvendes til at angive sagsnoter på sager</para>
    /// <para>Display Name: Sagsnote</para>
    /// </summary>
    [EntityLogicalName("ff_casenote")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_casenote : ExtendedEntity<ff_casenoteState, ff_casenote_StatusCode> {
        
        public const string EntityLogicalName = "ff_casenote";
        
        public const int EntityTypeCode = 11171;
        
        public ff_casenote() : 
                base(EntityLogicalName) {
        }
        
        public ff_casenote(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity.</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was created.</para>
        /// <para>Display Name: Date Created</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Date Created")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Beskrivelse af aktiviteten.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public ff_casenote_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ff_casenote_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of user who last modified the activity.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when activity was last modified.</para>
        /// <para>Display Name: Last Updated</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Last Updated")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public ff_casenote_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<ff_casenote_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of an associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the activity.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public ff_casenoteState? StateCode {
            get {
                return GetOptionSetValue<ff_casenoteState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_casenote_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<ff_casenote_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Subject associated with the activity.</para>
        /// <para>Display Name: Subject</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Subject")]
        [MaxLength(400)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_ff_casenotes")]
        public Account account_ff_casenotes {
            get {
                return GetRelatedEntity<Account>("account_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("account_ff_casenotes", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_ff_casenote")]
        public ActivityPointer activity_pointer_ff_casenote {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_ff_casenote", null);
            }
            set {
                SetRelatedEntity("activity_pointer_ff_casenote", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contact_ff_casenotes")]
        public Contact contact_ff_casenotes {
            get {
                return GetRelatedEntity<Contact>("contact_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("contact_ff_casenotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_ff_casenotes")]
        public Entitlement entitlement_ff_casenotes {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("entitlement_ff_casenotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_ff_casenotes")]
        public ff_activities ff_activities_ff_casenotes {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("ff_activities_ff_casenotes", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_Annotations")]
        public IEnumerable<Annotation> ff_casenote_Annotations {
            get {
                return GetRelatedEntities<Annotation>("ff_casenote_Annotations", null);
            }
            set {
                SetRelatedEntities("ff_casenote_Annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_QueueItems")]
        public IEnumerable<QueueItem> ff_casenote_QueueItems {
            get {
                return GetRelatedEntities<QueueItem>("ff_casenote_QueueItems", null);
            }
            set {
                SetRelatedEntities("ff_casenote_QueueItems", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casenote_activity_parties")]
        public IEnumerable<ActivityParty> ff_casenote_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("ff_casenote_activity_parties", null);
            }
            set {
                SetRelatedEntities("ff_casenote_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("ff_casenote_businessunit_owningbusinessunit")]
        public BusinessUnit ff_casenote_businessunit_owningbusinessunit {
            get {
                return GetRelatedEntity<BusinessUnit>("ff_casenote_businessunit_owningbusinessunit", null);
            }
            set {
                SetRelatedEntity("ff_casenote_businessunit_owningbusinessunit", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("ff_casenote_mailbox_sendermailboxid")]
        public Mailbox ff_casenote_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("ff_casenote_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("ff_casenote_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("ff_casenote_systemuser_createdby")]
        public SystemUser ff_casenote_systemuser_createdby {
            get {
                return GetRelatedEntity<SystemUser>("ff_casenote_systemuser_createdby", null);
            }
            set {
                SetRelatedEntity("ff_casenote_systemuser_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("ff_casenote_systemuser_createdonbehalfby")]
        public SystemUser ff_casenote_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("ff_casenote_systemuser_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("ff_casenote_systemuser_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("ff_casenote_systemuser_modifiedby")]
        public SystemUser ff_casenote_systemuser_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("ff_casenote_systemuser_modifiedby", null);
            }
            set {
                SetRelatedEntity("ff_casenote_systemuser_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("ff_casenote_systemuser_modifiedonbehalfby")]
        public SystemUser ff_casenote_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("ff_casenote_systemuser_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("ff_casenote_systemuser_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("ff_casenote_systemuser_owninguser")]
        public SystemUser ff_casenote_systemuser_owninguser {
            get {
                return GetRelatedEntity<SystemUser>("ff_casenote_systemuser_owninguser", null);
            }
            set {
                SetRelatedEntity("ff_casenote_systemuser_owninguser", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("ff_casenote_team_owningteam")]
        public Team ff_casenote_team_owningteam {
            get {
                return GetRelatedEntity<Team>("ff_casenote_team_owningteam", null);
            }
            set {
                SetRelatedEntity("ff_casenote_team_owningteam", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("incident_ff_casenotes")]
        public Incident incident_ff_casenotes {
            get {
                return GetRelatedEntity<Incident>("incident_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("incident_ff_casenotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_ff_casenotes")]
        public Lead lead_ff_casenotes {
            get {
                return GetRelatedEntity<Lead>("lead_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("lead_ff_casenotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunity_ff_casenotes")]
        public Opportunity opportunity_ff_casenotes {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_ff_casenotes", null);
            }
            set {
                SetRelatedEntity("opportunity_ff_casenotes", null, value);
            }
        }
        
        public static ff_casenote Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_casenote,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Sagstype</para>
    /// </summary>
    [EntityLogicalName("ff_casetype")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_casetype : ExtendedEntity<ff_casetypeState, ff_casetype_statuscode> {
        
        public const string EntityLogicalName = "ff_casetype";
        
        public const int EntityTypeCode = 11148;
        
        public ff_casetype() : 
                base(EntityLogicalName) {
        }
        
        public ff_casetype(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_casetypeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_casetypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Case type</para>
        /// </summary>
        [AttributeLogicalName("ff_casetypeid")]
        [DisplayName("Case type")]
        public Guid? ff_casetypeId {
            get {
                return GetAttributeValue<Guid?>("ff_casetypeid");
            }
            set {
                SetId("ff_casetypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Anvendes til at kunne finde alle ikke medlemssager sagstyper. Dette er for at kunne genkende hvilke slettefrister der gælder for hver type sag</para>
        /// <para>Display Name: Medlemssag</para>
        /// </summary>
        [AttributeLogicalName("ff_membercase")]
        [DisplayName("Medlemssag")]
        public bool? ff_membercase {
            get {
                return GetAttributeValue<bool?>("ff_membercase");
            }
            set {
                SetAttributeValue("ff_membercase", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Case type</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_casetypeState? statecode {
            get {
                return GetOptionSetValue<ff_casetypeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Case type</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_casetype_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_casetype_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_casetype")]
        public BusinessUnit business_unit_ff_casetype {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_casetype", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_casecategory_ff_casetype_ff_casetype")]
        public IEnumerable<ff_casecategory> ff_casecategory_ff_casetype_ff_casetype {
            get {
                return GetRelatedEntities<ff_casecategory>("ff_casecategory_ff_casetype_ff_casetype", null);
            }
            set {
                SetRelatedEntities("ff_casecategory_ff_casetype_ff_casetype", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_casetype_ff_casetype")]
        public IEnumerable<Incident> ff_incident_casetype_ff_casetype {
            get {
                return GetRelatedEntities<Incident>("ff_incident_casetype_ff_casetype", null);
            }
            set {
                SetRelatedEntities("ff_incident_casetype_ff_casetype", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_casetype_createdby")]
        public SystemUser lk_ff_casetype_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casetype_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casetype_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_casetype_createdonbehalfby")]
        public SystemUser lk_ff_casetype_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casetype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casetype_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_casetype_modifiedby")]
        public SystemUser lk_ff_casetype_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casetype_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casetype_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_casetype_modifiedonbehalfby")]
        public SystemUser lk_ff_casetype_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_casetype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_casetype_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_casetype")]
        public Team team_ff_casetype {
            get {
                return GetRelatedEntity<Team>("team_ff_casetype", null);
            }
            set {
                SetRelatedEntity("team_ff_casetype", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_casetype")]
        public SystemUser user_ff_casetype {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_casetype", null);
            }
            set {
                SetRelatedEntity("user_ff_casetype", null, value);
            }
        }
        
        public static ff_casetype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_casetype,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>A collective agreement is an agreement between two parties about the working conditions that apply to workers in a specific company or industry.</para>
    /// <para>Display Name: Overenskomst</para>
    /// </summary>
    [EntityLogicalName("ff_collectiveagreement")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_collectiveagreement : ExtendedEntity<ff_collectiveagreementState, ff_collectiveagreement_statuscode> {
        
        public const string EntityLogicalName = "ff_collectiveagreement";
        
        public const int EntityTypeCode = 11145;
        
        public ff_collectiveagreement() : 
                base(EntityLogicalName) {
        }
        
        public ff_collectiveagreement(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_collectiveagreementid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_collectiveagreementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Collective Agreement</para>
        /// </summary>
        [AttributeLogicalName("ff_collectiveagreementid")]
        [DisplayName("Collective Agreement")]
        public Guid? ff_collectiveagreementId {
            get {
                return GetAttributeValue<Guid?>("ff_collectiveagreementid");
            }
            set {
                SetId("ff_collectiveagreementid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Anvendes til at BC kan lave opslag mod Dynamics</para>
        /// <para>Display Name: Overenskomstkode</para>
        /// </summary>
        [AttributeLogicalName("ff_collectiveagreementkey")]
        [DisplayName("Overenskomstkode")]
        [MaxLength(100)]
        public string ff_collectiveagreementkey {
            get {
                return GetAttributeValue<string>("ff_collectiveagreementkey");
            }
            set {
                SetAttributeValue("ff_collectiveagreementkey", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 7/11-24: ikke nødvendig alligevel]</para>
        /// <para>Display Name: ZZ_Collective Agreement Type</para>
        /// </summary>
        [AttributeLogicalName("ff_collectiveagreementtype")]
        [DisplayName("ZZ_Collective Agreement Type")]
        [ObsoleteAttribute()]
        public ff_collectiveagreementtype? ff_collectiveagreementtype {
            get {
                return GetOptionSetValue<ff_collectiveagreementtype>("ff_collectiveagreementtype");
            }
            set {
                SetOptionSetValue("ff_collectiveagreementtype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Link til overenskomst</para>
        /// </summary>
        [AttributeLogicalName("ff_linktocollectiveagreement")]
        [DisplayName("Link til overenskomst")]
        [MaxLength(500)]
        public string ff_linktocollectiveagreement {
            get {
                return GetAttributeValue<string>("ff_linktocollectiveagreement");
            }
            set {
                SetAttributeValue("ff_linktocollectiveagreement", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 7/11-24: Ikke nødvendig alligevel] Opposition to the collective agreement</para>
        /// <para>Display Name: ZZ_Opposition</para>
        /// </summary>
        [AttributeLogicalName("ff_opposition")]
        [DisplayName("ZZ_Opposition")]
        [MaxLength(100)]
        [ObsoleteAttribute()]
        public string ff_opposition {
            get {
                return GetAttributeValue<string>("ff_opposition");
            }
            set {
                SetAttributeValue("ff_opposition", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Collective Agreement</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_collectiveagreementState? statecode {
            get {
                return GetOptionSetValue<ff_collectiveagreementState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Collective Agreement</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_collectiveagreement_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_collectiveagreement_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_collectiveagreement")]
        public BusinessUnit business_unit_ff_collectiveagreement {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_account_collectiveagreement_ff_collectiveagreement")]
        public IEnumerable<Account> ff_account_collectiveagreement_ff_collectiveagreement {
            get {
                return GetRelatedEntities<Account>("ff_account_collectiveagreement_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntities("ff_account_collectiveagreement_ff_collectiveagreement", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_incident_collectiveagreement_ff_collectiveagreement")]
        public IEnumerable<Incident> ff_incident_collectiveagreement_ff_collectiveagreement {
            get {
                return GetRelatedEntities<Incident>("ff_incident_collectiveagreement_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntities("ff_incident_collectiveagreement_ff_collectiveagreement", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_collectiveagreement_createdby")]
        public SystemUser lk_ff_collectiveagreement_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_collectiveagreement_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_collectiveagreement_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_collectiveagreement_createdonbehalfby")]
        public SystemUser lk_ff_collectiveagreement_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_collectiveagreement_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_collectiveagreement_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_collectiveagreement_modifiedby")]
        public SystemUser lk_ff_collectiveagreement_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_collectiveagreement_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_collectiveagreement_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_collectiveagreement_modifiedonbehalfby")]
        public SystemUser lk_ff_collectiveagreement_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_collectiveagreement_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_collectiveagreement_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_collectiveagreement")]
        public Team team_ff_collectiveagreement {
            get {
                return GetRelatedEntity<Team>("team_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntity("team_ff_collectiveagreement", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_collectiveagreement")]
        public SystemUser user_ff_collectiveagreement {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_collectiveagreement", null);
            }
            set {
                SetRelatedEntity("user_ff_collectiveagreement", null, value);
            }
        }
        
        public static ff_collectiveagreement Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_collectiveagreement,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'collectiveagreementkey'</para>
        /// </summary>
        public static ff_collectiveagreement Retrieve_ff_collectiveagreementkey(IOrganizationService service, string ff_collectiveagreementkey, params Expression<Func<ff_collectiveagreement,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_collectiveagreementkey", ff_collectiveagreementkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'collectiveagreementkey'</para>
        /// </summary>
        public void AltKey_ff_collectiveagreementkey(string ff_collectiveagreementkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_collectiveagreementkey", ff_collectiveagreementkey);
        }
    }
    
    /// <summary>
    /// <para>Middle table to connect a committee and a member in a many to many relation.</para>
    /// <para>Display Name: Udvalgsmedlem</para>
    /// </summary>
    [EntityLogicalName("ff_committeemember")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_committeemember : ExtendedEntity<ff_committeememberState, ff_committeemember_statuscode> {
        
        public const string EntityLogicalName = "ff_committeemember";
        
        public const int EntityTypeCode = 11149;
        
        public ff_committeemember() : 
                base(EntityLogicalName) {
        }
        
        public ff_committeemember(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_committeememberid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_committeememberid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Udvalgsmedlem</para>
        /// </summary>
        [AttributeLogicalName("ff_committeememberid")]
        [DisplayName("Udvalgsmedlem")]
        public Guid? ff_committeememberId {
            get {
                return GetAttributeValue<Guid?>("ff_committeememberid");
            }
            set {
                SetId("ff_committeememberid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_Name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Lookup to Committee</para>
        /// <para>Display Name: Udvalg</para>
        /// </summary>
        [AttributeLogicalName("ff_committee")]
        [DisplayName("Udvalg")]
        public EntityReference ff_committee {
            get {
                return GetAttributeValue<EntityReference>("ff_committee");
            }
            set {
                SetAttributeValue("ff_committee", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Udvalgsfunktion</para>
        /// </summary>
        [AttributeLogicalName("ff_committeefunction")]
        [DisplayName("Udvalgsfunktion")]
        [MaxLength(100)]
        public string ff_committeefunction {
            get {
                return GetAttributeValue<string>("ff_committeefunction");
            }
            set {
                SetAttributeValue("ff_committeefunction", value);
            }
        }
        
        /// <summary>
        /// <para>Anvendes i BC til at slå op mod Dynamics</para>
        /// <para>Display Name: Udvalgsmedlemnummer</para>
        /// </summary>
        [AttributeLogicalName("ff_committeememberkey")]
        [DisplayName("Udvalgsmedlemnummer")]
        [MaxLength(100)]
        public string ff_committeememberkey {
            get {
                return GetAttributeValue<string>("ff_committeememberkey");
            }
            set {
                SetAttributeValue("ff_committeememberkey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Slutdato</para>
        /// </summary>
        [AttributeLogicalName("ff_enddate")]
        [DisplayName("Slutdato")]
        public DateTime? ff_enddate {
            get {
                return GetAttributeValue<DateTime?>("ff_enddate");
            }
            set {
                SetAttributeValue("ff_enddate", value);
            }
        }
        
        /// <summary>
        /// <para>Lookup to Member</para>
        /// <para>Display Name: Medlem</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Medlem")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Startdato</para>
        /// </summary>
        [AttributeLogicalName("ff_startdate")]
        [DisplayName("Startdato")]
        public DateTime? ff_startdate {
            get {
                return GetAttributeValue<DateTime?>("ff_startdate");
            }
            set {
                SetAttributeValue("ff_startdate", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the CommitteeMember</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_committeememberState? statecode {
            get {
                return GetOptionSetValue<ff_committeememberState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the CommitteeMember</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_committeemember_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_committeemember_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_committeemember")]
        public BusinessUnit business_unit_ff_committeemember {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_committeemember", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_committeemember", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_committeemember_member_contact")]
        public Contact ff_committeemember_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_committeemember_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_committeemember_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_committeemember_createdby")]
        public SystemUser lk_ff_committeemember_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_committeemember_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_committeemember_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_committeemember_createdonbehalfby")]
        public SystemUser lk_ff_committeemember_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_committeemember_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_committeemember_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_committeemember_modifiedby")]
        public SystemUser lk_ff_committeemember_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_committeemember_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_committeemember_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_committeemember_modifiedonbehalfby")]
        public SystemUser lk_ff_committeemember_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_committeemember_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_committeemember_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_committeemember")]
        public Team team_ff_committeemember {
            get {
                return GetRelatedEntity<Team>("team_ff_committeemember", null);
            }
            set {
                SetRelatedEntity("team_ff_committeemember", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_committeemember")]
        public SystemUser user_ff_committeemember {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_committeemember", null);
            }
            set {
                SetRelatedEntity("user_ff_committeemember", null, value);
            }
        }
        
        public static ff_committeemember Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_committeemember,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'committeememberkey'</para>
        /// </summary>
        public static ff_committeemember Retrieve_ff_committeememberkey(IOrganizationService service, string ff_committeememberkey, params Expression<Func<ff_committeemember,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_committeememberkey", ff_committeememberkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'committeememberkey'</para>
        /// </summary>
        public void AltKey_ff_committeememberkey(string ff_committeememberkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_committeememberkey", ff_committeememberkey);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Konfiguration</para>
    /// </summary>
    [EntityLogicalName("ff_configuration")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_configuration : ExtendedEntity<ff_configurationState, ff_configuration_statuscode> {
        
        public const string EntityLogicalName = "ff_configuration";
        
        public const int EntityTypeCode = 11250;
        
        public ff_configuration() : 
                base(EntityLogicalName) {
        }
        
        public ff_configuration(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_configurationid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Konfiguration</para>
        /// </summary>
        [AttributeLogicalName("ff_configurationid")]
        [DisplayName("Konfiguration")]
        public Guid? ff_configurationId {
            get {
                return GetAttributeValue<Guid?>("ff_configurationid");
            }
            set {
                SetId("ff_configurationid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(850)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Used to connect to azure function that sends delete message for a case to DMS</para>
        /// <para>Display Name: Azure Function Delete Case URL</para>
        /// </summary>
        [AttributeLogicalName("ff_azurefunctiondeletecaseurl")]
        [DisplayName("Azure Function Delete Case URL")]
        [MaxLength(250)]
        public string ff_azurefunctiondeletecaseurl {
            get {
                return GetAttributeValue<string>("ff_azurefunctiondeletecaseurl");
            }
            set {
                SetAttributeValue("ff_azurefunctiondeletecaseurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: SL Subscription Key</para>
        /// </summary>
        [AttributeLogicalName("ff_bcsubscriptionkey")]
        [DisplayName("SL Subscription Key")]
        [MaxLength(100)]
        public string ff_bcsubscriptionkey {
            get {
                return GetAttributeValue<string>("ff_bcsubscriptionkey");
            }
            set {
                SetAttributeValue("ff_bcsubscriptionkey", value);
            }
        }
        
        /// <summary>
        /// <para>URL til servicelag for BC integration</para>
        /// <para>Display Name: SL url</para>
        /// </summary>
        [AttributeLogicalName("ff_bcurl")]
        [DisplayName("SL url")]
        [MaxLength(100)]
        public string ff_bcurl {
            get {
                return GetAttributeValue<string>("ff_bcurl");
            }
            set {
                SetAttributeValue("ff_bcurl", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(850)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Queue</para>
        /// </summary>
        [AttributeLogicalName("ff_queue")]
        [DisplayName("Queue")]
        public EntityReference ff_queue {
            get {
                return GetAttributeValue<EntityReference>("ff_queue");
            }
            set {
                SetAttributeValue("ff_queue", value);
            }
        }
        
        /// <summary>
        /// <para>Guid på den bruger der anvendes til at oprette SharePoint sites med</para>
        /// <para>Display Name: SharePoint Admin User</para>
        /// </summary>
        [AttributeLogicalName("ff_sharepointadminuser")]
        [DisplayName("SharePoint Admin User")]
        [MaxLength(100)]
        public string ff_sharepointadminuser {
            get {
                return GetAttributeValue<string>("ff_sharepointadminuser");
            }
            set {
                SetAttributeValue("ff_sharepointadminuser", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Konfiguration</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_configurationState? statecode {
            get {
                return GetOptionSetValue<ff_configurationState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Konfiguration</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_configuration_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_configuration_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_configuration")]
        public BusinessUnit business_unit_ff_configuration {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_configuration", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_configuration", null, value);
            }
        }
        
        [AttributeLogicalName("ff_queue")]
        [RelationshipSchemaName("ff_configuration_queue_queue")]
        public Queue ff_configuration_queue_queue {
            get {
                return GetRelatedEntity<Queue>("ff_configuration_queue_queue", null);
            }
            set {
                SetRelatedEntity("ff_configuration_queue_queue", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_configuration_createdby")]
        public SystemUser lk_ff_configuration_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_configuration_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_configuration_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_configuration_createdonbehalfby")]
        public SystemUser lk_ff_configuration_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_configuration_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_configuration_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_configuration_modifiedby")]
        public SystemUser lk_ff_configuration_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_configuration_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_configuration_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_configuration_modifiedonbehalfby")]
        public SystemUser lk_ff_configuration_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_configuration_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_configuration_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_configuration")]
        public Team team_ff_configuration {
            get {
                return GetRelatedEntity<Team>("team_ff_configuration", null);
            }
            set {
                SetRelatedEntity("team_ff_configuration", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_configuration")]
        public SystemUser user_ff_configuration {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_configuration", null);
            }
            set {
                SetRelatedEntity("user_ff_configuration", null, value);
            }
        }
        
        public static ff_configuration Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_configuration,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Employment is a relationship where an employee provides work or services to a business in exchange for compensation, following agreed-upon terms and conditions.</para>
    /// <para>Display Name: Ansættelse</para>
    /// </summary>
    [EntityLogicalName("ff_employment")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_employment : ExtendedEntity<ff_employmentState, ff_employment_statuscode> {
        
        public const string EntityLogicalName = "ff_employment";
        
        public const int EntityTypeCode = 11142;
        
        public ff_employment() : 
                base(EntityLogicalName) {
        }
        
        public ff_employment(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_employmentid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_employmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Ansættelse</para>
        /// </summary>
        [AttributeLogicalName("ff_employmentid")]
        [DisplayName("Ansættelse")]
        public Guid? ff_employmentId {
            get {
                return GetAttributeValue<Guid?>("ff_employmentid");
            }
            set {
                SetId("ff_employmentid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ansættelsesdato</para>
        /// </summary>
        [AttributeLogicalName("ff_employmentdate")]
        [DisplayName("Ansættelsesdato")]
        public DateTime? ff_employmentdate {
            get {
                return GetAttributeValue<DateTime?>("ff_employmentdate");
            }
            set {
                SetAttributeValue("ff_employmentdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Ansættelsesnummer</para>
        /// </summary>
        [AttributeLogicalName("ff_employmentkey")]
        [DisplayName("Ansættelsesnummer")]
        [MaxLength(100)]
        public string ff_employmentkey {
            get {
                return GetAttributeValue<string>("ff_employmentkey");
            }
            set {
                SetAttributeValue("ff_employmentkey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Job function</para>
        /// </summary>
        [AttributeLogicalName("ff_jobfunction")]
        [DisplayName("Job function")]
        [MaxLength(100)]
        public string ff_jobfunction {
            get {
                return GetAttributeValue<string>("ff_jobfunction");
            }
            set {
                SetAttributeValue("ff_jobfunction", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Medlem</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Medlem")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Fratrædelsesdato</para>
        /// </summary>
        [AttributeLogicalName("ff_resignationdate")]
        [DisplayName("Fratrædelsesdato")]
        public DateTime? ff_resignationdate {
            get {
                return GetAttributeValue<DateTime?>("ff_resignationdate");
            }
            set {
                SetAttributeValue("ff_resignationdate", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Arbejdsplads</para>
        /// </summary>
        [AttributeLogicalName("ff_workplace")]
        [DisplayName("Arbejdsplads")]
        public EntityReference ff_workplace {
            get {
                return GetAttributeValue<EntityReference>("ff_workplace");
            }
            set {
                SetAttributeValue("ff_workplace", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Employment</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_employmentState? statecode {
            get {
                return GetOptionSetValue<ff_employmentState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Årsag til statussen for Ansættelse</para>
        /// <para>Display Name: Statusårsag</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Statusårsag")]
        public ff_employment_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_employment_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_employment")]
        public BusinessUnit business_unit_ff_employment {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_employment", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_employment", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_employment_member_contact")]
        public Contact ff_employment_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_employment_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_employment_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_workplace")]
        [RelationshipSchemaName("ff_employment_workplace_account")]
        public Account ff_employment_workplace_account {
            get {
                return GetRelatedEntity<Account>("ff_employment_workplace_account", null);
            }
            set {
                SetRelatedEntity("ff_employment_workplace_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_employment_createdby")]
        public SystemUser lk_ff_employment_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_employment_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_employment_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_employment_createdonbehalfby")]
        public SystemUser lk_ff_employment_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_employment_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_employment_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_employment_modifiedby")]
        public SystemUser lk_ff_employment_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_employment_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_employment_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_employment_modifiedonbehalfby")]
        public SystemUser lk_ff_employment_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_employment_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_employment_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_employment")]
        public Team team_ff_employment {
            get {
                return GetRelatedEntity<Team>("team_ff_employment", null);
            }
            set {
                SetRelatedEntity("team_ff_employment", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_employment")]
        public SystemUser user_ff_employment {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_employment", null);
            }
            set {
                SetRelatedEntity("user_ff_employment", null, value);
            }
        }
        
        public static ff_employment Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_employment,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'employmentkey'</para>
        /// </summary>
        public static ff_employment Retrieve_ff_employmentkey(IOrganizationService service, string ff_employmentkey, params Expression<Func<ff_employment,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_employmentkey", ff_employmentkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'employmentkey'</para>
        /// </summary>
        public void AltKey_ff_employmentkey(string ff_employmentkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_employmentkey", ff_employmentkey);
        }
    }
    
    /// <summary>
    /// <para>Deltagere på et event. Sammenknytning mellem kontaktpersoner og Events i en mange til mange relation.</para>
    /// <para>Display Name: Arrangementstilmelding</para>
    /// </summary>
    [EntityLogicalName("ff_eventattendee")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_eventattendee : ExtendedEntity<ff_eventattendeeState, ff_eventattendee_statuscode> {
        
        public const string EntityLogicalName = "ff_eventattendee";
        
        public const int EntityTypeCode = 10890;
        
        public ff_eventattendee() : 
                base(EntityLogicalName) {
        }
        
        public ff_eventattendee(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_eventattendeeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_eventattendeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Event Attendee</para>
        /// </summary>
        [AttributeLogicalName("ff_eventattendeeid")]
        [DisplayName("Event Attendee")]
        public Guid? ff_eventattendeeId {
            get {
                return GetAttributeValue<Guid?>("ff_eventattendeeid");
            }
            set {
                SetId("ff_eventattendeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Opslag til Kontaktperson</para>
        /// <para>Display Name: Kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("ff_contact")]
        [DisplayName("Kontaktperson")]
        public EntityReference ff_contact {
            get {
                return GetAttributeValue<EntityReference>("ff_contact");
            }
            set {
                SetAttributeValue("ff_contact", value);
            }
        }
        
        /// <summary>
        /// <para>Anvendes til opslag fra BC</para>
        /// <para>Display Name: Tilmeldningsnummer</para>
        /// </summary>
        [AttributeLogicalName("ff_entrynumberkey")]
        [DisplayName("Tilmeldningsnummer")]
        [MaxLength(100)]
        public string ff_entrynumberkey {
            get {
                return GetAttributeValue<string>("ff_entrynumberkey");
            }
            set {
                SetAttributeValue("ff_entrynumberkey", value);
            }
        }
        
        /// <summary>
        /// <para>Opslag til Arrangement.</para>
        /// <para>Display Name: Arrangement</para>
        /// </summary>
        [AttributeLogicalName("ff_event")]
        [DisplayName("Arrangement")]
        public EntityReference ff_event {
            get {
                return GetAttributeValue<EntityReference>("ff_event");
            }
            set {
                SetAttributeValue("ff_event", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Event Attendee</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_eventattendeeState? statecode {
            get {
                return GetOptionSetValue<ff_eventattendeeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Event Attendee</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_eventattendee_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_eventattendee_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_eventattendee")]
        public BusinessUnit business_unit_ff_eventattendee {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_eventattendee", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_eventattendee", null, value);
            }
        }
        
        [AttributeLogicalName("ff_contact")]
        [RelationshipSchemaName("ff_eventattendee_contact_contact")]
        public Contact ff_eventattendee_contact_contact {
            get {
                return GetRelatedEntity<Contact>("ff_eventattendee_contact_contact", null);
            }
            set {
                SetRelatedEntity("ff_eventattendee_contact_contact", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_eventattendee_createdby")]
        public SystemUser lk_ff_eventattendee_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_eventattendee_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_eventattendee_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_eventattendee_createdonbehalfby")]
        public SystemUser lk_ff_eventattendee_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_eventattendee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_eventattendee_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_eventattendee_modifiedby")]
        public SystemUser lk_ff_eventattendee_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_eventattendee_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_eventattendee_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_eventattendee_modifiedonbehalfby")]
        public SystemUser lk_ff_eventattendee_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_eventattendee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_eventattendee_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_eventattendee")]
        public Team team_ff_eventattendee {
            get {
                return GetRelatedEntity<Team>("team_ff_eventattendee", null);
            }
            set {
                SetRelatedEntity("team_ff_eventattendee", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_eventattendee")]
        public SystemUser user_ff_eventattendee {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_eventattendee", null);
            }
            set {
                SetRelatedEntity("user_ff_eventattendee", null, value);
            }
        }
        
        public static ff_eventattendee Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_eventattendee,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'entrynumberkey'</para>
        /// </summary>
        public static ff_eventattendee Retrieve_ff_entrynumberkey(IOrganizationService service, string ff_entrynumberkey, params Expression<Func<ff_eventattendee,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_entrynumberkey", ff_entrynumberkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'entrynumberkey'</para>
        /// </summary>
        public void AltKey_ff_entrynumberkey(string ff_entrynumberkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_entrynumberkey", ff_entrynumberkey);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Giftcard</para>
    /// </summary>
    [EntityLogicalName("ff_giftcard")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_giftcard : ExtendedEntity<ff_giftcardState, ff_giftcard_statuscode> {
        
        public const string EntityLogicalName = "ff_giftcard";
        
        public const int EntityTypeCode = 11199;
        
        public ff_giftcard() : 
                base(EntityLogicalName) {
        }
        
        public ff_giftcard(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_giftcardid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_giftcardid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Gavekort</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcardid")]
        [DisplayName("Gavekort")]
        public Guid? ff_giftcardId {
            get {
                return GetAttributeValue<Guid?>("ff_giftcardid");
            }
            set {
                SetId("ff_giftcardid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the entity with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the entity.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_Name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("ff_contact")]
        [DisplayName("Kontaktperson")]
        public EntityReference ff_contact {
            get {
                return GetAttributeValue<EntityReference>("ff_contact");
            }
            set {
                SetAttributeValue("ff_contact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Beløb</para>
        /// </summary>
        [AttributeLogicalName("ff_currency")]
        [DisplayName("Beløb")]
        public decimal? ff_currency {
            get {
                return GetMoneyValue("ff_currency");
            }
            set {
                SetMoneyValue("ff_currency", value);
            }
        }
        
        /// <summary>
        /// <para>Value of the Beløb in base currency.</para>
        /// <para>Display Name: Beløb (Base)</para>
        /// </summary>
        [AttributeLogicalName("ff_currency_base")]
        [DisplayName("Beløb (Base)")]
        public decimal? ff_currency_Base {
            get {
                return GetMoneyValue("ff_currency_base");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gavekortscore</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcardscore")]
        [DisplayName("Gavekortscore")]
        [Range(0, 50)]
        public int? ff_giftcardscore {
            get {
                return GetAttributeValue<int?>("ff_giftcardscore");
            }
            set {
                SetAttributeValue("ff_giftcardscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kampagne</para>
        /// </summary>
        [AttributeLogicalName("ff_sourcecampaign")]
        [DisplayName("Kampagne")]
        public EntityReference ff_sourcecampaign {
            get {
                return GetAttributeValue<EntityReference>("ff_sourcecampaign");
            }
            set {
                SetAttributeValue("ff_sourcecampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gavekortstype</para>
        /// </summary>
        [AttributeLogicalName("ff_typeofgiftcard")]
        [DisplayName("Gavekortstype")]
        public ff_typeofgiftcard? ff_typeofgiftcard {
            get {
                return GetOptionSetValue<ff_typeofgiftcard>("ff_typeofgiftcard");
            }
            set {
                SetOptionSetValue("ff_typeofgiftcard", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Gavekort</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_giftcardState? statecode {
            get {
                return GetOptionSetValue<ff_giftcardState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Gavekort</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_giftcard_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_giftcard_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_giftcard")]
        public BusinessUnit business_unit_ff_giftcard {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_awardgiftcard_giftcard_ff_giftcard")]
        public IEnumerable<ff_awardgiftcard> ff_awardgiftcard_giftcard_ff_giftcard {
            get {
                return GetRelatedEntities<ff_awardgiftcard>("ff_awardgiftcard_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("ff_awardgiftcard_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_contact")]
        [RelationshipSchemaName("ff_giftcard_contact_contact")]
        public Contact ff_giftcard_contact_contact {
            get {
                return GetRelatedEntity<Contact>("ff_giftcard_contact_contact", null);
            }
            set {
                SetRelatedEntity("ff_giftcard_contact_contact", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_lead_giftcard_ff_giftcard")]
        public IEnumerable<Lead> ff_lead_giftcard_ff_giftcard {
            get {
                return GetRelatedEntities<Lead>("ff_lead_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("ff_lead_giftcard_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_opportunity_giftcard_ff_giftcard")]
        public IEnumerable<Opportunity> ff_opportunity_giftcard_ff_giftcard {
            get {
                return GetRelatedEntities<Opportunity>("ff_opportunity_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("ff_opportunity_giftcard_ff_giftcard", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_reportingofopportunity_giftcard_ff_giftcard")]
        public IEnumerable<ff_reportingofopportunity> ff_reportingofopportunity_giftcard_ff_giftcard {
            get {
                return GetRelatedEntities<ff_reportingofopportunity>("ff_reportingofopportunity_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntities("ff_reportingofopportunity_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_giftcard_createdby")]
        public SystemUser lk_ff_giftcard_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_giftcard_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_giftcard_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_giftcard_createdonbehalfby")]
        public SystemUser lk_ff_giftcard_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_giftcard_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_giftcard_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_giftcard_modifiedby")]
        public SystemUser lk_ff_giftcard_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_giftcard_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_giftcard_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_giftcard_modifiedonbehalfby")]
        public SystemUser lk_ff_giftcard_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_giftcard_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_giftcard_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_giftcard")]
        public Team team_ff_giftcard {
            get {
                return GetRelatedEntity<Team>("team_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("team_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_giftcard")]
        public SystemUser user_ff_giftcard {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("user_ff_giftcard", null, value);
            }
        }
        
        public static ff_giftcard Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_giftcard,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Finansforbundets tabel til at vise forholdet mellem sag og parter(kontaktpersoner som ikke er medlem)</para>
    /// <para>Display Name: Sagspart</para>
    /// </summary>
    [EntityLogicalName("ff_incidentparty")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_incidentparty : ExtendedEntity<ff_incidentpartyState, ff_incidentparty_statuscode> {
        
        public const string EntityLogicalName = "ff_incidentparty";
        
        public const int EntityTypeCode = 11159;
        
        public ff_incidentparty() : 
                base(EntityLogicalName) {
        }
        
        public ff_incidentparty(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_incidentpartyid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_incidentpartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Sagspart</para>
        /// </summary>
        [AttributeLogicalName("ff_incidentpartyid")]
        [DisplayName("Sagspart")]
        public Guid? ff_incidentpartyId {
            get {
                return GetAttributeValue<Guid?>("ff_incidentpartyid");
            }
            set {
                SetId("ff_incidentpartyid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Virksomhed</para>
        /// </summary>
        [AttributeLogicalName("ff_company")]
        [DisplayName("Virksomhed")]
        [MaxLength(100)]
        public string ff_company {
            get {
                return GetAttributeValue<string>("ff_company");
            }
            set {
                SetAttributeValue("ff_company", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 29/11-24: Der anvendes fritekstfelter i stedet pga. GDPR og ønske om ikke create af Kontakter.</para>
        /// <para>Display Name: ZZ_Kontaktperson</para>
        /// </summary>
        [AttributeLogicalName("ff_contact")]
        [DisplayName("ZZ_Kontaktperson")]
        [ObsoleteAttribute()]
        public EntityReference ff_contact {
            get {
                return GetAttributeValue<EntityReference>("ff_contact");
            }
            set {
                SetAttributeValue("ff_contact", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Email</para>
        /// </summary>
        [AttributeLogicalName("ff_email")]
        [DisplayName("Email")]
        [MaxLength(100)]
        public string ff_email {
            get {
                return GetAttributeValue<string>("ff_email");
            }
            set {
                SetAttributeValue("ff_email", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Sag</para>
        /// </summary>
        [AttributeLogicalName("ff_incident")]
        [DisplayName("Sag")]
        public EntityReference ff_incident {
            get {
                return GetAttributeValue<EntityReference>("ff_incident");
            }
            set {
                SetAttributeValue("ff_incident", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Telefon</para>
        /// </summary>
        [AttributeLogicalName("ff_telephone")]
        [DisplayName("Telefon")]
        [MaxLength(100)]
        public string ff_telephone {
            get {
                return GetAttributeValue<string>("ff_telephone");
            }
            set {
                SetAttributeValue("ff_telephone", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Titel</para>
        /// </summary>
        [AttributeLogicalName("ff_title")]
        [DisplayName("Titel")]
        [MaxLength(100)]
        public string ff_title {
            get {
                return GetAttributeValue<string>("ff_title");
            }
            set {
                SetAttributeValue("ff_title", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Sagspart</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_incidentpartyState? statecode {
            get {
                return GetOptionSetValue<ff_incidentpartyState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Sagspart</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_incidentparty_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_incidentparty_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_incidentparty")]
        public BusinessUnit business_unit_ff_incidentparty {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_incidentparty", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_incidentparty", null, value);
            }
        }
        
        [AttributeLogicalName("ff_contact")]
        [RelationshipSchemaName("ff_incidentparty_contact_contact")]
        public Contact ff_incidentparty_contact_contact {
            get {
                return GetRelatedEntity<Contact>("ff_incidentparty_contact_contact", null);
            }
            set {
                SetRelatedEntity("ff_incidentparty_contact_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_incident")]
        [RelationshipSchemaName("ff_incidentparty_incident_incident")]
        public Incident ff_incidentparty_incident_incident {
            get {
                return GetRelatedEntity<Incident>("ff_incidentparty_incident_incident", null);
            }
            set {
                SetRelatedEntity("ff_incidentparty_incident_incident", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_incidentparty_createdby")]
        public SystemUser lk_ff_incidentparty_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_incidentparty_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_incidentparty_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_incidentparty_createdonbehalfby")]
        public SystemUser lk_ff_incidentparty_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_incidentparty_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_incidentparty_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_incidentparty_modifiedby")]
        public SystemUser lk_ff_incidentparty_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_incidentparty_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_incidentparty_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_incidentparty_modifiedonbehalfby")]
        public SystemUser lk_ff_incidentparty_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_incidentparty_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_incidentparty_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_incidentparty")]
        public Team team_ff_incidentparty {
            get {
                return GetRelatedEntity<Team>("team_ff_incidentparty", null);
            }
            set {
                SetRelatedEntity("team_ff_incidentparty", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_incidentparty")]
        public SystemUser user_ff_incidentparty {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_incidentparty", null);
            }
            set {
                SetRelatedEntity("user_ff_incidentparty", null, value);
            }
        }
        
        public static ff_incidentparty Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_incidentparty,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Custom tabel som anvendes til at angive noter på Account og Contact</para>
    /// <para>Display Name: Note</para>
    /// </summary>
    [EntityLogicalName("ff_medlemsnote")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_medlemsnote : ExtendedEntity<ff_medlemsnoteState, ff_medlemsnote_StatusCode> {
        
        public const string EntityLogicalName = "ff_medlemsnote";
        
        public const int EntityTypeCode = 11325;
        
        public ff_medlemsnote() : 
                base(EntityLogicalName) {
        }
        
        public ff_medlemsnote(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("subject");
            }
        }
        
        [AttributeLogicalName("activityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the activity.</para>
        /// <para>Display Name: Activity</para>
        /// </summary>
        [AttributeLogicalName("activityid")]
        [DisplayName("Activity")]
        public Guid? ActivityId {
            get {
                return GetAttributeValue<Guid?>("activityid");
            }
            set {
                SetId("activityid", value);
            }
        }
        
        /// <summary>
        /// <para>Additional information provided by the external application as JSON. For internal use only.</para>
        /// <para>Display Name: Activity Additional Parameters</para>
        /// </summary>
        [AttributeLogicalName("activityadditionalparams")]
        [DisplayName("Activity Additional Parameters")]
        public string ActivityAdditionalParams {
            get {
                return GetAttributeValue<string>("activityadditionalparams");
            }
            set {
                SetAttributeValue("activityadditionalparams", value);
            }
        }
        
        /// <summary>
        /// <para>Type of activity.</para>
        /// <para>Display Name: Activity Type</para>
        /// </summary>
        [AttributeLogicalName("activitytypecode")]
        [DisplayName("Activity Type")]
        public string ActivityTypeCode {
            get {
                return GetAttributeValue<string>("activitytypecode");
            }
        }
        
        /// <summary>
        /// <para>Actual duration of the activity in minutes.</para>
        /// <para>Display Name: Actual Duration</para>
        /// </summary>
        [AttributeLogicalName("actualdurationminutes")]
        [DisplayName("Actual Duration")]
        [Range(0, 2147483647)]
        public int? ActualDurationMinutes {
            get {
                return GetAttributeValue<int?>("actualdurationminutes");
            }
            set {
                SetAttributeValue("actualdurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Actual end time of the activity.</para>
        /// <para>Display Name: Actual End</para>
        /// </summary>
        [AttributeLogicalName("actualend")]
        [DisplayName("Actual End")]
        public DateTime? ActualEnd {
            get {
                return GetAttributeValue<DateTime?>("actualend");
            }
            set {
                SetAttributeValue("actualend", value);
            }
        }
        
        /// <summary>
        /// <para>Actual start time of the activity.</para>
        /// <para>Display Name: Actual Start</para>
        /// </summary>
        [AttributeLogicalName("actualstart")]
        [DisplayName("Actual Start")]
        public DateTime? ActualStart {
            get {
                return GetAttributeValue<DateTime?>("actualstart");
            }
            set {
                SetAttributeValue("actualstart", value);
            }
        }
        
        /// <summary>
        /// <para>Blind Carbon-copy (bcc) recipients of the activity.</para>
        /// <para>Display Name: BCC</para>
        /// </summary>
        [AttributeLogicalName("bcc")]
        [DisplayName("BCC")]
        public IEnumerable<ActivityParty> Bcc {
            get {
                return GetEntityCollection<ActivityParty>("bcc");
            }
            set {
                SetEntityCollection("bcc", value);
            }
        }
        
        /// <summary>
        /// <para>Carbon-copy (cc) recipients of the activity.</para>
        /// <para>Display Name: CC</para>
        /// </summary>
        [AttributeLogicalName("cc")]
        [DisplayName("CC")]
        public IEnumerable<ActivityParty> Cc {
            get {
                return GetEntityCollection<ActivityParty>("cc");
            }
            set {
                SetEntityCollection("cc", value);
            }
        }
        
        /// <summary>
        /// <para>Shows how contact about the social activity originated, such as from Twitter or Facebook. This field is read-only.</para>
        /// <para>Display Name: Social Channel</para>
        /// </summary>
        [AttributeLogicalName("community")]
        [DisplayName("Social Channel")]
        public socialprofile_community? Community {
            get {
                return GetOptionSetValue<socialprofile_community>("community");
            }
            set {
                SetOptionSetValue("community", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the activity.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was created.</para>
        /// <para>Display Name: Date Created</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Date Created")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the activitypointer.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Customer with which the activity is associated.</para>
        /// <para>Display Name: Customers</para>
        /// </summary>
        [AttributeLogicalName("customers")]
        [DisplayName("Customers")]
        public IEnumerable<ActivityParty> Customers {
            get {
                return GetEntityCollection<ActivityParty>("customers");
            }
            set {
                SetEntityCollection("customers", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time when the delivery of the activity was last attempted.</para>
        /// <para>Display Name: Date Delivery Last Attempted</para>
        /// </summary>
        [AttributeLogicalName("deliverylastattemptedon")]
        [DisplayName("Date Delivery Last Attempted")]
        public DateTime? DeliveryLastAttemptedOn {
            get {
                return GetAttributeValue<DateTime?>("deliverylastattemptedon");
            }
        }
        
        /// <summary>
        /// <para>Priority of delivery of the activity to the email server.</para>
        /// <para>Display Name: Delivery Priority</para>
        /// </summary>
        [AttributeLogicalName("deliveryprioritycode")]
        [DisplayName("Delivery Priority")]
        public activitypointer_deliveryprioritycode? DeliveryPriorityCode {
            get {
                return GetOptionSetValue<activitypointer_deliveryprioritycode>("deliveryprioritycode");
            }
            set {
                SetOptionSetValue("deliveryprioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Beskrivelse af aktiviteten.</para>
        /// <para>Display Name: Beskrivelse</para>
        /// </summary>
        [AttributeLogicalName("description")]
        [DisplayName("Beskrivelse")]
        public string Description {
            get {
                return GetAttributeValue<string>("description");
            }
            set {
                SetAttributeValue("description", value);
            }
        }
        
        /// <summary>
        /// <para>The message id of activity which is returned from Exchange Server.</para>
        /// <para>Display Name: Exchange Item ID</para>
        /// </summary>
        [AttributeLogicalName("exchangeitemid")]
        [DisplayName("Exchange Item ID")]
        [MaxLength(200)]
        public string ExchangeItemId {
            get {
                return GetAttributeValue<string>("exchangeitemid");
            }
            set {
                SetAttributeValue("exchangeitemid", value);
            }
        }
        
        /// <summary>
        /// <para>Exchange rate for the currency associated with the activitypointer with respect to the base currency.</para>
        /// <para>Display Name: Exchange Rate</para>
        /// </summary>
        [AttributeLogicalName("exchangerate")]
        [DisplayName("Exchange Rate")]
        public decimal? ExchangeRate {
            get {
                return GetAttributeValue<decimal?>("exchangerate");
            }
        }
        
        /// <summary>
        /// <para>Shows the web link of Activity of type email.</para>
        /// <para>Display Name: Exchange WebLink</para>
        /// </summary>
        [AttributeLogicalName("exchangeweblink")]
        [DisplayName("Exchange WebLink")]
        [MaxLength(1250)]
        public string ExchangeWebLink {
            get {
                return GetAttributeValue<string>("exchangeweblink");
            }
            set {
                SetAttributeValue("exchangeweblink", value);
            }
        }
        
        /// <summary>
        /// <para>Person who the activity is from.</para>
        /// <para>Display Name: From</para>
        /// </summary>
        [AttributeLogicalName("from")]
        [DisplayName("From")]
        public IEnumerable<ActivityParty> From {
            get {
                return GetEntityCollection<ActivityParty>("from");
            }
            set {
                SetEntityCollection("from", value);
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Type of instance of a recurring series.</para>
        /// <para>Display Name: Recurring Instance Type</para>
        /// </summary>
        [AttributeLogicalName("instancetypecode")]
        [DisplayName("Recurring Instance Type")]
        public ff_medlemsnote_InstanceTypeCode? InstanceTypeCode {
            get {
                return GetOptionSetValue<ff_medlemsnote_InstanceTypeCode>("instancetypecode");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was billed as part of resolving a case.</para>
        /// <para>Display Name: Is Billed</para>
        /// </summary>
        [AttributeLogicalName("isbilled")]
        [DisplayName("Is Billed")]
        public bool? IsBilled {
            get {
                return GetAttributeValue<bool?>("isbilled");
            }
            set {
                SetAttributeValue("isbilled", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Is Private</para>
        /// </summary>
        [AttributeLogicalName("ismapiprivate")]
        [DisplayName("Is Private")]
        public bool? IsMapiPrivate {
            get {
                return GetAttributeValue<bool?>("ismapiprivate");
            }
            set {
                SetAttributeValue("ismapiprivate", value);
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity is a regular activity type or event type.</para>
        /// <para>Display Name: Is Regular Activity</para>
        /// </summary>
        [AttributeLogicalName("isregularactivity")]
        [DisplayName("Is Regular Activity")]
        public bool? IsRegularActivity {
            get {
                return GetAttributeValue<bool?>("isregularactivity");
            }
        }
        
        /// <summary>
        /// <para>Information regarding whether the activity was created from a workflow rule.</para>
        /// <para>Display Name: Is Workflow Created</para>
        /// </summary>
        [AttributeLogicalName("isworkflowcreated")]
        [DisplayName("Is Workflow Created")]
        public bool? IsWorkflowCreated {
            get {
                return GetAttributeValue<bool?>("isworkflowcreated");
            }
            set {
                SetAttributeValue("isworkflowcreated", value);
            }
        }
        
        /// <summary>
        /// <para>Contains the date and time stamp of the last on hold time.</para>
        /// <para>Display Name: Last On Hold Time</para>
        /// </summary>
        [AttributeLogicalName("lastonholdtime")]
        [DisplayName("Last On Hold Time")]
        public DateTime? LastOnHoldTime {
            get {
                return GetAttributeValue<DateTime?>("lastonholdtime");
            }
            set {
                SetAttributeValue("lastonholdtime", value);
            }
        }
        
        /// <summary>
        /// <para>Left the voice mail</para>
        /// <para>Display Name: Left Voice Mail</para>
        /// </summary>
        [AttributeLogicalName("leftvoicemail")]
        [DisplayName("Left Voice Mail")]
        public bool? LeftVoiceMail {
            get {
                return GetAttributeValue<bool?>("leftvoicemail");
            }
            set {
                SetAttributeValue("leftvoicemail", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of user who last modified the activity.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when activity was last modified.</para>
        /// <para>Display Name: Last Updated</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Last Updated")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who last modified the activitypointer.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Shows how long, in minutes, that the record was on hold.</para>
        /// <para>Display Name: On Hold Time (Minutes)</para>
        /// </summary>
        [AttributeLogicalName("onholdtime")]
        [DisplayName("On Hold Time (Minutes)")]
        [Range(-2147483648, 2147483647)]
        public int? OnHoldTime {
            get {
                return GetAttributeValue<int?>("onholdtime");
            }
        }
        
        /// <summary>
        /// <para>List of optional attendees for the activity.</para>
        /// <para>Display Name: Optional Attendees</para>
        /// </summary>
        [AttributeLogicalName("optionalattendees")]
        [DisplayName("Optional Attendees")]
        public IEnumerable<ActivityParty> OptionalAttendees {
            get {
                return GetEntityCollection<ActivityParty>("optionalattendees");
            }
            set {
                SetEntityCollection("optionalattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Person who organized the activity.</para>
        /// <para>Display Name: Organizer</para>
        /// </summary>
        [AttributeLogicalName("organizer")]
        [DisplayName("Organizer")]
        public IEnumerable<ActivityParty> Organizer {
            get {
                return GetEntityCollection<ActivityParty>("organizer");
            }
            set {
                SetEntityCollection("organizer", value);
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user or team who owns the activity.</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the business unit that owns the activity.</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the team that owns the activity.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user that owns the activity.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Outsource vendor with which activity is associated.</para>
        /// <para>Display Name: Outsource Vendors</para>
        /// </summary>
        [AttributeLogicalName("partners")]
        [DisplayName("Outsource Vendors")]
        public IEnumerable<ActivityParty> Partners {
            get {
                return GetEntityCollection<ActivityParty>("partners");
            }
            set {
                SetEntityCollection("partners", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Delay activity processing until</para>
        /// </summary>
        [AttributeLogicalName("postponeactivityprocessinguntil")]
        [DisplayName("Delay activity processing until")]
        public DateTime? PostponeActivityProcessingUntil {
            get {
                return GetAttributeValue<DateTime?>("postponeactivityprocessinguntil");
            }
        }
        
        /// <summary>
        /// <para>Det emne, der er tilknyttet aktiviteten.</para>
        /// <para>Display Name: Emne</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Emne")]
        [MaxLength(500)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>Priority of the activity.</para>
        /// <para>Display Name: Priority</para>
        /// </summary>
        [AttributeLogicalName("prioritycode")]
        [DisplayName("Priority")]
        public ff_medlemsnote_PriorityCode? PriorityCode {
            get {
                return GetOptionSetValue<ff_medlemsnote_PriorityCode>("prioritycode");
            }
            set {
                SetOptionSetValue("prioritycode", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Process.</para>
        /// <para>Display Name: Process</para>
        /// </summary>
        [AttributeLogicalName("processid")]
        [DisplayName("Process")]
        public Guid? ProcessId {
            get {
                return GetAttributeValue<Guid?>("processid");
            }
            set {
                SetAttributeValue("processid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the object with which the activity is associated.</para>
        /// <para>Display Name: Regarding</para>
        /// </summary>
        [AttributeLogicalName("regardingobjectid")]
        [DisplayName("Regarding")]
        public EntityReference RegardingObjectId {
            get {
                return GetAttributeValue<EntityReference>("regardingobjectid");
            }
            set {
                SetAttributeValue("regardingobjectid", value);
            }
        }
        
        /// <summary>
        /// <para>List of required attendees for the activity.</para>
        /// <para>Display Name: Required Attendees</para>
        /// </summary>
        [AttributeLogicalName("requiredattendees")]
        [DisplayName("Required Attendees")]
        public IEnumerable<ActivityParty> RequiredAttendees {
            get {
                return GetEntityCollection<ActivityParty>("requiredattendees");
            }
            set {
                SetEntityCollection("requiredattendees", value);
            }
        }
        
        /// <summary>
        /// <para>Users or facility/equipment that are required for the activity.</para>
        /// <para>Display Name: Resources</para>
        /// </summary>
        [AttributeLogicalName("resources")]
        [DisplayName("Resources")]
        public IEnumerable<ActivityParty> Resources {
            get {
                return GetEntityCollection<ActivityParty>("resources");
            }
            set {
                SetEntityCollection("resources", value);
            }
        }
        
        /// <summary>
        /// <para>Choose the service level agreement (SLA) that you want to apply to the case record.</para>
        /// <para>Display Name: SLA</para>
        /// </summary>
        [AttributeLogicalName("slaid")]
        [DisplayName("SLA")]
        public EntityReference SLAId {
            get {
                return GetAttributeValue<EntityReference>("slaid");
            }
            set {
                SetAttributeValue("slaid", value);
            }
        }
        
        /// <summary>
        /// <para>Last SLA that was applied to this case. This field is for internal use only.</para>
        /// <para>Display Name: Last SLA applied</para>
        /// </summary>
        [AttributeLogicalName("slainvokedid")]
        [DisplayName("Last SLA applied")]
        public EntityReference SLAInvokedId {
            get {
                return GetAttributeValue<EntityReference>("slainvokedid");
            }
        }
        
        /// <summary>
        /// <para>Scheduled duration of the activity, specified in minutes.</para>
        /// <para>Display Name: Scheduled Duration</para>
        /// </summary>
        [AttributeLogicalName("scheduleddurationminutes")]
        [DisplayName("Scheduled Duration")]
        [Range(0, 2147483647)]
        public int? ScheduledDurationMinutes {
            get {
                return GetAttributeValue<int?>("scheduleddurationminutes");
            }
            set {
                SetAttributeValue("scheduleddurationminutes", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled end time of the activity.</para>
        /// <para>Display Name: Due Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledend")]
        [DisplayName("Due Date")]
        public DateTime? ScheduledEnd {
            get {
                return GetAttributeValue<DateTime?>("scheduledend");
            }
            set {
                SetAttributeValue("scheduledend", value);
            }
        }
        
        /// <summary>
        /// <para>Scheduled start time of the activity.</para>
        /// <para>Display Name: Start Date</para>
        /// </summary>
        [AttributeLogicalName("scheduledstart")]
        [DisplayName("Start Date")]
        public DateTime? ScheduledStart {
            get {
                return GetAttributeValue<DateTime?>("scheduledstart");
            }
            set {
                SetAttributeValue("scheduledstart", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the mailbox associated with the sender of the email message.</para>
        /// <para>Display Name: Sender's Mailbox</para>
        /// </summary>
        [AttributeLogicalName("sendermailboxid")]
        [DisplayName("Sender\'s Mailbox")]
        public EntityReference SenderMailboxId {
            get {
                return GetAttributeValue<EntityReference>("sendermailboxid");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the activity was sent.</para>
        /// <para>Display Name: Date Sent</para>
        /// </summary>
        [AttributeLogicalName("senton")]
        [DisplayName("Date Sent")]
        public DateTime? SentOn {
            get {
                return GetAttributeValue<DateTime?>("senton");
            }
        }
        
        /// <summary>
        /// <para>Uniqueidentifier specifying the id of recurring series of an instance.</para>
        /// <para>Display Name: Series Id</para>
        /// </summary>
        [AttributeLogicalName("seriesid")]
        [DisplayName("Series Id")]
        public Guid? SeriesId {
            get {
                return GetAttributeValue<Guid?>("seriesid");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of an associated service.</para>
        /// <para>Display Name: Service</para>
        /// </summary>
        [AttributeLogicalName("serviceid")]
        [DisplayName("Service")]
        public EntityReference ServiceId {
            get {
                return GetAttributeValue<EntityReference>("serviceid");
            }
            set {
                SetAttributeValue("serviceid", value);
            }
        }
        
        /// <summary>
        /// <para>Shows the date and time by which the activities are sorted.</para>
        /// <para>Display Name: Sort Date</para>
        /// </summary>
        [AttributeLogicalName("sortdate")]
        [DisplayName("Sort Date")]
        public DateTime? SortDate {
            get {
                return GetAttributeValue<DateTime?>("sortdate");
            }
            set {
                SetAttributeValue("sortdate", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the Stage.</para>
        /// <para>Display Name: (Deprecated) Process Stage</para>
        /// </summary>
        [AttributeLogicalName("stageid")]
        [DisplayName("(Deprecated) Process Stage")]
        public Guid? StageId {
            get {
                return GetAttributeValue<Guid?>("stageid");
            }
            set {
                SetAttributeValue("stageid", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the activity.</para>
        /// <para>Display Name: Activity Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Activity Status")]
        public ff_medlemsnoteState? StateCode {
            get {
                return GetOptionSetValue<ff_medlemsnoteState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the activity.</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_medlemsnote_StatusCode? StatusCode {
            get {
                return GetOptionSetValue<ff_medlemsnote_StatusCode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        /// <summary>
        /// <para>Det emne, der er tilknyttet aktiviteten.</para>
        /// <para>Display Name: Emne</para>
        /// </summary>
        [AttributeLogicalName("subject")]
        [DisplayName("Emne")]
        [MaxLength(500)]
        public string Subject {
            get {
                return GetAttributeValue<string>("subject");
            }
            set {
                SetAttributeValue("subject", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Person who is the receiver of the activity.</para>
        /// <para>Display Name: To</para>
        /// </summary>
        [AttributeLogicalName("to")]
        [DisplayName("To")]
        public IEnumerable<ActivityParty> To {
            get {
                return GetEntityCollection<ActivityParty>("to");
            }
            set {
                SetEntityCollection("to", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the currency associated with the activitypointer.</para>
        /// <para>Display Name: Currency</para>
        /// </summary>
        [AttributeLogicalName("transactioncurrencyid")]
        [DisplayName("Currency")]
        public EntityReference TransactionCurrencyId {
            get {
                return GetAttributeValue<EntityReference>("transactioncurrencyid");
            }
            set {
                SetAttributeValue("transactioncurrencyid", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: (Deprecated) Traversed Path</para>
        /// </summary>
        [AttributeLogicalName("traversedpath")]
        [DisplayName("(Deprecated) Traversed Path")]
        [MaxLength(1250)]
        public string TraversedPath {
            get {
                return GetAttributeValue<string>("traversedpath");
            }
            set {
                SetAttributeValue("traversedpath", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version number of the activity.</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("account_ff_medlemsnotes")]
        public Account account_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Account>("account_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("account_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("activityid")]
        [RelationshipSchemaName("activity_pointer_ff_medlemsnote")]
        public ActivityPointer activity_pointer_ff_medlemsnote {
            get {
                return GetRelatedEntity<ActivityPointer>("activity_pointer_ff_medlemsnote", null);
            }
            set {
                SetRelatedEntity("activity_pointer_ff_medlemsnote", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("contact_ff_medlemsnotes")]
        public Contact contact_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Contact>("contact_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("contact_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("entitlement_ff_medlemsnotes")]
        public Entitlement entitlement_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Entitlement>("entitlement_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("entitlement_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("ff_activities_ff_medlemsnotes")]
        public ff_activities ff_activities_ff_medlemsnotes {
            get {
                return GetRelatedEntity<ff_activities>("ff_activities_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("ff_activities_ff_medlemsnotes", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_Annotations")]
        public IEnumerable<Annotation> ff_medlemsnote_Annotations {
            get {
                return GetRelatedEntities<Annotation>("ff_medlemsnote_Annotations", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_Annotations", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_QueueItems")]
        public IEnumerable<QueueItem> ff_medlemsnote_QueueItems {
            get {
                return GetRelatedEntities<QueueItem>("ff_medlemsnote_QueueItems", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_QueueItems", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_medlemsnote_activity_parties")]
        public IEnumerable<ActivityParty> ff_medlemsnote_activity_parties {
            get {
                return GetRelatedEntities<ActivityParty>("ff_medlemsnote_activity_parties", null);
            }
            set {
                SetRelatedEntities("ff_medlemsnote_activity_parties", null, value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("ff_medlemsnote_businessunit_owningbusinessunit")]
        public BusinessUnit ff_medlemsnote_businessunit_owningbusinessunit {
            get {
                return GetRelatedEntity<BusinessUnit>("ff_medlemsnote_businessunit_owningbusinessunit", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_businessunit_owningbusinessunit", null, value);
            }
        }
        
        [AttributeLogicalName("sendermailboxid")]
        [RelationshipSchemaName("ff_medlemsnote_mailbox_sendermailboxid")]
        public Mailbox ff_medlemsnote_mailbox_sendermailboxid {
            get {
                return GetRelatedEntity<Mailbox>("ff_medlemsnote_mailbox_sendermailboxid", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_mailbox_sendermailboxid", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("ff_medlemsnote_systemuser_createdby")]
        public SystemUser ff_medlemsnote_systemuser_createdby {
            get {
                return GetRelatedEntity<SystemUser>("ff_medlemsnote_systemuser_createdby", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_systemuser_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("ff_medlemsnote_systemuser_createdonbehalfby")]
        public SystemUser ff_medlemsnote_systemuser_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("ff_medlemsnote_systemuser_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_systemuser_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("ff_medlemsnote_systemuser_modifiedby")]
        public SystemUser ff_medlemsnote_systemuser_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("ff_medlemsnote_systemuser_modifiedby", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_systemuser_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("ff_medlemsnote_systemuser_modifiedonbehalfby")]
        public SystemUser ff_medlemsnote_systemuser_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("ff_medlemsnote_systemuser_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_systemuser_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("ff_medlemsnote_systemuser_owninguser")]
        public SystemUser ff_medlemsnote_systemuser_owninguser {
            get {
                return GetRelatedEntity<SystemUser>("ff_medlemsnote_systemuser_owninguser", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_systemuser_owninguser", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("ff_medlemsnote_team_owningteam")]
        public Team ff_medlemsnote_team_owningteam {
            get {
                return GetRelatedEntity<Team>("ff_medlemsnote_team_owningteam", null);
            }
            set {
                SetRelatedEntity("ff_medlemsnote_team_owningteam", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("incident_ff_medlemsnotes")]
        public Incident incident_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Incident>("incident_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("incident_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("lead_ff_medlemsnotes")]
        public Lead lead_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Lead>("lead_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("lead_ff_medlemsnotes", null, value);
            }
        }
        
        [AttributeLogicalName("regardingobjectid")]
        [RelationshipSchemaName("opportunity_ff_medlemsnotes")]
        public Opportunity opportunity_ff_medlemsnotes {
            get {
                return GetRelatedEntity<Opportunity>("opportunity_ff_medlemsnotes", null);
            }
            set {
                SetRelatedEntity("opportunity_ff_medlemsnotes", null, value);
            }
        }
        
        public static ff_medlemsnote Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_medlemsnote,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Membership fee is a required payment for belonging to the organization</para>
    /// <para>Display Name: Kontingentgruppe</para>
    /// </summary>
    [EntityLogicalName("ff_membershipfee")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_membershipfee : ExtendedEntity<ff_membershipfeeState, ff_membershipfee_statuscode> {
        
        public const string EntityLogicalName = "ff_membershipfee";
        
        public const int EntityTypeCode = 10899;
        
        public ff_membershipfee() : 
                base(EntityLogicalName) {
        }
        
        public ff_membershipfee(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_membershipfeegroup");
            }
        }
        
        [AttributeLogicalName("ff_membershipfeeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_membershipfeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Membership Fee</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipfeeid")]
        [DisplayName("Membership Fee")]
        public Guid? ff_membershipfeeId {
            get {
                return GetAttributeValue<Guid?>("ff_membershipfeeid");
            }
            set {
                SetId("ff_membershipfeeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kontingentgruppe</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipfeegroup")]
        [DisplayName("Kontingentgruppe")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_membershipfeegroup");
            }
            set {
                SetAttributeValue("ff_membershipfeegroup", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Medlem</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Medlem")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kontingentgruppe</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipfeegroup")]
        [DisplayName("Kontingentgruppe")]
        [MaxLength(100)]
        public string ff_membershipfeegroup {
            get {
                return GetAttributeValue<string>("ff_membershipfeegroup");
            }
            set {
                SetAttributeValue("ff_membershipfeegroup", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kontingent nummer</para>
        /// </summary>
        [AttributeLogicalName("ff_membershipfeekey")]
        [DisplayName("Kontingent nummer")]
        [MaxLength(100)]
        public string ff_membershipfeekey {
            get {
                return GetAttributeValue<string>("ff_membershipfeekey");
            }
            set {
                SetAttributeValue("ff_membershipfeekey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gældende fra</para>
        /// </summary>
        [AttributeLogicalName("ff_validfrom")]
        [DisplayName("Gældende fra")]
        public DateTime? ff_validfrom {
            get {
                return GetAttributeValue<DateTime?>("ff_validfrom");
            }
            set {
                SetAttributeValue("ff_validfrom", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Gældende til</para>
        /// </summary>
        [AttributeLogicalName("ff_validuntil")]
        [DisplayName("Gældende til")]
        public DateTime? ff_validuntil {
            get {
                return GetAttributeValue<DateTime?>("ff_validuntil");
            }
            set {
                SetAttributeValue("ff_validuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Membership Fee</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_membershipfeeState? statecode {
            get {
                return GetOptionSetValue<ff_membershipfeeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Membership Fee</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_membershipfee_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_membershipfee_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_membershipfee")]
        public BusinessUnit business_unit_ff_membershipfee {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_membershipfee", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_membershipfee", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_membershipfee_member_contact")]
        public Contact ff_membershipfee_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_membershipfee_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_membershipfee_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_membershipfee_createdby")]
        public SystemUser lk_ff_membershipfee_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_membershipfee_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_membershipfee_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_membershipfee_createdonbehalfby")]
        public SystemUser lk_ff_membershipfee_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_membershipfee_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_membershipfee_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_membershipfee_modifiedby")]
        public SystemUser lk_ff_membershipfee_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_membershipfee_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_membershipfee_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_membershipfee_modifiedonbehalfby")]
        public SystemUser lk_ff_membershipfee_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_membershipfee_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_membershipfee_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_membershipfee")]
        public Team team_ff_membershipfee {
            get {
                return GetRelatedEntity<Team>("team_ff_membershipfee", null);
            }
            set {
                SetRelatedEntity("team_ff_membershipfee", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_membershipfee")]
        public SystemUser user_ff_membershipfee {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_membershipfee", null);
            }
            set {
                SetRelatedEntity("user_ff_membershipfee", null, value);
            }
        }
        
        public static ff_membershipfee Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_membershipfee,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'membershipfeekey'</para>
        /// </summary>
        public static ff_membershipfee Retrieve_ff_membershipfeekey(IOrganizationService service, string ff_membershipfeekey, params Expression<Func<ff_membershipfee,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_membershipfeekey", ff_membershipfeekey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'membershipfeekey'</para>
        /// </summary>
        public void AltKey_ff_membershipfeekey(string ff_membershipfeekey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_membershipfeekey", ff_membershipfeekey);
        }
    }
    
    /// <summary>
    /// <para>A position of trust is a role where an individual is entrusted with significant responsibility and authority, often involving the confidence and reliance of others.</para>
    /// <para>Display Name: Tillidshverv</para>
    /// </summary>
    [EntityLogicalName("ff_positionoftrust")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_positionoftrust : ExtendedEntity<ff_positionoftrustState, ff_positionoftrust_statuscode> {
        
        public const string EntityLogicalName = "ff_positionoftrust";
        
        public const int EntityTypeCode = 11143;
        
        public ff_positionoftrust() : 
                base(EntityLogicalName) {
        }
        
        public ff_positionoftrust(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_positionoftrustid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_positionoftrustid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Position of trust</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrustid")]
        [DisplayName("Position of trust")]
        public Guid? ff_positionoftrustId {
            get {
                return GetAttributeValue<Guid?>("ff_positionoftrustid");
            }
            set {
                SetId("ff_positionoftrustid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Member</para>
        /// </summary>
        [AttributeLogicalName("ff_member")]
        [DisplayName("Member")]
        public EntityReference ff_member {
            get {
                return GetAttributeValue<EntityReference>("ff_member");
            }
            set {
                SetAttributeValue("ff_member", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Anvendes til at BC kan lave opslag mod Dynamics</para>
        /// <para>Display Name: Tillildshvervsnummer</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrustkey")]
        [DisplayName("Tillildshvervsnummer")]
        [MaxLength(100)]
        public string ff_positionoftrustkey {
            get {
                return GetAttributeValue<string>("ff_positionoftrustkey");
            }
            set {
                SetAttributeValue("ff_positionoftrustkey", value);
            }
        }
        
        /// <summary>
        /// <para>[Deprecated 25/10-24: Erstattet af relation til tabel positionoftrusttype i stedet.]</para>
        /// <para>Display Name: ZZ_Position of trust type</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrusttype")]
        [DisplayName("ZZ_Position of trust type")]
        [ObsoleteAttribute()]
        public ff_positionoftrusttype_Enum? ff_positionoftrusttype {
            get {
                return GetOptionSetValue<ff_positionoftrusttype_Enum>("ff_positionoftrusttype");
            }
            set {
                SetOptionSetValue("ff_positionoftrusttype", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Position of trust type</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrusttypelookup")]
        [DisplayName("Position of trust type")]
        public EntityReference ff_positionoftrusttypelookup {
            get {
                return GetAttributeValue<EntityReference>("ff_positionoftrusttypelookup");
            }
            set {
                SetAttributeValue("ff_positionoftrusttypelookup", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Valid from</para>
        /// </summary>
        [AttributeLogicalName("ff_validfrom")]
        [DisplayName("Valid from")]
        public DateTime? ff_validfrom {
            get {
                return GetAttributeValue<DateTime?>("ff_validfrom");
            }
            set {
                SetAttributeValue("ff_validfrom", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Valid until</para>
        /// </summary>
        [AttributeLogicalName("ff_validuntil")]
        [DisplayName("Valid until")]
        public DateTime? ff_validuntil {
            get {
                return GetAttributeValue<DateTime?>("ff_validuntil");
            }
            set {
                SetAttributeValue("ff_validuntil", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Workplace</para>
        /// </summary>
        [AttributeLogicalName("ff_workplace")]
        [DisplayName("Workplace")]
        public EntityReference ff_workplace {
            get {
                return GetAttributeValue<EntityReference>("ff_workplace");
            }
            set {
                SetAttributeValue("ff_workplace", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Position of trust</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_positionoftrustState? statecode {
            get {
                return GetOptionSetValue<ff_positionoftrustState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Position of trust</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_positionoftrust_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_positionoftrust_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_positionoftrust")]
        public BusinessUnit business_unit_ff_positionoftrust {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_contact_positionoftrust_ff_positionoftrust")]
        public IEnumerable<Contact> ff_contact_positionoftrust_ff_positionoftrust {
            get {
                return GetRelatedEntities<Contact>("ff_contact_positionoftrust_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntities("ff_contact_positionoftrust_ff_positionoftrust", null, value);
            }
        }
        
        [RelationshipSchemaName("ff_contact_workingenvironmentrepresentative_ff_positionoftrust")]
        public IEnumerable<Contact> ff_contact_workingenvironmentrepresentative_ff_positionoftrust {
            get {
                return GetRelatedEntities<Contact>("ff_contact_workingenvironmentrepresentative_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntities("ff_contact_workingenvironmentrepresentative_ff_positionoftrust", null, value);
            }
        }
        
        [AttributeLogicalName("ff_member")]
        [RelationshipSchemaName("ff_positionoftrust_member_contact")]
        public Contact ff_positionoftrust_member_contact {
            get {
                return GetRelatedEntity<Contact>("ff_positionoftrust_member_contact", null);
            }
            set {
                SetRelatedEntity("ff_positionoftrust_member_contact", null, value);
            }
        }
        
        [AttributeLogicalName("ff_positionoftrusttypelookup")]
        [RelationshipSchemaName("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype")]
        public ff_positionoftrusttype ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype {
            get {
                return GetRelatedEntity<ff_positionoftrusttype>("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype", null);
            }
            set {
                SetRelatedEntity("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype", null, value);
            }
        }
        
        [AttributeLogicalName("ff_workplace")]
        [RelationshipSchemaName("ff_positionoftrust_workplace_account")]
        public Account ff_positionoftrust_workplace_account {
            get {
                return GetRelatedEntity<Account>("ff_positionoftrust_workplace_account", null);
            }
            set {
                SetRelatedEntity("ff_positionoftrust_workplace_account", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_positionoftrust_createdby")]
        public SystemUser lk_ff_positionoftrust_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrust_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrust_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_positionoftrust_createdonbehalfby")]
        public SystemUser lk_ff_positionoftrust_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrust_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrust_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_positionoftrust_modifiedby")]
        public SystemUser lk_ff_positionoftrust_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrust_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrust_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_positionoftrust_modifiedonbehalfby")]
        public SystemUser lk_ff_positionoftrust_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrust_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrust_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_positionoftrust")]
        public Team team_ff_positionoftrust {
            get {
                return GetRelatedEntity<Team>("team_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntity("team_ff_positionoftrust", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_positionoftrust")]
        public SystemUser user_ff_positionoftrust {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_positionoftrust", null);
            }
            set {
                SetRelatedEntity("user_ff_positionoftrust", null, value);
            }
        }
        
        public static ff_positionoftrust Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_positionoftrust,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'positionoftrustkey'</para>
        /// </summary>
        public static ff_positionoftrust Retrieve_ff_positionoftrustkey(IOrganizationService service, string ff_positionoftrustkey, params Expression<Func<ff_positionoftrust,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_positionoftrustkey", ff_positionoftrustkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'positionoftrustkey'</para>
        /// </summary>
        public void AltKey_ff_positionoftrustkey(string ff_positionoftrustkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_positionoftrustkey", ff_positionoftrustkey);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Tillidshvervtype</para>
    /// </summary>
    [EntityLogicalName("ff_positionoftrusttype")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_positionoftrusttype : ExtendedEntity<ff_positionoftrusttypeState, ff_positionoftrusttype_statuscode> {
        
        public const string EntityLogicalName = "ff_positionoftrusttype";
        
        public const int EntityTypeCode = 11016;
        
        public ff_positionoftrusttype() : 
                base(EntityLogicalName) {
        }
        
        public ff_positionoftrusttype(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_positionoftrusttypename");
            }
        }
        
        [AttributeLogicalName("ff_positionoftrusttypeid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_positionoftrusttypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Position of trust type</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrusttypeid")]
        [DisplayName("Position of trust type")]
        public Guid? ff_positionoftrusttypeId {
            get {
                return GetAttributeValue<Guid?>("ff_positionoftrusttypeid");
            }
            set {
                SetId("ff_positionoftrusttypeid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the organization</para>
        /// <para>Display Name: Organization Id</para>
        /// </summary>
        [AttributeLogicalName("organizationid")]
        [DisplayName("Organization Id")]
        public EntityReference OrganizationId {
            get {
                return GetAttributeValue<EntityReference>("organizationid");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrusttypename")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_positionoftrusttypename");
            }
            set {
                SetAttributeValue("ff_positionoftrusttypename", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Key for name in BC.</para>
        /// <para>Display Name: namekey</para>
        /// </summary>
        [AttributeLogicalName("ff_namekey")]
        [DisplayName("namekey")]
        [MaxLength(100)]
        public string ff_namekey {
            get {
                return GetAttributeValue<string>("ff_namekey");
            }
            set {
                SetAttributeValue("ff_namekey", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_positionoftrusttypename")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_positionoftrusttypename {
            get {
                return GetAttributeValue<string>("ff_positionoftrusttypename");
            }
            set {
                SetAttributeValue("ff_positionoftrusttypename", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Position of trust type</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_positionoftrusttypeState? statecode {
            get {
                return GetOptionSetValue<ff_positionoftrusttypeState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Position of trust type</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_positionoftrusttype_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_positionoftrusttype_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [RelationshipSchemaName("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype")]
        public IEnumerable<ff_positionoftrust> ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype {
            get {
                return GetRelatedEntities<ff_positionoftrust>("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype", null);
            }
            set {
                SetRelatedEntities("ff_positionoftrust_positionoftrusttypelookup_ff_positionoftrusttype", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_positionoftrusttype_createdby")]
        public SystemUser lk_ff_positionoftrusttype_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrusttype_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrusttype_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_positionoftrusttype_createdonbehalfby")]
        public SystemUser lk_ff_positionoftrusttype_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrusttype_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrusttype_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_positionoftrusttype_modifiedby")]
        public SystemUser lk_ff_positionoftrusttype_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrusttype_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrusttype_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_positionoftrusttype_modifiedonbehalfby")]
        public SystemUser lk_ff_positionoftrusttype_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_positionoftrusttype_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_positionoftrusttype_modifiedonbehalfby", null, value);
            }
        }
        
        public static ff_positionoftrusttype Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_positionoftrusttype,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'namekey'</para>
        /// </summary>
        public static ff_positionoftrusttype Retrieve_ff_namekey(IOrganizationService service, string ff_namekey, params Expression<Func<ff_positionoftrusttype,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_namekey", ff_namekey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'namekey'</para>
        /// </summary>
        public void AltKey_ff_namekey(string ff_namekey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_namekey", ff_namekey);
        }
    }
    
    /// <summary>
    /// <para>Display Name: Reporting of Opportunity</para>
    /// </summary>
    [EntityLogicalName("ff_reportingofopportunity")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_reportingofopportunity : ExtendedEntity<ff_reportingofopportunityState, ff_reportingofopportunity_statuscode> {
        
        public const string EntityLogicalName = "ff_reportingofopportunity";
        
        public const int EntityTypeCode = 11197;
        
        public ff_reportingofopportunity() : 
                base(EntityLogicalName) {
        }
        
        public ff_reportingofopportunity(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_reportingofopportunityid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_reportingofopportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Afrapportering Salgsmulighed</para>
        /// </summary>
        [AttributeLogicalName("ff_reportingofopportunityid")]
        [DisplayName("Afrapportering Salgsmulighed")]
        public Guid? ff_reportingofopportunityId {
            get {
                return GetAttributeValue<Guid?>("ff_reportingofopportunityid");
            }
            set {
                SetId("ff_reportingofopportunityid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Salesscore</para>
        /// </summary>
        [AttributeLogicalName("ff_salgsscore")]
        [DisplayName("Salesscore")]
        [Range(0, 10)]
        public int? ff_Salgsscore {
            get {
                return GetAttributeValue<int?>("ff_salgsscore");
            }
            set {
                SetAttributeValue("ff_salgsscore", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaign Activity</para>
        /// </summary>
        [AttributeLogicalName("ff_campaignactivity")]
        [DisplayName("Campaign Activity")]
        public EntityReference ff_campaignactivity {
            get {
                return GetAttributeValue<EntityReference>("ff_campaignactivity");
            }
            set {
                SetAttributeValue("ff_campaignactivity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Date for Result</para>
        /// </summary>
        [AttributeLogicalName("ff_dateforresult")]
        [DisplayName("Date for Result")]
        public DateTime? ff_dateforresult {
            get {
                return GetAttributeValue<DateTime?>("ff_dateforresult");
            }
            set {
                SetAttributeValue("ff_dateforresult", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Description</para>
        /// </summary>
        [AttributeLogicalName("ff_description")]
        [DisplayName("Description")]
        [MaxLength(2000)]
        public string ff_description {
            get {
                return GetAttributeValue<string>("ff_description");
            }
            set {
                SetAttributeValue("ff_description", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Giftcard</para>
        /// </summary>
        [AttributeLogicalName("ff_giftcard")]
        [DisplayName("Giftcard")]
        public EntityReference ff_giftcard {
            get {
                return GetAttributeValue<EntityReference>("ff_giftcard");
            }
            set {
                SetAttributeValue("ff_giftcard", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Name</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Name")]
        [MaxLength(100)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Opportunity</para>
        /// </summary>
        [AttributeLogicalName("ff_opportunity")]
        [DisplayName("Opportunity")]
        public EntityReference ff_opportunity {
            get {
                return GetAttributeValue<EntityReference>("ff_opportunity");
            }
            set {
                SetAttributeValue("ff_opportunity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Reason for Won or Loss</para>
        /// </summary>
        [AttributeLogicalName("ff_reasonforwonorloss")]
        [DisplayName("Reason for Won or Loss")]
        [MaxLength(500)]
        public string ff_reasonforwonorloss {
            get {
                return GetAttributeValue<string>("ff_reasonforwonorloss");
            }
            set {
                SetAttributeValue("ff_reasonforwonorloss", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Recruiter</para>
        /// </summary>
        [AttributeLogicalName("ff_recruiter")]
        [DisplayName("Recruiter")]
        public EntityReference ff_recruiter {
            get {
                return GetAttributeValue<EntityReference>("ff_recruiter");
            }
            set {
                SetAttributeValue("ff_recruiter", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Result of Opportunity</para>
        /// </summary>
        [AttributeLogicalName("ff_resultofopportunity")]
        [DisplayName("Result of Opportunity")]
        public ff_resultofopportunity? ff_resultofopportunity {
            get {
                return GetOptionSetValue<ff_resultofopportunity>("ff_resultofopportunity");
            }
            set {
                SetOptionSetValue("ff_resultofopportunity", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Campaign</para>
        /// </summary>
        [AttributeLogicalName("ff_sourcecampaign")]
        [DisplayName("Campaign")]
        public EntityReference ff_sourcecampaign {
            get {
                return GetAttributeValue<EntityReference>("ff_sourcecampaign");
            }
            set {
                SetAttributeValue("ff_sourcecampaign", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Worksituation</para>
        /// </summary>
        [AttributeLogicalName("ff_worksituation")]
        [DisplayName("Worksituation")]
        public ff_reportingofopportunity_ff_worksituation? ff_worksituation {
            get {
                return GetOptionSetValue<ff_reportingofopportunity_ff_worksituation>("ff_worksituation");
            }
            set {
                SetOptionSetValue("ff_worksituation", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Afrapportering Salgsmulighed</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_reportingofopportunityState? statecode {
            get {
                return GetOptionSetValue<ff_reportingofopportunityState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Afrapportering Salgsmulighed</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_reportingofopportunity_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_reportingofopportunity_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_reportingofopportunity")]
        public BusinessUnit business_unit_ff_reportingofopportunity {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_reportingofopportunity", null, value);
            }
        }
        
        [AttributeLogicalName("ff_giftcard")]
        [RelationshipSchemaName("ff_reportingofopportunity_giftcard_ff_giftcard")]
        public ff_giftcard ff_reportingofopportunity_giftcard_ff_giftcard {
            get {
                return GetRelatedEntity<ff_giftcard>("ff_reportingofopportunity_giftcard_ff_giftcard", null);
            }
            set {
                SetRelatedEntity("ff_reportingofopportunity_giftcard_ff_giftcard", null, value);
            }
        }
        
        [AttributeLogicalName("ff_opportunity")]
        [RelationshipSchemaName("ff_reportingofopportunity_opportunity_opportunity")]
        public Opportunity ff_reportingofopportunity_opportunity_opportunity {
            get {
                return GetRelatedEntity<Opportunity>("ff_reportingofopportunity_opportunity_opportunity", null);
            }
            set {
                SetRelatedEntity("ff_reportingofopportunity_opportunity_opportunity", null, value);
            }
        }
        
        [AttributeLogicalName("ff_recruiter")]
        [RelationshipSchemaName("ff_reportingofopportunity_recruiter_systemuser")]
        public SystemUser ff_reportingofopportunity_recruiter_systemuser {
            get {
                return GetRelatedEntity<SystemUser>("ff_reportingofopportunity_recruiter_systemuser", null);
            }
            set {
                SetRelatedEntity("ff_reportingofopportunity_recruiter_systemuser", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_reportingofopportunity_createdby")]
        public SystemUser lk_ff_reportingofopportunity_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_reportingofopportunity_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_reportingofopportunity_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_reportingofopportunity_createdonbehalfby")]
        public SystemUser lk_ff_reportingofopportunity_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_reportingofopportunity_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_reportingofopportunity_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_reportingofopportunity_modifiedby")]
        public SystemUser lk_ff_reportingofopportunity_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_reportingofopportunity_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_reportingofopportunity_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_reportingofopportunity_modifiedonbehalfby")]
        public SystemUser lk_ff_reportingofopportunity_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_reportingofopportunity_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_reportingofopportunity_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_reportingofopportunity")]
        public Team team_ff_reportingofopportunity {
            get {
                return GetRelatedEntity<Team>("team_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntity("team_ff_reportingofopportunity", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_reportingofopportunity")]
        public SystemUser user_ff_reportingofopportunity {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_reportingofopportunity", null);
            }
            set {
                SetRelatedEntity("user_ff_reportingofopportunity", null, value);
            }
        }
        
        public static ff_reportingofopportunity Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_reportingofopportunity,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
    }
    
    /// <summary>
    /// <para>Finansforbundets kredse</para>
    /// <para>Display Name: Kreds</para>
    /// </summary>
    [EntityLogicalName("ff_union")]
    [DebuggerDisplay("{DebuggerDisplay,nq}")]
    [DataContract()]
    public partial class ff_union : ExtendedEntity<ff_unionState, ff_union_statuscode> {
        
        public const string EntityLogicalName = "ff_union";
        
        public const int EntityTypeCode = 11261;
        
        public ff_union() : 
                base(EntityLogicalName) {
        }
        
        public ff_union(Guid Id) : 
                base(EntityLogicalName, Id) {
        }
        
        private string DebuggerDisplay {
            get {
                return GetDebuggerDisplay("ff_name");
            }
        }
        
        [AttributeLogicalName("ff_unionid")]
        public override Guid Id {
            get {
                return base.Id;
            }
            set {
                SetId("ff_unionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for entity instances</para>
        /// <para>Display Name: Kreds</para>
        /// </summary>
        [AttributeLogicalName("ff_unionid")]
        [DisplayName("Kreds")]
        public Guid? ff_unionId {
            get {
                return GetAttributeValue<Guid?>("ff_unionid");
            }
            set {
                SetId("ff_unionid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who created the record.</para>
        /// <para>Display Name: Created By</para>
        /// </summary>
        [AttributeLogicalName("createdby")]
        [DisplayName("Created By")]
        public EntityReference CreatedBy {
            get {
                return GetAttributeValue<EntityReference>("createdby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was created.</para>
        /// <para>Display Name: Created On</para>
        /// </summary>
        [AttributeLogicalName("createdon")]
        [DisplayName("Created On")]
        public DateTime? CreatedOn {
            get {
                return GetAttributeValue<DateTime?>("createdon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who created the record.</para>
        /// <para>Display Name: Created By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("createdonbehalfby")]
        [DisplayName("Created By (Delegate)")]
        public EntityReference CreatedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("createdonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Sequence number of the import that created this record.</para>
        /// <para>Display Name: Import Sequence Number</para>
        /// </summary>
        [AttributeLogicalName("importsequencenumber")]
        [DisplayName("Import Sequence Number")]
        [Range(-2147483648, 2147483647)]
        public int? ImportSequenceNumber {
            get {
                return GetAttributeValue<int?>("importsequencenumber");
            }
            set {
                SetAttributeValue("importsequencenumber", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the user who modified the record.</para>
        /// <para>Display Name: Modified By</para>
        /// </summary>
        [AttributeLogicalName("modifiedby")]
        [DisplayName("Modified By")]
        public EntityReference ModifiedBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedby");
            }
        }
        
        /// <summary>
        /// <para>Date and time when the record was modified.</para>
        /// <para>Display Name: Modified On</para>
        /// </summary>
        [AttributeLogicalName("modifiedon")]
        [DisplayName("Modified On")]
        public DateTime? ModifiedOn {
            get {
                return GetAttributeValue<DateTime?>("modifiedon");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier of the delegate user who modified the record.</para>
        /// <para>Display Name: Modified By (Delegate)</para>
        /// </summary>
        [AttributeLogicalName("modifiedonbehalfby")]
        [DisplayName("Modified By (Delegate)")]
        public EntityReference ModifiedOnBehalfBy {
            get {
                return GetAttributeValue<EntityReference>("modifiedonbehalfby");
            }
        }
        
        /// <summary>
        /// <para>Date and time that the record was migrated.</para>
        /// <para>Display Name: Record Created On</para>
        /// </summary>
        [AttributeLogicalName("overriddencreatedon")]
        [DisplayName("Record Created On")]
        public DateTime? OverriddenCreatedOn {
            get {
                return GetAttributeValue<DateTime?>("overriddencreatedon");
            }
            set {
                SetAttributeValue("overriddencreatedon", value);
            }
        }
        
        /// <summary>
        /// <para>Owner Id</para>
        /// <para>Display Name: Owner</para>
        /// </summary>
        [AttributeLogicalName("ownerid")]
        [DisplayName("Owner")]
        public EntityReference OwnerId {
            get {
                return GetAttributeValue<EntityReference>("ownerid");
            }
            set {
                SetAttributeValue("ownerid", value);
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the business unit that owns the record</para>
        /// <para>Display Name: Owning Business Unit</para>
        /// </summary>
        [AttributeLogicalName("owningbusinessunit")]
        [DisplayName("Owning Business Unit")]
        public EntityReference OwningBusinessUnit {
            get {
                return GetAttributeValue<EntityReference>("owningbusinessunit");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the team that owns the record.</para>
        /// <para>Display Name: Owning Team</para>
        /// </summary>
        [AttributeLogicalName("owningteam")]
        [DisplayName("Owning Team")]
        public EntityReference OwningTeam {
            get {
                return GetAttributeValue<EntityReference>("owningteam");
            }
        }
        
        /// <summary>
        /// <para>Unique identifier for the user that owns the record.</para>
        /// <para>Display Name: Owning User</para>
        /// </summary>
        [AttributeLogicalName("owninguser")]
        [DisplayName("Owning User")]
        public EntityReference OwningUser {
            get {
                return GetAttributeValue<EntityReference>("owninguser");
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(850)]
        public string PrimaryNameField {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>For internal use only.</para>
        /// <para>Display Name: Time Zone Rule Version Number</para>
        /// </summary>
        [AttributeLogicalName("timezoneruleversionnumber")]
        [DisplayName("Time Zone Rule Version Number")]
        [Range(-1, 2147483647)]
        public int? TimeZoneRuleVersionNumber {
            get {
                return GetAttributeValue<int?>("timezoneruleversionnumber");
            }
            set {
                SetAttributeValue("timezoneruleversionnumber", value);
            }
        }
        
        /// <summary>
        /// <para>Time zone code that was in use when the record was created.</para>
        /// <para>Display Name: UTC Conversion Time Zone Code</para>
        /// </summary>
        [AttributeLogicalName("utcconversiontimezonecode")]
        [DisplayName("UTC Conversion Time Zone Code")]
        [Range(-1, 2147483647)]
        public int? UTCConversionTimeZoneCode {
            get {
                return GetAttributeValue<int?>("utcconversiontimezonecode");
            }
            set {
                SetAttributeValue("utcconversiontimezonecode", value);
            }
        }
        
        /// <summary>
        /// <para>Version Number</para>
        /// <para>Display Name: Version Number</para>
        /// </summary>
        [AttributeLogicalName("versionnumber")]
        [DisplayName("Version Number")]
        public long? VersionNumber {
            get {
                return GetAttributeValue<long?>("versionnumber");
            }
        }
        
        /// <summary>
        /// <para>Afdeling som giver adgang til Kreds</para>
        /// <para>Display Name: Afdeling</para>
        /// </summary>
        [AttributeLogicalName("ff_businessunit")]
        [DisplayName("Afdeling")]
        public EntityReference ff_businessunit {
            get {
                return GetAttributeValue<EntityReference>("ff_businessunit");
            }
            set {
                SetAttributeValue("ff_businessunit", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Navn</para>
        /// </summary>
        [AttributeLogicalName("ff_name")]
        [DisplayName("Navn")]
        [MaxLength(850)]
        public string ff_name {
            get {
                return GetAttributeValue<string>("ff_name");
            }
            set {
                SetAttributeValue("ff_name", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Team</para>
        /// </summary>
        [AttributeLogicalName("ff_team")]
        [DisplayName("Team")]
        public EntityReference ff_team {
            get {
                return GetAttributeValue<EntityReference>("ff_team");
            }
            set {
                SetAttributeValue("ff_team", value);
            }
        }
        
        /// <summary>
        /// <para>Display Name: Kreds nøgle</para>
        /// </summary>
        [AttributeLogicalName("ff_unionkey")]
        [DisplayName("Kreds nøgle")]
        [MaxLength(100)]
        public string ff_unionkey {
            get {
                return GetAttributeValue<string>("ff_unionkey");
            }
            set {
                SetAttributeValue("ff_unionkey", value);
            }
        }
        
        /// <summary>
        /// <para>Status of the Kreds</para>
        /// <para>Display Name: Status</para>
        /// </summary>
        [AttributeLogicalName("statecode")]
        [DisplayName("Status")]
        public ff_unionState? statecode {
            get {
                return GetOptionSetValue<ff_unionState>("statecode");
            }
            set {
                SetOptionSetValue("statecode", value);
            }
        }
        
        /// <summary>
        /// <para>Reason for the status of the Kreds</para>
        /// <para>Display Name: Status Reason</para>
        /// </summary>
        [AttributeLogicalName("statuscode")]
        [DisplayName("Status Reason")]
        public ff_union_statuscode? statuscode {
            get {
                return GetOptionSetValue<ff_union_statuscode>("statuscode");
            }
            set {
                SetOptionSetValue("statuscode", value);
            }
        }
        
        [AttributeLogicalName("owningbusinessunit")]
        [RelationshipSchemaName("business_unit_ff_union")]
        public BusinessUnit business_unit_ff_union {
            get {
                return GetRelatedEntity<BusinessUnit>("business_unit_ff_union", null);
            }
            set {
                SetRelatedEntity("business_unit_ff_union", null, value);
            }
        }
        
        [AttributeLogicalName("ff_businessunit")]
        [RelationshipSchemaName("ff_union_businessunit_businessunit")]
        public BusinessUnit ff_union_businessunit_businessunit {
            get {
                return GetRelatedEntity<BusinessUnit>("ff_union_businessunit_businessunit", null);
            }
            set {
                SetRelatedEntity("ff_union_businessunit_businessunit", null, value);
            }
        }
        
        [AttributeLogicalName("ff_team")]
        [RelationshipSchemaName("ff_union_team_team")]
        public Team ff_union_team_team {
            get {
                return GetRelatedEntity<Team>("ff_union_team_team", null);
            }
            set {
                SetRelatedEntity("ff_union_team_team", null, value);
            }
        }
        
        [AttributeLogicalName("createdby")]
        [RelationshipSchemaName("lk_ff_union_createdby")]
        public SystemUser lk_ff_union_createdby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_union_createdby", null);
            }
            set {
                SetRelatedEntity("lk_ff_union_createdby", null, value);
            }
        }
        
        [AttributeLogicalName("createdonbehalfby")]
        [RelationshipSchemaName("lk_ff_union_createdonbehalfby")]
        public SystemUser lk_ff_union_createdonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_union_createdonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_union_createdonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedby")]
        [RelationshipSchemaName("lk_ff_union_modifiedby")]
        public SystemUser lk_ff_union_modifiedby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_union_modifiedby", null);
            }
            set {
                SetRelatedEntity("lk_ff_union_modifiedby", null, value);
            }
        }
        
        [AttributeLogicalName("modifiedonbehalfby")]
        [RelationshipSchemaName("lk_ff_union_modifiedonbehalfby")]
        public SystemUser lk_ff_union_modifiedonbehalfby {
            get {
                return GetRelatedEntity<SystemUser>("lk_ff_union_modifiedonbehalfby", null);
            }
            set {
                SetRelatedEntity("lk_ff_union_modifiedonbehalfby", null, value);
            }
        }
        
        [AttributeLogicalName("owningteam")]
        [RelationshipSchemaName("team_ff_union")]
        public Team team_ff_union {
            get {
                return GetRelatedEntity<Team>("team_ff_union", null);
            }
            set {
                SetRelatedEntity("team_ff_union", null, value);
            }
        }
        
        [AttributeLogicalName("owninguser")]
        [RelationshipSchemaName("user_ff_union")]
        public SystemUser user_ff_union {
            get {
                return GetRelatedEntity<SystemUser>("user_ff_union", null);
            }
            set {
                SetRelatedEntity("user_ff_union", null, value);
            }
        }
        
        public static ff_union Retrieve(IOrganizationService service, Guid id, params Expression<Func<ff_union,object>>[] attrs) {
            return service.Retrieve(id, attrs);
        }
        
        /// <summary>
        /// <para>Retrieves the record using the alternate key called 'unionkey'</para>
        /// </summary>
        public static ff_union Retrieve_ff_unionkey(IOrganizationService service, string ff_unionkey, params Expression<Func<ff_union,object>>[] attrs) {
            KeyAttributeCollection keys = new KeyAttributeCollection();
            keys.Add("ff_unionkey", ff_unionkey);
            return Retrieve_AltKey(service, keys, attrs);
        }
        
        /// <summary>
        /// <para>Set values for the alternate key called 'unionkey'</para>
        /// </summary>
        public void AltKey_ff_unionkey(string ff_unionkey) {
            KeyAttributes.Clear();
            KeyAttributes.Add("ff_unionkey", ff_unionkey);
        }
    }
    
    public partial class Xrm : ExtendedOrganizationServiceContext {
        
        public Xrm(IOrganizationService service) : 
                base(service) {
        }
        
        public IQueryable<Account> AccountSet {
            get {
                return CreateQuery<Account>();
            }
        }
        
        public IQueryable<AccountLeads> AccountLeadsSet {
            get {
                return CreateQuery<AccountLeads>();
            }
        }
        
        public IQueryable<ActivityParty> ActivityPartySet {
            get {
                return CreateQuery<ActivityParty>();
            }
        }
        
        public IQueryable<ActivityPointer> ActivityPointerSet {
            get {
                return CreateQuery<ActivityPointer>();
            }
        }
        
        public IQueryable<Annotation> AnnotationSet {
            get {
                return CreateQuery<Annotation>();
            }
        }
        
        public IQueryable<Appointment> AppointmentSet {
            get {
                return CreateQuery<Appointment>();
            }
        }
        
        public IQueryable<BusinessUnit> BusinessUnitSet {
            get {
                return CreateQuery<BusinessUnit>();
            }
        }
        
        public IQueryable<Contact> ContactSet {
            get {
                return CreateQuery<Contact>();
            }
        }
        
        public IQueryable<ContactLeads> ContactLeadsSet {
            get {
                return CreateQuery<ContactLeads>();
            }
        }
        
        public IQueryable<CustomerAddress> CustomerAddressSet {
            get {
                return CreateQuery<CustomerAddress>();
            }
        }
        
        public IQueryable<Email> EmailSet {
            get {
                return CreateQuery<Email>();
            }
        }
        
        public IQueryable<Entitlement> EntitlementSet {
            get {
                return CreateQuery<Entitlement>();
            }
        }
        
        public IQueryable<EntitlementContacts> EntitlementContactsSet {
            get {
                return CreateQuery<EntitlementContacts>();
            }
        }
        
        public IQueryable<Incident> IncidentSet {
            get {
                return CreateQuery<Incident>();
            }
        }
        
        public IQueryable<IncidentResolution> IncidentResolutionSet {
            get {
                return CreateQuery<IncidentResolution>();
            }
        }
        
        public IQueryable<Lead> LeadSet {
            get {
                return CreateQuery<Lead>();
            }
        }
        
        public IQueryable<Mailbox> MailboxSet {
            get {
                return CreateQuery<Mailbox>();
            }
        }
        
        public IQueryable<Opportunity> OpportunitySet {
            get {
                return CreateQuery<Opportunity>();
            }
        }
        
        public IQueryable<PhoneCall> PhoneCallSet {
            get {
                return CreateQuery<PhoneCall>();
            }
        }
        
        public IQueryable<PhoneToCaseProcess> PhoneToCaseProcessSet {
            get {
                return CreateQuery<PhoneToCaseProcess>();
            }
        }
        
        public IQueryable<Queue> QueueSet {
            get {
                return CreateQuery<Queue>();
            }
        }
        
        public IQueryable<QueueItem> QueueItemSet {
            get {
                return CreateQuery<QueueItem>();
            }
        }
        
        public IQueryable<QueueMembership> QueueMembershipSet {
            get {
                return CreateQuery<QueueMembership>();
            }
        }
        
        public IQueryable<SavedQuery> SavedQuerySet {
            get {
                return CreateQuery<SavedQuery>();
            }
        }
        
        public IQueryable<SystemUser> SystemUserSet {
            get {
                return CreateQuery<SystemUser>();
            }
        }
        
        public IQueryable<Task> TaskSet {
            get {
                return CreateQuery<Task>();
            }
        }
        
        public IQueryable<Team> TeamSet {
            get {
                return CreateQuery<Team>();
            }
        }
        
        public IQueryable<TeamMembership> TeamMembershipSet {
            get {
                return CreateQuery<TeamMembership>();
            }
        }
        
        public IQueryable<ff_activities> ff_activitiesSet {
            get {
                return CreateQuery<ff_activities>();
            }
        }
        
        public IQueryable<ff_awardgiftcard> ff_awardgiftcardSet {
            get {
                return CreateQuery<ff_awardgiftcard>();
            }
        }
        
        public IQueryable<ff_casecategory> ff_casecategorySet {
            get {
                return CreateQuery<ff_casecategory>();
            }
        }
        
        public IQueryable<ff_casecategory_ff_casetype> ff_casecategory_ff_casetypeSet {
            get {
                return CreateQuery<ff_casecategory_ff_casetype>();
            }
        }
        
        public IQueryable<ff_casenote> ff_casenoteSet {
            get {
                return CreateQuery<ff_casenote>();
            }
        }
        
        public IQueryable<ff_casetype> ff_casetypeSet {
            get {
                return CreateQuery<ff_casetype>();
            }
        }
        
        public IQueryable<ff_collectiveagreement> ff_collectiveagreementSet {
            get {
                return CreateQuery<ff_collectiveagreement>();
            }
        }
        
        public IQueryable<ff_committeemember> ff_committeememberSet {
            get {
                return CreateQuery<ff_committeemember>();
            }
        }
        
        public IQueryable<ff_configuration> ff_configurationSet {
            get {
                return CreateQuery<ff_configuration>();
            }
        }
        
        public IQueryable<ff_employment> ff_employmentSet {
            get {
                return CreateQuery<ff_employment>();
            }
        }
        
        public IQueryable<ff_eventattendee> ff_eventattendeeSet {
            get {
                return CreateQuery<ff_eventattendee>();
            }
        }
        
        public IQueryable<ff_giftcard> ff_giftcardSet {
            get {
                return CreateQuery<ff_giftcard>();
            }
        }
        
        public IQueryable<ff_incidentparty> ff_incidentpartySet {
            get {
                return CreateQuery<ff_incidentparty>();
            }
        }
        
        public IQueryable<ff_medlemsnote> ff_medlemsnoteSet {
            get {
                return CreateQuery<ff_medlemsnote>();
            }
        }
        
        public IQueryable<ff_membershipfee> ff_membershipfeeSet {
            get {
                return CreateQuery<ff_membershipfee>();
            }
        }
        
        public IQueryable<ff_positionoftrust> ff_positionoftrustSet {
            get {
                return CreateQuery<ff_positionoftrust>();
            }
        }
        
        public IQueryable<ff_positionoftrusttype> ff_positionoftrusttypeSet {
            get {
                return CreateQuery<ff_positionoftrusttype>();
            }
        }
        
        public IQueryable<ff_reportingofopportunity> ff_reportingofopportunitySet {
            get {
                return CreateQuery<ff_reportingofopportunity>();
            }
        }
        
        public IQueryable<ff_union> ff_unionSet {
            get {
                return CreateQuery<ff_union>();
            }
        }
    }
    
    [DataContract()]
    public enum AccountState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Account_AccountCategoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Preferred Customer", Index=0)]
        PreferredCustomer = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=1)]
        Standard = 2,
    }
    
    [DataContract()]
    public enum Account_AccountClassificationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_AccountRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Account_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Account_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_BusinessTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=0)]
        Competitor = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Consultant", Index=1)]
        Consultant = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=2)]
        Customer = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Investor", Index=3)]
        Investor = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=4)]
        Partner = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=5)]
        Influencer = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Press", Index=6)]
        Press = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Prospect", Index=7)]
        Prospect = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Reseller", Index=8)]
        Reseller = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Supplier", Index=9)]
        Supplier = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Vendor", Index=10)]
        Vendor = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=11)]
        Other = 12,
    }
    
    [DataContract()]
    public enum Account_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Accounting", Index=0)]
        Accounting = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Agriculture and Non-petrol Natural Resource Extraction", Index=1)]
        AgricultureandNonpetrolNaturalResourceExtraction = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Broadcasting Printing and Publishing", Index=2)]
        BroadcastingPrintingandPublishing = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Brokers", Index=3)]
        Brokers = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Building Supply Retail", Index=4)]
        BuildingSupplyRetail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Business Services", Index=5)]
        BusinessServices = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Consulting", Index=6)]
        Consulting = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Consumer Services", Index=7)]
        ConsumerServices = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Design, Direction and Creative Management", Index=8)]
        DesignDirectionandCreativeManagement = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Distributors, Dispatchers and Processors", Index=9)]
        DistributorsDispatchersandProcessors = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Doctor\'s Offices and Clinics", Index=10)]
        DoctorsOfficesandClinics = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Durable Manufacturing", Index=11)]
        DurableManufacturing = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Eating and Drinking Places", Index=12)]
        EatingandDrinkingPlaces = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Entertainment Retail", Index=13)]
        EntertainmentRetail = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Equipment Rental and Leasing", Index=14)]
        EquipmentRentalandLeasing = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Financial", Index=15)]
        Financial = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Food and Tobacco Processing", Index=16)]
        FoodandTobaccoProcessing = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Capital Intensive Processing", Index=17)]
        InboundCapitalIntensiveProcessing = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Inbound Repair and Services", Index=18)]
        InboundRepairandServices = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Insurance", Index=19)]
        Insurance = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Legal Services", Index=20)]
        LegalServices = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Non-Durable Merchandise Retail", Index=21)]
        NonDurableMerchandiseRetail = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Outbound Consumer Service", Index=22)]
        OutboundConsumerService = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Petrochemical Extraction and Distribution", Index=23)]
        PetrochemicalExtractionandDistribution = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Service Retail", Index=24)]
        ServiceRetail = 25,
        
        [EnumMember()]
        [OptionSetMetadata("SIG Affiliations", Index=25)]
        SIGAffiliations = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Social Services", Index=26)]
        SocialServices = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Special Outbound Trade Contractors", Index=27)]
        SpecialOutboundTradeContractors = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Specialty Realty", Index=28)]
        SpecialtyRealty = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Transportation", Index=29)]
        Transportation = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Utility Creation and Distribution", Index=30)]
        UtilityCreationandDistribution = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Vehicle Retail", Index=31)]
        VehicleRetail = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Wholesale", Index=32)]
        Wholesale = 33,
    }
    
    [DataContract()]
    public enum Account_OwnershipCode {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0)]
        Public = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1)]
        Private = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Subsidiary", Index=2)]
        Subsidiary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Account_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Account_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Account_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=3)]
        Fax = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Mail", Index=4)]
        Mail = 5,
    }
    
    [DataContract()]
    public enum Account_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Account_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum Account_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum ActivityParty_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ActivityParty_ParticipationTypeMask {
        
        [EnumMember()]
        [OptionSetMetadata("Sender", Index=0)]
        Sender = 1,
        
        [EnumMember()]
        [OptionSetMetadata("To Recipient", Index=1)]
        ToRecipient = 2,
        
        [EnumMember()]
        [OptionSetMetadata("CC Recipient", Index=2)]
        CCRecipient = 3,
        
        [EnumMember()]
        [OptionSetMetadata("BCC Recipient", Index=3)]
        BCCRecipient = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Required attendee", Index=4)]
        Requiredattendee = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Optional attendee", Index=5)]
        Optionalattendee = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Organizer", Index=6)]
        Organizer = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Regarding", Index=7)]
        Regarding = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=8)]
        Owner = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Resource", Index=9)]
        Resource = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Customer", Index=10)]
        Customer = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Chat Participant", Index=11)]
        ChatParticipant = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Related", Index=12)]
        Related = 13,
    }
    
    [DataContract()]
    public enum ActivityPointerState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum ActivityPointer_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ActivityPointer_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum ActivityPointer_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum Annotation_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=11)]
        Contact = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity", Index=21)]
        Opportunity = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Lead", Index=18)]
        Lead = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=7)]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Competitor", Index=10)]
        Competitor = 123,
        
        [EnumMember()]
        [OptionSetMetadata("Contract", Index=12)]
        Contract = 1010,
        
        [EnumMember()]
        [OptionSetMetadata("Contract Line", Index=13)]
        ContractLine = 1011,
        
        [EnumMember()]
        [OptionSetMetadata("Product", Index=26)]
        Product = 1024,
        
        [EnumMember()]
        [OptionSetMetadata("Quote", Index=27)]
        Quote = 1084,
        
        [EnumMember()]
        [OptionSetMetadata("Order", Index=23)]
        Order = 1088,
        
        [EnumMember()]
        [OptionSetMetadata("Invoice", Index=17)]
        Invoice = 1090,
        
        [EnumMember()]
        [OptionSetMetadata("Facility/Equipment", Index=15)]
        FacilityEquipment = 4000,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=30)]
        Service = 4001,
        
        [EnumMember()]
        [OptionSetMetadata("Calendar", Index=3)]
        Calendar = 4003,
        
        [EnumMember()]
        [OptionSetMetadata("Resource Specification", Index=29)]
        ResourceSpecification = 4006,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=1)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=14)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=16)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=8)]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=19)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=22)]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=24)]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Phone Call", Index=25)]
        PhoneCall = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=28)]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=32)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=31)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Commitment", Index=9)]
        Commitment = 4215,
        
        [EnumMember()]
        [OptionSetMetadata("Marketing List", Index=20)]
        MarketingList = 4300,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign", Index=4)]
        Campaign = 4400,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=6)]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=5)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Import", Index=2)]
        BulkImport = 4407,
        
        [EnumMember()]
        [OptionSetMetadata("Routing Rule", Index=33)]
        RoutingRule = 8181,
        
        [EnumMember()]
        [OptionSetMetadata("Routing Rule Item", Index=34)]
        RoutingRuleItem = 8199,
    }
    
    [DataContract()]
    public enum AppointmentState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum Appointment_AttachmentErrors {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("The appointment was saved as a Microsoft Dynamics 365 appointment record, but not" +
            " all the attachments could be saved with it. An attachment cannot be saved if it" +
            " is blocked or if its file type is invalid.", Index=1)]
        TheappointmentwassavedasaMicrosoftDynamics365appointmentrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
    }
    
    [DataContract()]
    public enum Appointment_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum Appointment_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum Appointment_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Free", Index=0, Color="#3b79b7")]
        Free = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tentative", Index=1, Color="#db3923")]
        Tentative = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=2, Color="#358717")]
        Completed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=3, Color="#666666")]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Busy", Index=4, Color="#ea0600")]
        Busy = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Out of Office", Index=5, Color="#6a1e7a")]
        OutofOffice = 6,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum BusinessUnit_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum ContactState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Contact_AccountRoleCode {
        
        [EnumMember()]
        [OptionSetMetadata("Decision Maker", Index=0)]
        DecisionMaker = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee", Index=1)]
        Employee = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=2)]
        Influencer = 3,
    }
    
    [DataContract()]
    public enum Contact_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum Contact_Address1_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum Contact_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum Contact_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_Address3_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerSizeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_CustomerTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_EducationCode {
        
        [EnumMember()]
        [OptionSetMetadata("Standardværdi", Index=0)]
        Standardværdi = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Folkeskole (7-10 klasse)", Index=1)]
        Folkeskole710klasse = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Gymnasial uddannelse (fx student, HTX, HHX)", Index=2)]
        GymnasialuddannelsefxstudentHTXHHX = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Erhvervsuddannelse (fx finansudd., elev, lærling, ass.)", Index=3)]
        Erhvervsuddannelsefxfinansuddelevlærlingass = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Kort videreg. udd. (fx akademiudd, HD 1.del, finansøko)", Index=4)]
        KortvidereguddfxakademiuddHD1delfinansøko = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Bachelor-og diplomudd. (fx HA, HD 2.del, it-diplom)", Index=5)]
        BachelorogdiplomuddfxHAHD2delitdiplom = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Lang videregående udd. (fx kandidatudd. fra universitet)", Index=6)]
        Langvideregåendeuddfxkandidatuddfrauniversitet = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Ph.d", Index=7)]
        Phd = 8,
    }
    
    [DataContract()]
    public enum Contact_FamilyStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Single", Index=0)]
        Single = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Married", Index=1)]
        Married = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Divorced", Index=2)]
        Divorced = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Widowed", Index=3)]
        Widowed = 4,
    }
    
    [DataContract()]
    public enum Contact_GenderCode {
        
        [EnumMember()]
        [OptionSetMetadata("Male", Index=0)]
        Male = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Female", Index=1)]
        Female = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Andet", Index=2)]
        Andet = 3,
    }
    
    [DataContract()]
    public enum Contact_HasChildrenCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_PaymentTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("Net 30", Index=0)]
        Net30 = 1,
        
        [EnumMember()]
        [OptionSetMetadata("2% 10, Net 30", Index=1)]
        _210Net30 = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Net 45", Index=2)]
        Net45 = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Net 60", Index=3)]
        Net60 = 4,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentDayCode {
        
        [EnumMember()]
        [OptionSetMetadata("Sunday", Index=0)]
        Sunday = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Monday", Index=1)]
        Monday = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tuesday", Index=2)]
        Tuesday = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Wednesday", Index=3)]
        Wednesday = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Thursday", Index=4)]
        Thursday = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Friday", Index=5)]
        Friday = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Saturday", Index=6)]
        Saturday = 6,
    }
    
    [DataContract()]
    public enum Contact_PreferredAppointmentTimeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Morning", Index=0)]
        Morning = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Afternoon", Index=1)]
        Afternoon = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Evening", Index=2)]
        Evening = 3,
    }
    
    [DataContract()]
    public enum Contact_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Bulk Emails", Index=3)]
        BulkEmails = 4,
        
        [EnumMember()]
        [OptionSetMetadata("e-Boks", Index=4)]
        eBoks = 6,
    }
    
    [DataContract()]
    public enum Contact_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Anonymize", Index=2)]
        Anonymize = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Anonymized", Index=3)]
        Anonymized = 122400002,
        
        [EnumMember()]
        [OptionSetMetadata("Medlem", Index=4)]
        Medlem = 122400003,
        
        [EnumMember()]
        [OptionSetMetadata("Potentielt medlem", Index=5)]
        Potentieltmedlem = 122400004,
        
        [EnumMember()]
        [OptionSetMetadata("Vundet Uafsluttet", Index=6)]
        VundetUafsluttet = 122400005,
        
        [EnumMember()]
        [OptionSetMetadata("Udmeldt medlem", Index=7, Color="#ff0000")]
        Udmeldtmedlem = 122400006,
        
        [EnumMember()]
        [OptionSetMetadata("Dublet Data", Index=8)]
        DubletData = 122400007,
    }
    
    [DataContract()]
    public enum Contact_TerritoryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Contact_ff_formofpayment {
        
        [EnumMember()]
        [OptionSetMetadata("Løntræk", Index=0)]
        Løntræk = 1,
        
        [EnumMember()]
        [OptionSetMetadata("MobilePay Subscription", Index=1)]
        MobilePaySubscription = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Betalingsservice", Index=2)]
        Betalingsservice = 3,
    }
    
    [DataContract()]
    public enum Contact_ff_provisioningstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=0)]
        Completed = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=1)]
        Failed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("InProgress", Index=2)]
        InProgress = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=3)]
        Cancelled = 3,
    }
    
    [DataContract()]
    public enum Contact_ff_quotagroup {
        
        [EnumMember()]
        [OptionSetMetadata("Uoplyst", Index=16)]
        Uoplyst = 0,
        
        [EnumMember()]
        [OptionSetMetadata("DimFri", Index=0)]
        DimFri = 1,
        
        [EnumMember()]
        [OptionSetMetadata("KonDel", Index=1)]
        KonDel = 2,
        
        [EnumMember()]
        [OptionSetMetadata("KonDiv", Index=2)]
        KonDiv = 3,
        
        [EnumMember()]
        [OptionSetMetadata("KonElev", Index=3)]
        KonElev = 4,
        
        [EnumMember()]
        [OptionSetMetadata("KonFuld", Index=4)]
        KonFuld = 5,
        
        [EnumMember()]
        [OptionSetMetadata("KonGratis", Index=5)]
        KonGratis = 6,
        
        [EnumMember()]
        [OptionSetMetadata("KonLedDel", Index=6)]
        KonLedDel = 7,
        
        [EnumMember()]
        [OptionSetMetadata("KonLedig", Index=7)]
        KonLedig = 8,
        
        [EnumMember()]
        [OptionSetMetadata("KonStud", Index=8)]
        KonStud = 9,
        
        [EnumMember()]
        [OptionSetMetadata("KonStudArb", Index=9)]
        KonStudArb = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Konpens", Index=10)]
        Konpens = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Konprøve", Index=11)]
        Konprøve = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Konøko", Index=12)]
        Konøko = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Konhvile", Index=13)]
        Konhvile = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Konpassiv", Index=14)]
        Konpassiv = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Eksterne", Index=15)]
        Eksterne = 16,
    }
    
    [DataContract()]
    public enum Contact_ff_unemploymentinsurancestatus {
        
        [EnumMember()]
        [OptionSetMetadata("Ja, FTFa", Index=0)]
        JaFTFa = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ja, en anden A-kasse", Index=1)]
        JaenandenAkasse = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Nej", Index=2)]
        Nej = 3,
    }
    
    [DataContract()]
    public enum Contact_ff_unionselection {
        
        [EnumMember()]
        [OptionSetMetadata("ASE", Index=0)]
        ASE = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DJØF - Danmarks Jurist- og Økonomforbund", Index=1)]
        DJØFDanmarksJuristogØkonomforbund = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk EL-Forbund (DEF)", Index=2)]
        DanskELForbundDEF = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk Journalistforbund (DJ)", Index=3)]
        DanskJournalistforbundDJ = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk Magisterforening", Index=4)]
        DanskMagisterforening = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk Metal", Index=5)]
        DanskMetal = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Dansk Sygeplejeråd (DSR)", Index=6)]
        DanskSygeplejerådDSR = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Det Faglige Hus", Index=7)]
        DetFagligeHus = 8,
        
        [EnumMember()]
        [OptionSetMetadata("FOA - Fag og Arbejde", Index=8)]
        FOAFagogArbejde = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Forsikringsforbundet", Index=9)]
        Forsikringsforbundet = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Frie Funktionærer", Index=10)]
        FrieFunktionærer = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Kommunikation og Sprog", Index=11)]
        KommunikationogSprog = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Kristelig Fagbevægelse (KRIFA)", Index=12)]
        KristeligFagbevægelseKRIFA = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Lederne", Index=13)]
        Lederne = 14,
        
        [EnumMember()]
        [OptionSetMetadata("PROSA - IT professionelle", Index=14)]
        PROSAITprofessionelle = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Teknisk Landsforbund", Index=15)]
        TekniskLandsforbund = 16,
    }
    
    [DataContract()]
    public enum Contact_ff_whichunemploymentfund {
        
        [EnumMember()]
        [OptionSetMetadata("Akademikernes A-kasse", Index=0)]
        AkademikernesAkasse = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Det faglige hus - A-kasse", Index=1)]
        DetfagligehusAkasse = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Din Faglige A-kasse", Index=2)]
        DinFagligeAkasse = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Din Sundhedsfaglige A-kasse", Index=3)]
        DinSundhedsfagligeAkasse = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Funktionærernes og tjenestemændenes a-kasse", Index=4)]
        Funktionærernesogtjenestemændenesakasse = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Fødevareforbundet NNFs A-kasse", Index=5)]
        FødevareforbundetNNFsAkasse = 6,
        
        [EnumMember()]
        [OptionSetMetadata("HK/Danmarks A-kasse", Index=6)]
        HKDanmarksAkasse = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Ledernes A-kasse", Index=7)]
        LedernesAkasse = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Metalarbejdernes A-kasse", Index=8)]
        MetalarbejdernesAkasse = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Socialpædagogernes A-kasse", Index=9)]
        SocialpædagogernesAkasse = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Udbetaling Danmark/Fleksydelse", Index=10)]
        UdbetalingDanmarkFleksydelse = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Udenlandsk A-kasse", Index=11)]
        UdenlandskAkasse = 12,
    }
    
    [DataContract()]
    public enum Contact_ff_workarea {
        
        [EnumMember()]
        [OptionSetMetadata("Assurandør", Index=0)]
        Assurandør = 1,
        
        [EnumMember()]
        [OptionSetMetadata("IT og sikkerhed", Index=1)]
        ITogsikkerhed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Interne servicefunktioner og administration", Index=2)]
        Interneservicefunktionerogadministration = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Rådgivning og kundekontakt", Index=3)]
        Rådgivningogkundekontakt = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Stabs-og specialistfunktioner samt økonomi/regnskab", Index=4)]
        Stabsogspecialistfunktionersamtøkonomiregnskab = 5,
    }
    
    [DataContract()]
    public enum Contact_ff_worksituation {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I arbejde", Index=1)]
        Iarbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Dimittend", Index=3)]
        Dimittend = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Pensionist", Index=4)]
        Pensionist = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Øvrige", Index=5)]
        Øvrige = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Uoplyst", Index=6)]
        Uoplyst = 7,
    }
    
    [DataContract()]
    public enum Contact_ff_worksitutation {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I arbejde", Index=1)]
        Iarbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
    }
    
    [DataContract()]
    public enum Contact_msdyn_decisioninfluencetag {
        
        [EnumMember()]
        [OptionSetMetadata("Decision maker", Index=0, Color="#32C100")]
        Decisionmaker = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Influencer", Index=1, Color="#FFD74B")]
        Influencer = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Blocker", Index=2, Color="#FF0000")]
        Blocker = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=3, Color="#E1DFDD")]
        Unknown = 3,
    }
    
    [DataContract()]
    public enum Contact_msdyn_orgchangestatus {
        
        [EnumMember()]
        [OptionSetMetadata("No Feedback", Index=0, Color="#0000ff")]
        NoFeedback = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Not at Company", Index=1, Color="#0000ff")]
        NotatCompany = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ignore", Index=2, Color="#0000ff")]
        Ignore = 2,
    }
    
    [DataContract()]
    public enum CustomerAddress_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bill To", Index=0)]
        BillTo = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ship To", Index=1)]
        ShipTo = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Primary", Index=2)]
        Primary = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=3)]
        Other = 4,
    }
    
    [DataContract()]
    public enum CustomerAddress_FreightTermsCode {
        
        [EnumMember()]
        [OptionSetMetadata("FOB", Index=0)]
        FOB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("No Charge", Index=1)]
        NoCharge = 2,
    }
    
    [DataContract()]
    public enum CustomerAddress_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Account", Index=0)]
        Account = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Contact", Index=1)]
        Contact = 2,
    }
    
    [DataContract()]
    public enum CustomerAddress_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Airborne", Index=0)]
        Airborne = 1,
        
        [EnumMember()]
        [OptionSetMetadata("DHL", Index=1)]
        DHL = 2,
        
        [EnumMember()]
        [OptionSetMetadata("FedEx", Index=2)]
        FedEx = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UPS", Index=3)]
        UPS = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Postal Mail", Index=4)]
        PostalMail = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Full Load", Index=5)]
        FullLoad = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Will Call", Index=6)]
        WillCall = 7,
    }
    
    [DataContract()]
    public enum EmailState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Email_CorrelationMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Skipped", Index=1)]
        Skipped = 1,
        
        [EnumMember()]
        [OptionSetMetadata("XHeader", Index=2)]
        XHeader = 2,
        
        [EnumMember()]
        [OptionSetMetadata("InReplyTo", Index=3)]
        InReplyTo = 3,
        
        [EnumMember()]
        [OptionSetMetadata("TrackingToken", Index=4)]
        TrackingToken = 4,
        
        [EnumMember()]
        [OptionSetMetadata("ConversationIndex", Index=5)]
        ConversationIndex = 5,
        
        [EnumMember()]
        [OptionSetMetadata("SmartMatching", Index=6)]
        SmartMatching = 6,
        
        [EnumMember()]
        [OptionSetMetadata("CustomCorrelation", Index=7)]
        CustomCorrelation = 7,
    }
    
    [DataContract()]
    public enum Email_EmailReminderStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotSet", Index=0)]
        NotSet = 0,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderSet", Index=1)]
        ReminderSet = 1,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderExpired", Index=2)]
        ReminderExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("ReminderInvalid", Index=3)]
        ReminderInvalid = 3,
    }
    
    [DataContract()]
    public enum Email_EmailReminderType {
        
        [EnumMember()]
        [OptionSetMetadata("If I do not receive a reply by", Index=0)]
        IfIdonotreceiveareplyby = 0,
        
        [EnumMember()]
        [OptionSetMetadata("If the email is not opened by", Index=1)]
        Iftheemailisnotopenedby = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Remind me anyways at", Index=2)]
        Remindmeanywaysat = 2,
    }
    
    [DataContract()]
    public enum Email_Notifications {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("The message was saved as a Microsoft Dynamics 365 email record, but not all the a" +
            "ttachments could be saved with it. An attachment cannot be saved if it is blocke" +
            "d or if its file type is invalid.", Index=1)]
        ThemessagewassavedasaMicrosoftDynamics365emailrecordbutnotalltheattachmentscouldbesavedwithitAnattachmentcannotbesavedifitisblockedorifitsfiletypeisinvalid = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Truncated body.", Index=2)]
        Truncatedbody = 2,
    }
    
    [DataContract()]
    public enum Email_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum Email_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Kladde", Index=0, Color="#3b79b7")]
        Kladde = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Fuldført", Index=1, Color="#358717")]
        Fuldført = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Sendt", Index=2, Color="#358717")]
        Sendt = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Modtaget", Index=3, Color="#358717")]
        Modtaget = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Annulleret", Index=4, Color="#666666")]
        Annulleret = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Afventede afsendelse", Index=5, Color="#bf991f")]
        Afventedeafsendelse = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Sender", Index=6, Color="#bf991f")]
        Sender = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Mislykkedes", Index=7, Color="#ea0600")]
        Mislykkedes = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Modtaget uden medlem", Index=8)]
        Modtagetudenmedlem = 122400002,
    }
    
    [DataContract()]
    public enum Email_msdyn_autofill_type {
        
        [EnumMember()]
        [OptionSetMetadata("Manual", Index=0)]
        Manual = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Semi Autonomous", Index=1)]
        SemiAutonomous = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Fully Autonomous", Index=2)]
        FullyAutonomous = 2,
    }
    
    [DataContract()]
    public enum Email_msdyn_sentiment {
        
        [EnumMember()]
        [OptionSetMetadata("N/A", Index=0)]
        NA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=1)]
        Failure = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Very negative", Index=2)]
        Verynegative = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Negative", Index=3)]
        Negative = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Slightly negative", Index=4)]
        Slightlynegative = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Neutral", Index=5)]
        Neutral = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Slightly positive", Index=6)]
        Slightlypositive = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Positive", Index=7)]
        Positive = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Very positive", Index=8)]
        Verypositive = 13,
    }
    
    [DataContract()]
    public enum Email_msdyn_sentimentreason {
        
        [EnumMember()]
        [OptionSetMetadata("Transient", Index=0)]
        Transient = 0,
        
        [EnumMember()]
        [OptionSetMetadata("NonTransient", Index=1)]
        NonTransient = 1,
    }
    
    [DataContract()]
    public enum EntitlementState {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=2)]
        Cancelled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=3)]
        Expired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting", Index=4)]
        Waiting = 4,
    }
    
    [DataContract()]
    public enum Entitlement_AllocationTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Number of cases", Index=0, Description="Numberofcases")]
        Numberofcases = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Number of hours", Index=1, Description="Numberofhours")]
        Numberofhours = 1,
    }
    
    [DataContract()]
    public enum Entitlement_DecreaseRemainingOn {
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=0)]
        CaseResolution = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Case Creation", Index=1)]
        CaseCreation = 1,
    }
    
    [DataContract()]
    public enum Entitlement_KbAccessLevel {
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=0, Description="Standard")]
        Standard = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Premium", Index=1, Description="Premium")]
        Premium = 1,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Description="None")]
        None = 2,
    }
    
    [DataContract()]
    public enum Entitlement_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Draft", Index=0)]
        Draft = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=2)]
        Cancelled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Expired", Index=3)]
        Expired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting", Index=4)]
        Waiting = 1200,
    }
    
    [DataContract()]
    public enum IncidentState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0, Color="#D91E18")]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Resolved", Index=1, Color="#358717")]
        Resolved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Cancelled", Index=2, Color="#666666")]
        Cancelled = 2,
    }
    
    [DataContract()]
    public enum Incident_CaseTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Question", Index=0, Color="#FF8C00")]
        Question = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Problem", Index=1, Color="#E71022")]
        Problem = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Request", Index=2, Color="#0072C6")]
        Request = 3,
    }
    
    [DataContract()]
    public enum Incident_ContractServiceLevelCode {
        
        [EnumMember()]
        [OptionSetMetadata("Gold", Index=0)]
        Gold = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Silver", Index=1)]
        Silver = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Bronze", Index=2)]
        Bronze = 3,
    }
    
    [DataContract()]
    public enum Incident_CustomerSatisfactionCode {
        
        [EnumMember()]
        [OptionSetMetadata("Very Dissatisfied", Index=4)]
        VeryDissatisfied = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Dissatisfied", Index=3)]
        Dissatisfied = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Neutral", Index=2)]
        Neutral = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Satisfied", Index=1)]
        Satisfied = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Very Satisfied", Index=0)]
        VerySatisfied = 5,
    }
    
    [DataContract()]
    public enum Incident_FirstResponseSLAStatus {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Nearing Noncompliance", Index=1)]
        NearingNoncompliance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=2)]
        Succeeded = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Noncompliant", Index=3)]
        Noncompliant = 4,
    }
    
    [DataContract()]
    public enum Incident_IncidentStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Incident_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=0)]
        High = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=2)]
        Low = 3,
    }
    
    [DataContract()]
    public enum Incident_ResolveBySLAStatus {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=0)]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Nearing Noncompliance", Index=1)]
        NearingNoncompliance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=2)]
        Succeeded = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Noncompliant", Index=3)]
        Noncompliant = 4,
    }
    
    [DataContract()]
    public enum Incident_SeverityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Incident_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Annulleret", Index=1, Color="#ffffff")]
        Annulleret = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Flettet", Index=2, Color="#ffffff")]
        Flettet = 2000,
        
        [EnumMember()]
        [OptionSetMetadata("Oprettet", Index=0, Color="#ffffff")]
        Oprettet = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Sendt til sletning", Index=3, Color="#ffffff")]
        Sendttilsletning = 122400003,
        
        [EnumMember()]
        [OptionSetMetadata("Lokal forhandling inden for Finansforbundets overenskomster", Index=4)]
        LokalforhandlingindenforFinansforbundetsoverenskomster = 122400004,
        
        [EnumMember()]
        [OptionSetMetadata("Organisationsmøde", Index=5)]
        Organisationsmøde = 122400005,
        
        [EnumMember()]
        [OptionSetMetadata("Faglig voldgift", Index=6)]
        Fagligvoldgift = 122400006,
        
        [EnumMember()]
        [OptionSetMetadata("Retssag", Index=7)]
        Retssag = 122400007,
        
        [EnumMember()]
        [OptionSetMetadata("Forhandling uden for Finansforbundets overenskomster", Index=8)]
        ForhandlingudenforFinansforbundetsoverenskomster = 122400008,
        
        [EnumMember()]
        [OptionSetMetadata("Løst ved  påkrav", Index=9)]
        Løstvedpåkrav = 122400009,
        
        [EnumMember()]
        [OptionSetMetadata("Løst ved rådgivning", Index=10)]
        Løstvedrådgivning = 122400010,
        
        [EnumMember()]
        [OptionSetMetadata("I gang", Index=11)]
        Igang = 122400011,
        
        [EnumMember()]
        [OptionSetMetadata("Afventer oplysninger", Index=12)]
        Afventeroplysninger = 122400012,
        
        [EnumMember()]
        [OptionSetMetadata("Ny aktivitet", Index=13)]
        Nyaktivitet = 122400013,
        
        [EnumMember()]
        [OptionSetMetadata("Afsluttet ved afgørelse", Index=14)]
        Afsluttetvedafgørelse = 122400014,
    }
    
    [DataContract()]
    public enum Incident_msdyn_casesentiment {
        
        [EnumMember()]
        [OptionSetMetadata("N/A", Index=0)]
        NA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Very negative", Index=1)]
        Verynegative = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Negative", Index=2)]
        Negative = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Slightly negative", Index=3)]
        Slightlynegative = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Neutral", Index=4)]
        Neutral = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Slightly positive", Index=5)]
        Slightlypositive = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Positive", Index=6)]
        Positive = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Very positive", Index=7)]
        Verypositive = 13,
    }
    
    [DataContract()]
    public enum IncidentResolutionState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum IncidentResolution_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum IncidentResolution_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum IncidentResolution_ResolutionTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Problem Solved", Index=0)]
        ProblemSolved = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Information Provided", Index=1)]
        InformationProvided = 1000,
    }
    
    [DataContract()]
    public enum IncidentResolution_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Closed", Index=1)]
        Closed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 3,
    }
    
    [DataContract()]
    public enum LeadState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Qualified", Index=1)]
        Qualified = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Disqualified", Index=2)]
        Disqualified = 2,
    }
    
    [DataContract()]
    public enum Lead_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_IndustryCode {
        
        [EnumMember()]
        [OptionSetMetadata("Bank/realkredit", Index=0)]
        Bankrealkredit = 1,
        
        [EnumMember()]
        [OptionSetMetadata("IT/Fintech", Index=1)]
        ITFintech = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Pension/forsikring", Index=2)]
        Pensionforsikring = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Øvrig Finans", Index=3)]
        ØvrigFinans = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Søger job i finans", Index=4)]
        Søgerjobifinans = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Økonomiansat udenfor finans", Index=5)]
        Økonomiansatudenforfinans = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen tilknytning til finans", Index=6)]
        Ingentilknytningtilfinans = 7,
    }
    
    [DataContract()]
    public enum Lead_LeadQualityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Hot", Index=0)]
        Hot = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Warm", Index=1)]
        Warm = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Cold", Index=2)]
        Cold = 3,
    }
    
    [DataContract()]
    public enum Lead_LeadSourceCode {
        
        [EnumMember()]
        [OptionSetMetadata("Advertisement", Index=0)]
        Advertisement = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Employee Referral", Index=1)]
        EmployeeReferral = 2,
        
        [EnumMember()]
        [OptionSetMetadata("External Referral", Index=2)]
        ExternalReferral = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Partner", Index=3)]
        Partner = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Public Relations", Index=4)]
        PublicRelations = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Seminar", Index=5)]
        Seminar = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Trade Show", Index=6)]
        TradeShow = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=7)]
        Web = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Word of Mouth", Index=8)]
        WordofMouth = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=9)]
        Other = 10,
    }
    
    [DataContract()]
    public enum Lead_PreferredContactMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Any", Index=0)]
        Any = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=1)]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=2)]
        Phone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("e-Boks", Index=3)]
        eBoks = 6,
    }
    
    [DataContract()]
    public enum Lead_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_SalesStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Lead_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("New", Index=3)]
        New = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Forsøgt kontaktet", Index=5)]
        Forsøgtkontaktet = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Qualified", Index=4)]
        Qualified = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Tabt", Index=2)]
        Tabt = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Kan ikke kontaktes", Index=6)]
        Kanikkekontaktes = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Ikke længere interesseret", Index=7)]
        Ikkelængereinteresseret = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Ugyldig data", Index=1)]
        Ugyldigdata = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Dialog", Index=8)]
        Dialog = 122400003,
        
        [EnumMember()]
        [OptionSetMetadata("Allerede medlem", Index=9)]
        Alleredemedlem = 122400005,
        
        [EnumMember()]
        [OptionSetMetadata("Annulleret", Index=0)]
        Annulleret = 122400006,
        
        [EnumMember()]
        [OptionSetMetadata("Har åben Salgsmulighed", Index=10)]
        HaråbenSalgsmulighed = 122400007,
        
        [EnumMember()]
        [OptionSetMetadata("Fagforening nej tak - kontraktansat", Index=11)]
        Fagforeningnejtakkontraktansat = 122400008,
    }
    
    [DataContract()]
    public enum Lead_msdyn_salesassignmentresult {
        
        [EnumMember()]
        [OptionSetMetadata("Succeeded", Index=0, Color="#0000ff")]
        Succeeded = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Failed", Index=1, Color="#000fff")]
        Failed = 1,
    }
    
    [DataContract()]
    public enum MailboxState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Mailbox_ACSOutgoingEmailStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_ACTDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=0)]
        MicrosoftDynamics365forOutlook = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=1)]
        ServerSideSynchronization = 1,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2)]
        None = 2,
    }
    
    [DataContract()]
    public enum Mailbox_ACTStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum Mailbox_ExchangeContactsImportStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotImported", Index=0)]
        NotImported = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Imported", Index=1)]
        Imported = 1,
        
        [EnumMember()]
        [OptionSetMetadata("ImportFailed", Index=2)]
        ImportFailed = 2,
    }
    
    [DataContract()]
    public enum Mailbox_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=2)]
        ServerSideSynchronization = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum Mailbox_IncomingEmailStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_MailboxStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_OfficeAppsDeploymentStatus {
        
        [EnumMember()]
        [OptionSetMetadata("NotInstalled", Index=0)]
        NotInstalled = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Installed", Index=1)]
        Installed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("InstallFailed", Index=2)]
        InstallFailed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("UninstallFailed", Index=3)]
        UninstallFailed = 3,
        
        [EnumMember()]
        [OptionSetMetadata("UpgradeRequired", Index=4)]
        UpgradeRequired = 4,
    }
    
    [DataContract()]
    public enum Mailbox_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization", Index=2)]
        ServerSideSynchronization = 2,
    }
    
    [DataContract()]
    public enum Mailbox_OutgoingEmailStatus {
        
        [EnumMember()]
        [OptionSetMetadata("Not Run", Index=0)]
        NotRun = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Success", Index=1)]
        Success = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Failure", Index=2)]
        Failure = 2,
    }
    
    [DataContract()]
    public enum Mailbox_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum OpportunityState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=1)]
        Won = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=2)]
        Lost = 2,
    }
    
    [DataContract()]
    public enum Opportunity_OpportunityRatingCode {
        
        [EnumMember()]
        [OptionSetMetadata("Hot", Index=0)]
        Hot = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Warm", Index=1)]
        Warm = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Cold", Index=2)]
        Cold = 3,
    }
    
    [DataContract()]
    public enum Opportunity_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Opportunity_SalesStageCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Opportunity_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=2, Color="#0000ff")]
        InProgress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("On Hold", Index=3, Color="#0000ff")]
        OnHold = 2,
        
        [EnumMember()]
        [OptionSetMetadata("God pris", Index=0, Color="#0000ff")]
        Godpris = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=6, Color="#0000ff")]
        Canceled = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Forkert nummer", Index=10, Color="#0000ff")]
        Forkertnummer = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Dublet Data", Index=7, Color="#0000ff")]
        DubletData = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Ikke berettiget", Index=11, Color="#0000ff")]
        Ikkeberettiget = 122400002,
        
        [EnumMember()]
        [OptionSetMetadata("Er hos konkurrent", Index=14, Color="#0000ff")]
        Erhoskonkurrent = 122400003,
        
        [EnumMember()]
        [OptionSetMetadata("Genhvervning", Index=1, Color="#0000ff")]
        Genhvervning = 122400004,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen kontakt", Index=12, Color="#0000ff")]
        Ingenkontakt = 122400005,
        
        [EnumMember()]
        [OptionSetMetadata("Kontingentet er for dyrt", Index=13, Color="#0000ff")]
        Kontingenteterfordyrt = 122400006,
        
        [EnumMember()]
        [OptionSetMetadata("Lønsikring er for dyr", Index=9, Color="#0000ff")]
        Lønsikringerfordyr = 122400007,
        
        [EnumMember()]
        [OptionSetMetadata("Fagforening nej tak", Index=8, Color="#0000ff")]
        Fagforeningnejtak = 122400008,
        
        [EnumMember()]
        [OptionSetMetadata("Allerede medlem", Index=5, Color="#0000ff")]
        Alleredemedlem = 122400009,
        
        [EnumMember()]
        [OptionSetMetadata("Overenskomst", Index=4, Color="#0000ff")]
        Overenskomst = 122400010,
        
        [EnumMember()]
        [OptionSetMetadata("Medlemsfordele", Index=15, Color="#0008ff")]
        Medlemsfordele = 122400011,
        
        [EnumMember()]
        [OptionSetMetadata("Andet hvor prisen er for dyr", Index=16)]
        Andethvorprisenerfordyr = 122400012,
        
        [EnumMember()]
        [OptionSetMetadata("Medlemsfordele ikke relevante", Index=17)]
        Medlemsfordeleikkerelevante = 122400013,
        
        [EnumMember()]
        [OptionSetMetadata("Vundet Uafsluttet", Index=18)]
        VundetUafsluttet = 122400014,
        
        [EnumMember()]
        [OptionSetMetadata("Ny aktivitet", Index=19)]
        Nyaktivitet = 122400015,
        
        [EnumMember()]
        [OptionSetMetadata("Pensionist", Index=20)]
        Pensionist = 122400016,
        
        [EnumMember()]
        [OptionSetMetadata("Fagforening - nej tak kontraktansat", Index=21)]
        Fagforeningnejtakkontraktansat = 122400017,
    }
    
    [DataContract()]
    public enum Opportunity_TimeLine {
        
        [EnumMember()]
        [OptionSetMetadata("Immediate", Index=0)]
        Immediate = 0,
        
        [EnumMember()]
        [OptionSetMetadata("This Quarter", Index=1)]
        ThisQuarter = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Next Quarter", Index=2)]
        NextQuarter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("This Year", Index=3)]
        ThisYear = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Not known", Index=4)]
        Notknown = 4,
    }
    
    [DataContract()]
    public enum Opportunity_ff_enrollmenttype {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I arbejde", Index=1)]
        Iarbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
    }
    
    [DataContract()]
    public enum Opportunity_ff_membershiptype {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I arbejde", Index=1)]
        Iarbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
    }
    
    [DataContract()]
    public enum Opportunity_msdyn_forecastcategory {
        
        [EnumMember()]
        [OptionSetMetadata("Pipeline", Index=0, Color="#0000ff")]
        Pipeline = 100000001,
        
        [EnumMember()]
        [OptionSetMetadata("Best case", Index=1, Color="#0000ff")]
        Bestcase = 100000002,
        
        [EnumMember()]
        [OptionSetMetadata("Committed", Index=2, Color="#0000ff")]
        Committed = 100000003,
        
        [EnumMember()]
        [OptionSetMetadata("Omitted", Index=3, Color="#0000ff")]
        Omitted = 100000004,
        
        [EnumMember()]
        [OptionSetMetadata("Won", Index=4, Color="#0000ff")]
        Won = 100000005,
        
        [EnumMember()]
        [OptionSetMetadata("Lost", Index=5, Color="#0000ff")]
        Lost = 100000006,
    }
    
    [DataContract()]
    public enum PhoneCallState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum PhoneCall_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum PhoneCall_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0, Color="#3b79b7")]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Made", Index=1, Color="#358717")]
        Made = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2, Color="#666666")]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Received", Index=3, Color="#358717")]
        Received = 4,
    }
    
    [DataContract()]
    public enum PhoneToCaseProcessState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum PhoneToCaseProcess_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Finished", Index=1)]
        Finished = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Aborted", Index=2)]
        Aborted = 3,
    }
    
    [DataContract()]
    public enum QueueState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum Queue_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum Queue_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=1)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=2)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum Queue_IncomingEmailFilteringMethod {
        
        [EnumMember()]
        [OptionSetMetadata("All email messages", Index=0)]
        Allemailmessages = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages in response to Dynamics 365 email", Index=1)]
        EmailmessagesinresponsetoDynamics365email = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages from Dynamics 365 Leads, Contacts and Accounts", Index=2)]
        EmailmessagesfromDynamics365LeadsContactsandAccounts = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Email messages from Dynamics 365 records that are email enabled", Index=3)]
        EmailmessagesfromDynamics365recordsthatareemailenabled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("No email messages", Index=4)]
        Noemailmessages = 4,
    }
    
    [DataContract()]
    public enum Queue_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=1)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum Queue_QueueTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum Queue_QueueViewType {
        
        [EnumMember()]
        [OptionSetMetadata("Public", Index=0)]
        Public = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Private", Index=1)]
        Private = 1,
    }
    
    [DataContract()]
    public enum Queue_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=0)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum QueueItemState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum QueueItem_ObjectTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=15, Description="Servicerequestcaseassociatedwithacontract")]
        Case = 112,
        
        [EnumMember()]
        [OptionSetMetadata("Activity", Index=14, Description="TaskperformedortobeperformedbyauserAnactivityisanyactionforwhichanentrycanbemadeo" +
            "nacalendar")]
        Activity = 4200,
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=20, Description="Commitmentrepresentingatimeintervalwithstartendtimesandduration")]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=5, Description="Activitythatisdeliveredusingemailprotocols")]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=18, Description="Activitythattrackscalloutcomeandnumberofpagesforafaxandoptionallystoresanelectron" +
            "iccopyofthedocument")]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=12, Description="ActivitythattracksthedeliveryofaletterTheactivitycancontaintheelectroniccopyofthe" +
            "letter")]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Telefonopkald", Index=2, Description="Activitytotrackatelephonecall")]
        Telefonopkald = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=24, Description="Genericactivityrepresentingworkneededtobedone")]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=23, Description="ActivityofferedbytheorganizationtosatisfyitscustomersneedsEachserviceactivityincl" +
            "udesdatetimedurationandrequiredresources")]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Social Activity", Index=31, Description="Forinternaluseonly")]
        SocialActivity = 4216,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=27, Description="TheMasterappointmentofarecurringappointmentseries")]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=21, Description="Responsefromanexistingorapotentialnewcustomerforacampaign")]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=3, Description="Taskperformedortobeperformedbyauserforplanningorrunningacampaign")]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=16, Description="Systemoperationusedtoperformlengthyandasynchronousoperationsonlargedatasetssuchas" +
            "distributingacampaignactivityorquickcampaign")]
        QuickCampaign = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article", Index=4, Description="Organizationalknowledgeforinternalandexternaluse")]
        KnowledgeArticle = 9953,
        
        [EnumMember()]
        [OptionSetMetadata("Teams chat", Index=26, Description="ForinternaluseonlyEntitywhichstoresassociationdataofDynamics365recordswithMicroso" +
            "ftTeamschat")]
        Teamschat = 10143,
        
        [EnumMember()]
        [OptionSetMetadata("Knowledge Article Template", Index=11, Description="OrganizationalKnowledgeArticleTemplateforInternalandexternalcreationofKnowledgeAr" +
            "ticles")]
        KnowledgeArticleTemplate = 10159,
        
        [EnumMember()]
        [OptionSetMetadata("Invite Redemption", Index=35, Description="Holdsinformationabouttheredemptionofaninvite")]
        InviteRedemption = 10278,
        
        [EnumMember()]
        [OptionSetMetadata("Portal Comment", Index=17, Description="Anactivitywhichisusedtoshareinformationbetweentheuserandthecustomerontheportal")]
        PortalComment = 10279,
        
        [EnumMember()]
        [OptionSetMetadata("IoT Alert", Index=13)]
        IoTAlert = 10360,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=8)]
        CustomerVoicealert = 10557,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=25, Description="Activitythattracksasurveyinvitationsenttoaperson")]
        CustomerVoicesurveyinvite = 10567,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=34, Description="Responsetoasurvey")]
        CustomerVoicesurveyresponse = 10569,
        
        [EnumMember()]
        [OptionSetMetadata("Copilot Transcript", Index=19)]
        CopilotTranscript = 10605,
        
        [EnumMember()]
        [OptionSetMetadata("Overflow Action Config", Index=33, Description="Overflowactionconfigurations")]
        OverflowActionConfig = 10629,
        
        [EnumMember()]
        [OptionSetMetadata("Ongoing conversation (Deprecated)", Index=0, Description="Trackstheinteractionsbetweentheagentsandcustomer")]
        OngoingconversationDeprecated = 10653,
        
        [EnumMember()]
        [OptionSetMetadata("Conversation", Index=6, Description="Trackstheinteractionbetweentheagentsandcustomer")]
        Conversation = 10665,
        
        [EnumMember()]
        [OptionSetMetadata("Session", Index=32, Description="Sessionforinteractingwithacustomer")]
        Session = 10682,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=1, Description="Alertsthatnotifyscheduleboardusersofbookingissuesorinformation")]
        BookingAlert = 10922,
        
        [EnumMember()]
        [OptionSetMetadata("Fulfillment Preference", Index=30, Description="Specifytimegroupsconsistingofmultipletimewindowstobeusedforschedulingforexample")]
        FulfillmentPreference = 10941,
        
        [EnumMember()]
        [OptionSetMetadata("Time Group Detail", Index=36, Description="Specifyindividualtimewindowsunderatimegroup")]
        TimeGroupDetail = 10942,
        
        [EnumMember()]
        [OptionSetMetadata("Sagsnote", Index=28, Description="Anvendestilatangivesagsnoterpåsager")]
        Sagsnote = 11171,
        
        [EnumMember()]
        [OptionSetMetadata("ZZ_Velkomstaktivitet", Index=22)]
        ZZ_Velkomstaktivitet = 11224,
        
        [EnumMember()]
        [OptionSetMetadata("ZZ_Dimittendaktivitet", Index=7)]
        ZZ_Dimittendaktivitet = 11225,
        
        [EnumMember()]
        [OptionSetMetadata("ZZ_Redningsaktivitet", Index=9)]
        ZZ_Redningsaktivitet = 11226,
        
        [EnumMember()]
        [OptionSetMetadata("ZZ_Restanceaktivitet", Index=10)]
        ZZ_Restanceaktivitet = 11227,
        
        [EnumMember()]
        [OptionSetMetadata("Note", Index=29, Description="CustomtabelsomanvendestilatangivenoterpåAccountogContact")]
        Note = 11325,
    }
    
    [DataContract()]
    public enum QueueItem_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=1)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=0)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum SavedQueryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum SavedQuery_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum SystemUser_AccessMode {
        
        [EnumMember()]
        [OptionSetMetadata("Read-Write", Index=0)]
        ReadWrite = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Read", Index=2)]
        Read = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Support User", Index=3)]
        SupportUser = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Non-interactive", Index=4)]
        Noninteractive = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Delegated Admin", Index=5)]
        DelegatedAdmin = 5,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address1_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_AddressTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_Address2_ShippingMethodCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_AzureState {
        
        [EnumMember()]
        [OptionSetMetadata("Exists", Index=0)]
        Exists = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1)]
        Softdeleted = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Not found or hard deleted", Index=2)]
        Notfoundorharddeleted = 2,
    }
    
    [DataContract()]
    public enum SystemUser_CALType {
        
        [EnumMember()]
        [OptionSetMetadata("Professional", Index=0)]
        Professional = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Administrative", Index=1)]
        Administrative = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Basic", Index=2)]
        Basic = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Device Professional", Index=3)]
        DeviceProfessional = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Device Basic", Index=4)]
        DeviceBasic = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Essential", Index=5)]
        Essential = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Device Essential", Index=6)]
        DeviceEssential = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Enterprise", Index=7)]
        Enterprise = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Device Enterprise", Index=8)]
        DeviceEnterprise = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Sales", Index=9)]
        Sales = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Service", Index=10)]
        Service = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Field Service", Index=11)]
        FieldService = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Project Service", Index=12)]
        ProjectService = 12,
    }
    
    [DataContract()]
    public enum SystemUser_DeletedState {
        
        [EnumMember()]
        [OptionSetMetadata("Not deleted", Index=0)]
        Notdeleted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Soft deleted", Index=1)]
        Softdeleted = 1,
    }
    
    [DataContract()]
    public enum SystemUser_EmailRouterAccessApproval {
        
        [EnumMember()]
        [OptionSetMetadata("Empty", Index=0)]
        Empty = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Approved", Index=1)]
        Approved = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Pending Approval", Index=2)]
        PendingApproval = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Rejected", Index=3)]
        Rejected = 3,
    }
    
    [DataContract()]
    public enum SystemUser_IncomingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
        ServerSideSynchronizationorEmailRouter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Forward Mailbox", Index=3)]
        ForwardMailbox = 3,
    }
    
    [DataContract()]
    public enum SystemUser_InviteStatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Not Sent", Index=0)]
        InvitationNotSent = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Invited", Index=1)]
        Invited = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Near Expired", Index=2)]
        InvitationNearExpired = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Expired", Index=3)]
        InvitationExpired = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Accepted", Index=4)]
        InvitationAccepted = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Rejected", Index=5)]
        InvitationRejected = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Invitation Revoked", Index=6)]
        InvitationRevoked = 6,
    }
    
    [DataContract()]
    public enum SystemUser_OutgoingEmailDeliveryMethod {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Dynamics 365 for Outlook", Index=1)]
        MicrosoftDynamics365forOutlook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Server-Side Synchronization or Email Router", Index=2)]
        ServerSideSynchronizationorEmailRouter = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredAddressCode {
        
        [EnumMember()]
        [OptionSetMetadata("Mailing Address", Index=0)]
        MailingAddress = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Address", Index=1)]
        OtherAddress = 2,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredEmailCode {
        
        [EnumMember()]
        [OptionSetMetadata("Default Value", Index=0)]
        DefaultValue = 1,
    }
    
    [DataContract()]
    public enum SystemUser_PreferredPhoneCode {
        
        [EnumMember()]
        [OptionSetMetadata("Main Phone", Index=0)]
        MainPhone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Other Phone", Index=1)]
        OtherPhone = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Home Phone", Index=2)]
        HomePhone = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Mobile Phone", Index=3)]
        MobilePhone = 4,
    }
    
    [DataContract()]
    public enum SystemUser_SystemManagedUserType {
        
        [EnumMember()]
        [OptionSetMetadata("Entra User", Index=0)]
        EntraUser = 0,
        
        [EnumMember()]
        [OptionSetMetadata("C2 User", Index=1)]
        C2User = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Impersonable Stub User", Index=2)]
        ImpersonableStubUser = 2,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_AgentType {
        
        [EnumMember()]
        [OptionSetMetadata("Application user", Index=0, Color="#0000ff")]
        Applicationuser = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Bot application user", Index=1, Color="#0000ff")]
        Botapplicationuser = 192350001,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_BotProvider {
        
        [EnumMember()]
        [OptionSetMetadata("Virtual Agent", Index=0, Description="CCIfirstpartyBot", Color="#0000ff")]
        VirtualAgent = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=1, Description="Othertypeofbot", Color="#0000ff")]
        Other = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=2, Description="Indicatesthattheuserisnotabot", Color="#0000ff")]
        None = 192350002,
    }
    
    [DataContract()]
    public enum SystemUser_msdyn_UserType {
        
        [EnumMember()]
        [OptionSetMetadata("CRM User", Index=0, Color="#0000ff")]
        CRMUser = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("BOT User", Index=1, Color="#0000ff")]
        BOTUser = 192350001,
    }
    
    [DataContract()]
    public enum TaskState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
    }
    
    [DataContract()]
    public enum Task_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum Task_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Started", Index=0)]
        NotStarted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("In Progress", Index=1)]
        InProgress = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Waiting on someone else", Index=2)]
        Waitingonsomeoneelse = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=3)]
        Completed = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=4)]
        Canceled = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Deferred", Index=5)]
        Deferred = 7,
    }
    
    [DataContract()]
    public enum Team_MembershipType {
        
        [EnumMember()]
        [OptionSetMetadata("Members and guests", Index=0)]
        Membersandguests = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Members", Index=1)]
        Members = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Owners", Index=2)]
        Owners = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Guests", Index=3)]
        Guests = 3,
    }
    
    [DataContract()]
    public enum Team_TeamType {
        
        [EnumMember()]
        [OptionSetMetadata("Owner", Index=0)]
        Owner = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Access", Index=1)]
        Access = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Security Group", Index=2)]
        SecurityGroup = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Office Group", Index=3)]
        OfficeGroup = 3,
    }
    
    [DataContract()]
    public enum ff_activitiesState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_activities_ff_activitytype {
        
        [EnumMember()]
        [OptionSetMetadata("Dimittendaktivitet", Index=0)]
        Dimittendaktivitet = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Redningsaktivitet", Index=1)]
        Redningsaktivitet = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Restanceaktivitet", Index=2)]
        Restanceaktivitet = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Velkomstaktivitet", Index=3)]
        Velkomstaktivitet = 4,
    }
    
    [DataContract()]
    public enum ff_activities_ff_graduatestatusreasonnodialog {
        
        [EnumMember()]
        [OptionSetMetadata("Ingen kontakt efter max opkald", Index=0)]
        Ingenkontakteftermaxopkald = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ønsker ikke telefonisk kontakt", Index=1)]
        Ønskerikketelefoniskkontakt = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen kontakt I relevant interval", Index=2)]
        IngenkontaktIrelevantinterval = 3,
    }
    
    [DataContract()]
    public enum ff_activities_ff_graduatestatusreasonwithdialog {
        
        [EnumMember()]
        [OptionSetMetadata("Ny dimittenddato", Index=0)]
        Nydimittenddato = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Dimitteret og i job, ønsker medlemsskab", Index=1)]
        Dimitteretogijobønskermedlemsskab = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Dimitteret og I job, ønsker ikke medlemskab", Index=2)]
        DimitteretogIjobønskerikkemedlemskab = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Dimitteret, ledig og ønsker medlemsskab", Index=3)]
        Dimitteretledigogønskermedlemsskab = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Dimitteret, ledig og ønsker ikke medlemsskab", Index=4)]
        Dimitteretledigogønskerikkemedlemsskab = 5,
    }
    
    [DataContract()]
    public enum ff_activities_ff_membershipstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Jeg vil gerne ringes op", Index=0)]
        Jegvilgerneringesop = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Jeg ønsker at fortsætte som medlem", Index=1)]
        Jegønskeratfortsættesommedlem = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Jeg ønsker at opsige mit medlemskab", Index=2)]
        Jegønskeratopsigemitmedlemskab = 3,
    }
    
    [DataContract()]
    public enum ff_activities_ff_membershipstatusakasse {
        
        [EnumMember()]
        [OptionSetMetadata("Jeg er ikke medlem af en a-kasse", Index=0)]
        Jegerikkemedlemafenakasse = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Jeg er medlem af Finansforbundets a-kasse - en del af FTFa", Index=1)]
        JegermedlemafFinansforbundetsakasseendelafFTFa = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Jeg er medlem af en anden a-kasse", Index=2)]
        Jegermedlemafenandenakasse = 3,
    }
    
    [DataContract()]
    public enum ff_activities_ff_welcomestatus {
        
        [EnumMember()]
        [OptionSetMetadata("Lukket med dialog", Index=0)]
        Lukketmeddialog = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Lukket uden dialog", Index=1)]
        Lukketudendialog = 2,
    }
    
    [DataContract()]
    public enum ff_activities_ff_welcomestatusreason {
        
        [EnumMember()]
        [OptionSetMetadata("Ønsker ikke velkomstkald", Index=0)]
        Ønskerikkevelkomstkald = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen kontakt efter max opkald", Index=1)]
        Ingenkontakteftermaxopkald = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen kontakt i relevant interval", Index=2)]
        Ingenkontaktirelevantinterval = 3,
    }
    
    [DataContract()]
    public enum ff_activities_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=2)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Annulleret", Index=0)]
        Annulleret = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Overskredet Forfaldsdato", Index=1)]
        OverskredetForfaldsdato = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Lukket med dialog", Index=3)]
        Lukketmeddialog = 122400002,
        
        [EnumMember()]
        [OptionSetMetadata("Lukket uden dialog", Index=4)]
        Lukketudendialog = 122400003,
    }
    
    [DataContract()]
    public enum ff_awardgiftcardState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_awardgiftcard_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Awaiting dispatch", Index=0)]
        Awaitingdispatch = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Posted", Index=1)]
        Posted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Sent", Index=2)]
        Sent = 122400001,
    }
    
    [DataContract()]
    public enum ff_casecategoryState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_casecategory_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_casenoteState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum ff_casenote_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ff_casenote_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum ff_casenote_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum ff_casetypeState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_casetype_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_collectiveagreementState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_collectiveagreement_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_committeememberState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_committeemember_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_configurationState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_configuration_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_employmentState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_employment_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tidligere ansættelse", Index=1)]
        Tidligereansættelse = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Fremtidig ansættelse", Index=2)]
        Fremtidigansættelse = 122400001,
    }
    
    [DataContract()]
    public enum ff_eventattendeeState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_eventattendee_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_giftcardState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_giftcard_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_incidentpartyState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_incidentparty_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_medlemsnoteState {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 3,
    }
    
    [DataContract()]
    public enum ff_medlemsnote_InstanceTypeCode {
        
        [EnumMember()]
        [OptionSetMetadata("Not Recurring", Index=0)]
        NotRecurring = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Master", Index=1)]
        RecurringMaster = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Instance", Index=2)]
        RecurringInstance = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Exception", Index=3)]
        RecurringException = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Future Exception", Index=4)]
        RecurringFutureException = 4,
    }
    
    [DataContract()]
    public enum ff_medlemsnote_PriorityCode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum ff_medlemsnote_StatusCode {
        
        [EnumMember()]
        [OptionSetMetadata("Open", Index=0)]
        Open = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Completed", Index=1)]
        Completed = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Canceled", Index=2)]
        Canceled = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Scheduled", Index=3)]
        Scheduled = 4,
    }
    
    [DataContract()]
    public enum ff_membershipfeeState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_membershipfee_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_positionoftrustState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_positionoftrust_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_positionoftrusttypeState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_positionoftrusttype_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_reportingofopportunityState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_reportingofopportunity_ff_worksituation {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I arbejde", Index=1)]
        Iarbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Dimittend", Index=3)]
        Dimittend = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Pensionist", Index=4)]
        Pensionist = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Øvrige", Index=5)]
        Øvrige = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Uoplyst", Index=6)]
        Uoplyst = 7,
    }
    
    [DataContract()]
    public enum ff_reportingofopportunity_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum ff_unionState {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 1,
    }
    
    [DataContract()]
    public enum ff_union_statuscode {
        
        [EnumMember()]
        [OptionSetMetadata("Active", Index=0)]
        Active = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive", Index=1)]
        Inactive = 2,
    }
    
    [DataContract()]
    public enum activitypointer_activitytypecode {
        
        [EnumMember()]
        [OptionSetMetadata("Appointment", Index=4)]
        Appointment = 4201,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=2)]
        Email = 4202,
        
        [EnumMember()]
        [OptionSetMetadata("Fax", Index=0)]
        Fax = 4204,
        
        [EnumMember()]
        [OptionSetMetadata("Case Resolution", Index=13)]
        CaseResolution = 4206,
        
        [EnumMember()]
        [OptionSetMetadata("Letter", Index=3)]
        Letter = 4207,
        
        [EnumMember()]
        [OptionSetMetadata("Opportunity Close", Index=15)]
        OpportunityClose = 4208,
        
        [EnumMember()]
        [OptionSetMetadata("Order Close", Index=16)]
        OrderClose = 4209,
        
        [EnumMember()]
        [OptionSetMetadata("Telefonopkald", Index=1)]
        Telefonopkald = 4210,
        
        [EnumMember()]
        [OptionSetMetadata("Quote Close", Index=17)]
        QuoteClose = 4211,
        
        [EnumMember()]
        [OptionSetMetadata("Task", Index=5)]
        Task = 4212,
        
        [EnumMember()]
        [OptionSetMetadata("Service Activity", Index=14)]
        ServiceActivity = 4214,
        
        [EnumMember()]
        [OptionSetMetadata("Recurring Appointment", Index=6)]
        RecurringAppointment = 4251,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Response", Index=12)]
        CampaignResponse = 4401,
        
        [EnumMember()]
        [OptionSetMetadata("Campaign Activity", Index=11)]
        CampaignActivity = 4402,
        
        [EnumMember()]
        [OptionSetMetadata("Quick Campaign", Index=10)]
        QuickCampaign = 4406,
        
        [EnumMember()]
        [OptionSetMetadata("Teams chat", Index=7)]
        Teamschat = 10143,
        
        [EnumMember()]
        [OptionSetMetadata("Invite Redemption", Index=8)]
        InviteRedemption = 10278,
        
        [EnumMember()]
        [OptionSetMetadata("Portal Comment", Index=9)]
        PortalComment = 10279,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice alert", Index=18)]
        CustomerVoicealert = 10557,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey invite", Index=19)]
        CustomerVoicesurveyinvite = 10567,
        
        [EnumMember()]
        [OptionSetMetadata("Customer Voice survey response", Index=20)]
        CustomerVoicesurveyresponse = 10569,
        
        [EnumMember()]
        [OptionSetMetadata("Copilot Transcript", Index=21)]
        CopilotTranscript = 10605,
        
        [EnumMember()]
        [OptionSetMetadata("Conversation", Index=22)]
        Conversation = 10665,
        
        [EnumMember()]
        [OptionSetMetadata("Session", Index=23)]
        Session = 10682,
        
        [EnumMember()]
        [OptionSetMetadata("Booking Alert", Index=24)]
        BookingAlert = 10922,
        
        [EnumMember()]
        [OptionSetMetadata("Sagsnote", Index=25)]
        Sagsnote = 11171,
        
        [EnumMember()]
        [OptionSetMetadata("Velkomstaktivitet", Index=26)]
        Velkomstaktivitet = 11224,
        
        [EnumMember()]
        [OptionSetMetadata("Dimittendaktivitet", Index=27)]
        Dimittendaktivitet = 11225,
        
        [EnumMember()]
        [OptionSetMetadata("Redningsaktivitet", Index=28)]
        Redningsaktivitet = 11226,
        
        [EnumMember()]
        [OptionSetMetadata("Restanceaktivitet", Index=29)]
        Restanceaktivitet = 11227,
        
        [EnumMember()]
        [OptionSetMetadata("Medlems note", Index=30)]
        Medlemsnote = 11325,
    }
    
    [DataContract()]
    public enum activitypointer_deliveryprioritycode {
        
        [EnumMember()]
        [OptionSetMetadata("Low", Index=0)]
        Low = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Normal", Index=1)]
        Normal = 1,
        
        [EnumMember()]
        [OptionSetMetadata("High", Index=2)]
        High = 2,
    }
    
    [DataContract()]
    public enum socialprofile_community {
        
        [EnumMember()]
        [OptionSetMetadata("Other", Index=17, Description="Otherdefault", Color="")]
        Other = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Facebook", Index=15, Description="Facebookitem", Color="")]
        Facebook = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Twitter", Index=16, Description="Twitter", Color="")]
        Twitter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Line", Index=13, Color="#0000ff")]
        Line = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Wechat", Index=14, Color="#0000ff")]
        Wechat = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Cortana", Index=0, Color="#0000ff")]
        Cortana = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Direct Line", Index=1, Color="#0000ff")]
        DirectLine = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Microsoft Teams", Index=2, Color="#0000ff")]
        MicrosoftTeams = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Direct Line Speech", Index=3, Color="#0000ff")]
        DirectLineSpeech = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=4, Color="#0000ff")]
        Email = 9,
        
        [EnumMember()]
        [OptionSetMetadata("GroupMe", Index=5, Color="#0000ff")]
        GroupMe = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Kik", Index=6, Color="#0000ff")]
        Kik = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Telegram", Index=7, Color="#0000ff")]
        Telegram = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Skype", Index=8, Color="#0000ff")]
        Skype = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Slack", Index=9, Color="#0000ff")]
        Slack = 14,
        
        [EnumMember()]
        [OptionSetMetadata("WhatsApp", Index=10, Color="#0000ff")]
        WhatsApp = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Apple Messages For Business", Index=11, Color="#0000ff")]
        AppleMessagesForBusiness = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Google\'s Business Messages", Index=12, Color="#0000ff")]
        GooglesBusinessMessages = 17,
    }
    
    [DataContract()]
    public enum onlinemeetingtype {
        
        [EnumMember()]
        [OptionSetMetadata("Teams Meeting", Index=0)]
        TeamsMeeting = 1,
    }
    
    [DataContract()]
    public enum ff_jobsituation {
        
        [EnumMember()]
        [OptionSetMetadata("Studerende", Index=0)]
        Studerende = 1,
        
        [EnumMember()]
        [OptionSetMetadata("I Arbejde", Index=1)]
        IArbejde = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Ledig", Index=2)]
        Ledig = 3,
    }
    
    [DataContract()]
    public enum ff_reasonfortermination {
        
        [EnumMember()]
        [OptionSetMetadata("Arbejder i udlandet på udenlandske vilkår", Index=0)]
        Arbejderiudlandetpåudenlandskevilkår = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Bruger ikke mit medlemskab", Index=1)]
        Brugerikkemitmedlemskab = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Er blevet ledig", Index=2)]
        Erblevetledig = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Er blevet selvstændig", Index=3)]
        Erblevetselvstændig = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Er på pension/skal på pension og ønsker ikke at fortsætte", Index=4)]
        Erpåpensionskalpåpensionogønskerikkeatfortsætte = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Færdig med studie og ønsker ikke at fortsætte", Index=5)]
        Færdigmedstudieogønskerikkeatfortsætte = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Færdig med studie, og det nye job er ikke finansrettet", Index=6)]
        Færdigmedstudieogdetnyejoberikkefinansrettet = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Har bedre forsikring gennem anden fagforening", Index=7)]
        Harbedreforsikringgennemandenfagforening = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Har ikke længere job i den finansielle sektor", Index=8)]
        Harikkelængerejobidenfinansiellesektor = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Har ikke råd/vil spare penge", Index=9)]
        Harikkerådvilsparepenge = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Har skiftet job til virksomhed uden overenskomst", Index=10)]
        Harskiftetjobtilvirksomhedudenoverenskomst = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Har skiftet job til virksomhed under anden overenskomst", Index=11)]
        Harskiftetjobtilvirksomhedunderandenoverenskomst = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Kontingentet for dyrt", Index=12)]
        Kontingentetfordyrt = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Lønsikring for dyr", Index=13)]
        Lønsikringfordyr = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Orlov (syg, barsel, sabbat eller selvvalg)", Index=14)]
        Orlovsygbarselsabbatellerselvvalg = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Samlet pris Akasse+Fagforening for dyr", Index=15)]
        SamletprisAkasseFagforeningfordyr = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Uenig politisk", Index=16)]
        Uenigpolitisk = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Utilfreds med rådgivning", Index=17)]
        Utilfredsmedrådgivning = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Utilfreds med service og/eller fordele", Index=18)]
        Utilfredsmedserviceogellerfordele = 19,
    }
    
    [DataContract()]
    public enum powerpagelanguages {
        
        [EnumMember()]
        [OptionSetMetadata("Arabic", Index=0, Color="#0000ff")]
        Arabic = 1025,
        
        [EnumMember()]
        [OptionSetMetadata("Bulgarian - Bulgaria", Index=2, Color="#0000ff")]
        BulgarianBulgaria = 1026,
        
        [EnumMember()]
        [OptionSetMetadata("Catalan - Catalan", Index=3, Color="#0000ff")]
        CatalanCatalan = 1027,
        
        [EnumMember()]
        [OptionSetMetadata("Chinese - Traditional", Index=6, Color="#0000ff")]
        ChineseTraditional = 1028,
        
        [EnumMember()]
        [OptionSetMetadata("Czech - Czech Republic", Index=8, Color="#0000ff")]
        CzechCzechRepublic = 1029,
        
        [EnumMember()]
        [OptionSetMetadata("Danish - Denmark", Index=9, Color="#0000ff")]
        DanishDenmark = 1030,
        
        [EnumMember()]
        [OptionSetMetadata("German - Germany", Index=16, Color="#0000ff")]
        GermanGermany = 1031,
        
        [EnumMember()]
        [OptionSetMetadata("Greek - Greece", Index=17, Color="#0000ff")]
        GreekGreece = 1032,
        
        [EnumMember()]
        [OptionSetMetadata("English", Index=11, Color="#0000ff")]
        English = 1033,
        
        [EnumMember()]
        [OptionSetMetadata("Finnish - Finland", Index=13, Color="#0000ff")]
        FinnishFinland = 1035,
        
        [EnumMember()]
        [OptionSetMetadata("French - France", Index=14, Color="#0000ff")]
        FrenchFrance = 1036,
        
        [EnumMember()]
        [OptionSetMetadata("Hebrew", Index=18, Color="#0000ff")]
        Hebrew = 1037,
        
        [EnumMember()]
        [OptionSetMetadata("Hungarian - Hungary", Index=20, Color="#0000ff")]
        HungarianHungary = 1038,
        
        [EnumMember()]
        [OptionSetMetadata("Italian - Italy", Index=22, Color="#0000ff")]
        ItalianItaly = 1040,
        
        [EnumMember()]
        [OptionSetMetadata("Japanese - Japan", Index=23, Color="#0000ff")]
        JapaneseJapan = 1041,
        
        [EnumMember()]
        [OptionSetMetadata("Korean - Korea", Index=25, Color="#0000ff")]
        KoreanKorea = 1042,
        
        [EnumMember()]
        [OptionSetMetadata("Dutch - Netherlands", Index=10, Color="#0000ff")]
        DutchNetherlands = 1043,
        
        [EnumMember()]
        [OptionSetMetadata("Norwegian (Bokmål) - Norway", Index=29, Color="#0000ff")]
        NorwegianBokmålNorway = 1044,
        
        [EnumMember()]
        [OptionSetMetadata("Polish - Poland", Index=30, Color="#0000ff")]
        PolishPoland = 1045,
        
        [EnumMember()]
        [OptionSetMetadata("Portuguese - Brazil", Index=31, Color="#0000ff")]
        PortugueseBrazil = 1046,
        
        [EnumMember()]
        [OptionSetMetadata("Romanian - Romania", Index=33, Color="#0000ff")]
        RomanianRomania = 1048,
        
        [EnumMember()]
        [OptionSetMetadata("Russian - Russia", Index=34, Color="#0000ff")]
        RussianRussia = 1049,
        
        [EnumMember()]
        [OptionSetMetadata("Croatian - Croatia", Index=7, Color="#0000ff")]
        CroatianCroatia = 1050,
        
        [EnumMember()]
        [OptionSetMetadata("Slovak - Slovakia", Index=37, Color="#0000ff")]
        SlovakSlovakia = 1051,
        
        [EnumMember()]
        [OptionSetMetadata("Swedish - Sweden", Index=40, Color="#0000ff")]
        SwedishSweden = 1053,
        
        [EnumMember()]
        [OptionSetMetadata("Thai - Thailand", Index=41, Color="#0000ff")]
        ThaiThailand = 1054,
        
        [EnumMember()]
        [OptionSetMetadata("Turkish - Türkiye", Index=42, Color="#0000ff")]
        TurkishTürkiye = 1055,
        
        [EnumMember()]
        [OptionSetMetadata("Indonesian - Indonesia", Index=21, Color="#0000ff")]
        IndonesianIndonesia = 1057,
        
        [EnumMember()]
        [OptionSetMetadata("Ukrainian - Ukraine", Index=43, Color="#0000ff")]
        UkrainianUkraine = 1058,
        
        [EnumMember()]
        [OptionSetMetadata("Slovenian - Slovenia", Index=38, Color="#0000ff")]
        SlovenianSlovenia = 1060,
        
        [EnumMember()]
        [OptionSetMetadata("Estonian - Estonia", Index=12, Color="#0000ff")]
        EstonianEstonia = 1061,
        
        [EnumMember()]
        [OptionSetMetadata("Latvian - Latvia", Index=26, Color="#0000ff")]
        LatvianLatvia = 1062,
        
        [EnumMember()]
        [OptionSetMetadata("Lithuanian - Lithuania", Index=27, Color="#0000ff")]
        LithuanianLithuania = 1063,
        
        [EnumMember()]
        [OptionSetMetadata("Vietnamese - Vietnam", Index=44, Color="#0000ff")]
        VietnameseVietnam = 1066,
        
        [EnumMember()]
        [OptionSetMetadata("Basque - Basque", Index=1, Color="#0000ff")]
        BasqueBasque = 1069,
        
        [EnumMember()]
        [OptionSetMetadata("Hindi - India", Index=19, Color="#0000ff")]
        HindiIndia = 1081,
        
        [EnumMember()]
        [OptionSetMetadata("Malay - Malaysia", Index=28, Color="#0000ff")]
        MalayMalaysia = 1086,
        
        [EnumMember()]
        [OptionSetMetadata("Kazakh - Kazakhstan", Index=24, Color="#0000ff")]
        KazakhKazakhstan = 1087,
        
        [EnumMember()]
        [OptionSetMetadata("Galician - Spain", Index=15, Color="#0000ff")]
        GalicianSpain = 1110,
        
        [EnumMember()]
        [OptionSetMetadata("Chinese - China", Index=4, Color="#0000ff")]
        ChineseChina = 2052,
        
        [EnumMember()]
        [OptionSetMetadata("Portuguese - Portugal", Index=32, Color="#0000ff")]
        PortuguesePortugal = 2070,
        
        [EnumMember()]
        [OptionSetMetadata("Serbian (Latin) - Serbia", Index=36, Color="#0000ff")]
        SerbianLatinSerbia = 2074,
        
        [EnumMember()]
        [OptionSetMetadata("Chinese - Hong Kong SAR", Index=5, Color="#0000ff")]
        ChineseHongKongSAR = 3076,
        
        [EnumMember()]
        [OptionSetMetadata("Spanish (Traditional Sort) - Spain", Index=39, Color="#0000ff")]
        SpanishTraditionalSortSpain = 3082,
        
        [EnumMember()]
        [OptionSetMetadata("Serbian (Cyrillic) - Serbia", Index=35, Color="#0000ff")]
        SerbianCyrillicSerbia = 3098,
    }
    
    [DataContract()]
    public enum entitytype {
        
        [EnumMember()]
        [OptionSetMetadata("Case", Index=0, Color="#0000ff")]
        Case = 0,
    }
    
    [DataContract()]
    public enum ff_casesubstatus {
        
        [EnumMember()]
        [OptionSetMetadata("Afventer tildeling af sagsbehandler", Index=0)]
        Afventertildelingafsagsbehandler = 122400000,
        
        [EnumMember()]
        [OptionSetMetadata("Ikke påbegyndt", Index=1)]
        Ikkepåbegyndt = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Lokalforhandling", Index=2)]
        Lokalforhandling = 122400004,
        
        [EnumMember()]
        [OptionSetMetadata("Organisationsmøde", Index=3)]
        Organisationsmøde = 122400005,
        
        [EnumMember()]
        [OptionSetMetadata("Forhandling med virksomheden", Index=4)]
        Forhandlingmedvirksomheden = 122400006,
        
        [EnumMember()]
        [OptionSetMetadata("Påkrav", Index=5)]
        Påkrav = 122400007,
        
        [EnumMember()]
        [OptionSetMetadata("Afventer afgørelse i første instans", Index=6)]
        Afventerafgørelseiførsteinstans = 122400009,
        
        [EnumMember()]
        [OptionSetMetadata("Afventer afgørelse i Ankestyrelsen", Index=7)]
        AfventerafgørelseiAnkestyrelsen = 122400010,
        
        [EnumMember()]
        [OptionSetMetadata("Hos ekstern advokat", Index=8)]
        Hoseksternadvokat = 122400011,
        
        [EnumMember()]
        [OptionSetMetadata("Rådgivning", Index=9)]
        Rådgivning = 122400012,
    }
    
    [DataContract()]
    public enum ff_formofemployment {
        
        [EnumMember()]
        [OptionSetMetadata("STOK/VOK ansat", Index=0)]
        STOKVOKansat = 122400000,
        
        [EnumMember()]
        [OptionSetMetadata("ROK ansat", Index=1)]
        ROKansat = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Fintech ansat", Index=2)]
        Fintechansat = 122400002,
        
        [EnumMember()]
        [OptionSetMetadata("Omfattet af anden OK", Index=3)]
        OmfattetafandenOK = 122400003,
        
        [EnumMember()]
        [OptionSetMetadata("Ingen OK", Index=4)]
        IngenOK = 122400004,
        
        [EnumMember()]
        [OptionSetMetadata("Selvstændig", Index=5)]
        Selvstændig = 122400005,
    }
    
    [DataContract()]
    public enum incident_caseorigincode {
        
        [EnumMember()]
        [OptionSetMetadata("Phone", Index=1, Color="#FCD116")]
        Phone = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Email", Index=2, Color="#00B294")]
        Email = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Web", Index=3, Color="#FF8C00")]
        Web = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Facebook", Index=4, Color="#0086FF")]
        Facebook = 2483,
        
        [EnumMember()]
        [OptionSetMetadata("Twitter", Index=5, Color="#0086FF")]
        Twitter = 3986,
        
        [EnumMember()]
        [OptionSetMetadata("IoT", Index=0, Color="#0000ff")]
        IoT = 700610000,
    }
    
    [DataContract()]
    public enum servicestage {
        
        [EnumMember()]
        [OptionSetMetadata("Identify", Index=0)]
        Identify = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Research", Index=1)]
        Research = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Resolve", Index=2)]
        Resolve = 2,
    }
    
    [DataContract()]
    public enum socialactivity_postmessagetype {
        
        [EnumMember()]
        [OptionSetMetadata("Public Message", Index=0)]
        PublicMessage = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Private Message", Index=1)]
        PrivateMessage = 1,
    }
    
    [DataContract()]
    public enum budgetstatus {
        
        [EnumMember()]
        [OptionSetMetadata("No Committed Budget", Index=0)]
        NoCommittedBudget = 0,
        
        [EnumMember()]
        [OptionSetMetadata("May Buy", Index=1)]
        MayBuy = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Can Buy", Index=2)]
        CanBuy = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Will Buy", Index=3)]
        WillBuy = 3,
    }
    
    [DataContract()]
    public enum ff_disqualificationreason {
        
        [EnumMember()]
        [OptionSetMetadata("Allerede medlem", Index=0)]
        Alleredemedlem = 122400000,
        
        [EnumMember()]
        [OptionSetMetadata("Eksisterende åben salgsmulighed", Index=1)]
        Eksisterendeåbensalgsmulighed = 122400001,
    }
    
    [DataContract()]
    public enum initialcommunication {
        
        [EnumMember()]
        [OptionSetMetadata("Contacted", Index=0)]
        Contacted = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Not Contacted", Index=1)]
        NotContacted = 1,
    }
    
    [DataContract()]
    public enum lead_salesstage {
        
        [EnumMember()]
        [OptionSetMetadata("Qualify", Index=0)]
        Qualify = 0,
    }
    
    [DataContract()]
    public enum msdyn_leadgradeoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Grade A", Index=0, Color="#0000ff")]
        GradeA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Grade B", Index=1, Color="#0000ff")]
        GradeB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Grade C", Index=2, Color="#0000ff")]
        GradeC = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Grade D", Index=3, Color="#0000ff")]
        GradeD = 3,
    }
    
    [DataContract()]
    public enum msdyn_leadscoretrendoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Improving", Index=0, Color="#0000ff")]
        Improving = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Steady", Index=1, Color="#0000ff")]
        Steady = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Declining", Index=2, Color="#0000ff")]
        Declining = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Not enough info", Index=3, Color="#0000ff")]
        Notenoughinfo = 3,
    }
    
    [DataContract()]
    public enum need {
        
        [EnumMember()]
        [OptionSetMetadata("Must have", Index=0)]
        Musthave = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Should have", Index=1)]
        Shouldhave = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Good to have", Index=2)]
        Goodtohave = 2,
        
        [EnumMember()]
        [OptionSetMetadata("No need", Index=3)]
        Noneed = 3,
    }
    
    [DataContract()]
    public enum purchaseprocess {
        
        [EnumMember()]
        [OptionSetMetadata("Individual", Index=0)]
        Individual = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Committee", Index=1)]
        Committee = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=2)]
        Unknown = 2,
    }
    
    [DataContract()]
    public enum purchasetimeframe {
        
        [EnumMember()]
        [OptionSetMetadata("Immediate", Index=0)]
        Immediate = 0,
        
        [EnumMember()]
        [OptionSetMetadata("This Quarter", Index=1)]
        ThisQuarter = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Next Quarter", Index=2)]
        NextQuarter = 2,
        
        [EnumMember()]
        [OptionSetMetadata("This Year", Index=3)]
        ThisYear = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Unknown", Index=4)]
        Unknown = 4,
    }
    
    [DataContract()]
    public enum msdyn_opportunitygradeoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Grade A", Index=0, Color="#0000ff")]
        GradeA = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Grade B", Index=1, Color="#0000ff")]
        GradeB = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Grade C", Index=2, Color="#0000ff")]
        GradeC = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Grade D", Index=3, Color="#0000ff")]
        GradeD = 3,
    }
    
    [DataContract()]
    public enum msdyn_opportunityscoretrendoptset {
        
        [EnumMember()]
        [OptionSetMetadata("Improving", Index=0, Color="#0000ff")]
        Improving = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Steady", Index=1, Color="#0000ff")]
        Steady = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Declining", Index=2, Color="#0000ff")]
        Declining = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Not enough info", Index=3, Color="#0000ff")]
        Notenoughinfo = 3,
    }
    
    [DataContract()]
    public enum opportunity_salesstage {
        
        [EnumMember()]
        [OptionSetMetadata("Qualify", Index=0)]
        Qualify = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Develop", Index=1)]
        Develop = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Propose", Index=2)]
        Propose = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Close", Index=3)]
        Close = 3,
    }
    
    [DataContract()]
    public enum qooi_pricingerrorcode {
        
        [EnumMember()]
        [OptionSetMetadata("None", Index=0)]
        None = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Detail Error", Index=1)]
        DetailError = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level", Index=2)]
        MissingPriceLevel = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive Price Level", Index=3)]
        InactivePriceLevel = 3,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Quantity", Index=4)]
        MissingQuantity = 4,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Unit Price", Index=5)]
        MissingUnitPrice = 5,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product", Index=6)]
        MissingProduct = 6,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Product", Index=7)]
        InvalidProduct = 7,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Pricing Code", Index=8)]
        MissingPricingCode = 8,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Pricing Code", Index=9)]
        InvalidPricingCode = 9,
        
        [EnumMember()]
        [OptionSetMetadata("Missing UOM", Index=10)]
        MissingUOM = 10,
        
        [EnumMember()]
        [OptionSetMetadata("Product Not In Price Level", Index=11)]
        ProductNotInPriceLevel = 11,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level Amount", Index=12)]
        MissingPriceLevelAmount = 12,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price Level Percentage", Index=13)]
        MissingPriceLevelPercentage = 13,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Price", Index=14)]
        MissingPrice = 14,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Current Cost", Index=15)]
        MissingCurrentCost = 15,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Standard Cost", Index=16)]
        MissingStandardCost = 16,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Amount", Index=17)]
        InvalidPriceLevelAmount = 17,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Percentage", Index=18)]
        InvalidPriceLevelPercentage = 18,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price", Index=19)]
        InvalidPrice = 19,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Current Cost", Index=20)]
        InvalidCurrentCost = 20,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Standard Cost", Index=21)]
        InvalidStandardCost = 21,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Policy", Index=22)]
        InvalidRoundingPolicy = 22,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Option", Index=23)]
        InvalidRoundingOption = 23,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Rounding Amount", Index=24)]
        InvalidRoundingAmount = 24,
        
        [EnumMember()]
        [OptionSetMetadata("Price Calculation Error", Index=25)]
        PriceCalculationError = 25,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Discount Type", Index=26)]
        InvalidDiscountType = 26,
        
        [EnumMember()]
        [OptionSetMetadata("Discount Type Invalid State", Index=27)]
        DiscountTypeInvalidState = 27,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Discount", Index=28)]
        InvalidDiscount = 28,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Quantity", Index=29)]
        InvalidQuantity = 29,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Pricing Precision", Index=30)]
        InvalidPricingPrecision = 30,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product Default UOM", Index=31)]
        MissingProductDefaultUOM = 31,
        
        [EnumMember()]
        [OptionSetMetadata("Missing Product UOM Schedule ", Index=32)]
        MissingProductUOMSchedule = 32,
        
        [EnumMember()]
        [OptionSetMetadata("Inactive Discount Type", Index=33)]
        InactiveDiscountType = 33,
        
        [EnumMember()]
        [OptionSetMetadata("Invalid Price Level Currency", Index=34)]
        InvalidPriceLevelCurrency = 34,
        
        [EnumMember()]
        [OptionSetMetadata("Price Attribute Out Of Range", Index=35)]
        PriceAttributeOutOfRange = 35,
        
        [EnumMember()]
        [OptionSetMetadata("Base Currency Attribute Overflow", Index=36)]
        BaseCurrencyAttributeOverflow = 36,
        
        [EnumMember()]
        [OptionSetMetadata("Base Currency Attribute Underflow", Index=37)]
        BaseCurrencyAttributeUnderflow = 37,
        
        [EnumMember()]
        [OptionSetMetadata("Transaction currency is not set for the product price list item", Index=38)]
        Transactioncurrencyisnotsetfortheproductpricelistitem = 38,
    }
    
    [DataContract()]
    public enum qooi_skippricecalculation {
        
        [EnumMember()]
        [OptionSetMetadata("DoPriceCalcAlways", Index=0)]
        DoPriceCalcAlways = 0,
        
        [EnumMember()]
        [OptionSetMetadata("SkipPriceCalcOnRetrieve", Index=1)]
        SkipPriceCalcOnRetrieve = 1,
    }
    
    [DataContract()]
    public enum msdyn_queueassignmentstrategy {
        
        [EnumMember()]
        [OptionSetMetadata("Omnichannel Assignment", Index=0, Color="#0000ff")]
        OmnichannelAssignment = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Round Robin", Index=1, Color="#0000ff")]
        RoundRobin = 192350001,
        
        [EnumMember()]
        [OptionSetMetadata("Custom Assignment Configuration", Index=2, Color="#0000ff")]
        CustomAssignmentConfiguration = 192350002,
        
        [EnumMember()]
        [OptionSetMetadata("Longest Idle", Index=3, Color="#0000ff")]
        LongestIdle = 192350003,
    }
    
    [DataContract()]
    public enum msdyn_queuetype {
        
        [EnumMember()]
        [OptionSetMetadata("Messaging", Index=0, Color="#0000ff")]
        Messaging = 192350000,
        
        [EnumMember()]
        [OptionSetMetadata("Entity", Index=1, Color="#0000ff")]
        Entity = 192350001,
    }
    
    [DataContract()]
    public enum componentstate {
        
        [EnumMember()]
        [OptionSetMetadata("Published", Index=0)]
        Published = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Unpublished", Index=1)]
        Unpublished = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted", Index=2)]
        Deleted = 2,
        
        [EnumMember()]
        [OptionSetMetadata("Deleted Unpublished", Index=3)]
        DeletedUnpublished = 3,
    }
    
    [DataContract()]
    public enum ff_collectiveagreementtype {
        
        [EnumMember()]
        [OptionSetMetadata("Business", Index=1)]
        Business = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Standard", Index=0)]
        Standard = 1,
    }
    
    [DataContract()]
    public enum ff_typeofgiftcard {
        
        [EnumMember()]
        [OptionSetMetadata("Henviser", Index=0)]
        Henviser = 0,
        
        [EnumMember()]
        [OptionSetMetadata("Nyt medlem", Index=1)]
        Nytmedlem = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Henviser og nyt medlem", Index=2)]
        Henviserognytmedlem = 2,
    }
    
    [DataContract()]
    public enum ff_positionoftrusttype_Enum {
        
        [EnumMember()]
        [OptionSetMetadata("Tillidsrepræsentant", Index=0)]
        Tillidsrepræsentant = 122400000,
        
        [EnumMember()]
        [OptionSetMetadata("Arbejdsmiljørepræsentant", Index=1)]
        Arbejdsmiljørepræsentant = 122400001,
        
        [EnumMember()]
        [OptionSetMetadata("Medarbejdervalgt bestyrelsesmedlem", Index=2)]
        Medarbejdervalgtbestyrelsesmedlem = 122400002,
    }
    
    [DataContract()]
    public enum ff_resultofopportunity {
        
        [EnumMember()]
        [OptionSetMetadata("Vundet", Index=0)]
        Vundet = 1,
        
        [EnumMember()]
        [OptionSetMetadata("Tabt", Index=1)]
        Tabt = 2,
    }
}
